Search.setIndex({"docnames": [".ttnn_runtime_artifacts/tt_metal/README", ".ttnn_runtime_artifacts/tt_metal/hostdevcommon/README", ".ttnn_runtime_artifacts/tt_metal/third_party/lfs/README", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/README", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/cast/chrono", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/cast/custom", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/cast/eigen", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/cast/functional", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/cast/index", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/cast/overview", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/cast/stl", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/cast/strings", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/classes", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/embedding", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/exceptions", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/functions", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/misc", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/pycpp/index", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/pycpp/numpy", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/pycpp/object", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/pycpp/utilities", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/smart_ptrs", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/cmake/index", ".ttnn_runtime_artifacts/tt_metal/third_party/sfpi/README", ".ttnn_runtime_artifacts/tt_metal/third_party/taskflow/3rd-party/README", ".ttnn_runtime_artifacts/tt_metal/third_party/taskflow/3rd-party/eigen-3.3.7/README", ".ttnn_runtime_artifacts/tt_metal/third_party/taskflow/3rd-party/eigen-3.3.7/unsupported/Eigen/CXX11/src/Tensor/README", ".ttnn_runtime_artifacts/tt_metal/third_party/taskflow/3rd-party/spdlog/fmt/bundled/LICENSE", ".ttnn_runtime_artifacts/tt_metal/third_party/taskflow/3rd-party/tbb/README", ".ttnn_runtime_artifacts/tt_metal/third_party/taskflow/3rd-party/tbb/cmake/README", ".ttnn_runtime_artifacts/tt_metal/third_party/taskflow/README", ".ttnn_runtime_artifacts/tt_metal/third_party/taskflow/benchmarks/benchmarks", ".ttnn_runtime_artifacts/tt_metal/third_party/tracy/README", ".ttnn_runtime_artifacts/tt_metal/third_party/tracy/examples/ToyPathTracer/license", ".ttnn_runtime_artifacts/tt_metal/third_party/tracy/imgui/misc/freetype/README", ".ttnn_runtime_artifacts/tt_metal/third_party/tt_llk_blackhole/README", ".ttnn_runtime_artifacts/tt_metal/third_party/tt_llk_grayskull/README", ".ttnn_runtime_artifacts/tt_metal/third_party/tt_llk_wormhole_b0/README", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/README", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/README.emu", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/CONTRIBUTING", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/ChangeLog", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/README", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/doc/ChangeLog-old", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/doc/api", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/doc/get-started", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/doc/index", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/doc/syntax", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/support/bazel/README", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/test/fuzzing/README", ".ttnn_runtime_artifacts/tt_metal/tools/README", ".ttnn_runtime_artifacts/tt_metal/tools/profiler/README", ".ttnn_runtime_artifacts/tt_metal/tools/tt_gdb/README.debugger", ".ttnn_runtime_artifacts/ttnn/cpp/ttnn/operations/ccl/README", ".ttnn_runtime_artifacts/ttnn/cpp/ttnn/operations/ccl/kernels/edm/README", "_build/doctrees/nbsphinx/ttnn/tutorials/ttnn_tutorials/001", "_build/doctrees/nbsphinx/ttnn/tutorials/ttnn_tutorials/002", "_build/doctrees/nbsphinx/ttnn/tutorials/ttnn_tutorials/003", "_build/doctrees/nbsphinx/ttnn/tutorials/ttnn_tutorials/004", "_build/doctrees/nbsphinx/ttnn/tutorials/ttnn_tutorials/005", "_build/doctrees/nbsphinx/ttnn/tutorials/ttnn_tutorials/006", "_build/doctrees/nbsphinx/ttnn/tutorials/ttnn_tutorials/007", "index", "resources/contributing", "resources/support", "tt_metal_models/get_performance", "tt_metal_models/get_started", "ttnn/about", "ttnn/adding_new_ttnn_operation", "ttnn/api", "ttnn/converting_torch_model_to_ttnn", "ttnn/demos", "ttnn/dependencies/examples", "ttnn/dependencies/index", "ttnn/dependencies/tensor", "ttnn/dependencies/tt_lib", "ttnn/get_started", "ttnn/installing", "ttnn/onboarding", "ttnn/profiling_ttnn_operations", "ttnn/tensor", "ttnn/ttnn/GetDefaultDevice", "ttnn/ttnn/MaxPool2d", "ttnn/ttnn/SetDefaultDevice", "ttnn/ttnn/abs", "ttnn/ttnn/abs_bw", "ttnn/ttnn/acos", "ttnn/ttnn/acos_bw", "ttnn/ttnn/acosh", "ttnn/ttnn/acosh_bw", "ttnn/ttnn/add", "ttnn/ttnn/add_bw", "ttnn/ttnn/addalpha", "ttnn/ttnn/addalpha_bw", "ttnn/ttnn/addcdiv", "ttnn/ttnn/addcdiv_bw", "ttnn/ttnn/addcmul", "ttnn/ttnn/addcmul_bw", "ttnn/ttnn/angle", "ttnn/ttnn/angle_bw", "ttnn/ttnn/arange", "ttnn/ttnn/argmax", "ttnn/ttnn/as_tensor", "ttnn/ttnn/asin", "ttnn/ttnn/asin_bw", "ttnn/ttnn/asinh", "ttnn/ttnn/asinh_bw", "ttnn/ttnn/assign_bw", "ttnn/ttnn/atan", "ttnn/ttnn/atan2", "ttnn/ttnn/atan2_bw", "ttnn/ttnn/atan_bw", "ttnn/ttnn/atanh", "ttnn/ttnn/atanh_bw", "ttnn/ttnn/bias_gelu_bw", "ttnn/ttnn/bitwise_and", "ttnn/ttnn/bitwise_left_shift", "ttnn/ttnn/bitwise_not", "ttnn/ttnn/bitwise_or", "ttnn/ttnn/bitwise_right_shift", "ttnn/ttnn/bitwise_xor", "ttnn/ttnn/cbrt", "ttnn/ttnn/ceil", "ttnn/ttnn/ceil_bw", "ttnn/ttnn/celu", "ttnn/ttnn/celu_bw", "ttnn/ttnn/clamp", "ttnn/ttnn/clamp_bw", "ttnn/ttnn/clip", "ttnn/ttnn/clone", "ttnn/ttnn/close_device", "ttnn/ttnn/concat", "ttnn/ttnn/concat_bw", "ttnn/ttnn/conj", "ttnn/ttnn/conj_bw", "ttnn/ttnn/cos", "ttnn/ttnn/cos_bw", "ttnn/ttnn/cosh", "ttnn/ttnn/cosh_bw", "ttnn/ttnn/create_sharded_memory_config", "ttnn/ttnn/deallocate", "ttnn/ttnn/deg2rad", "ttnn/ttnn/deg2rad_bw", "ttnn/ttnn/digamma", "ttnn/ttnn/digamma_bw", "ttnn/ttnn/div", "ttnn/ttnn/div_bw", "ttnn/ttnn/div_no_nan", "ttnn/ttnn/div_no_nan_bw", "ttnn/ttnn/downsample", "ttnn/ttnn/dump_tensor", "ttnn/ttnn/elu", "ttnn/ttnn/elu_bw", "ttnn/ttnn/embedding", "ttnn/ttnn/embedding_bw", "ttnn/ttnn/empty", "ttnn/ttnn/eq", "ttnn/ttnn/eq_", "ttnn/ttnn/eqz", "ttnn/ttnn/erf", "ttnn/ttnn/erf_bw", "ttnn/ttnn/erfc", "ttnn/ttnn/erfc_bw", "ttnn/ttnn/erfinv", "ttnn/ttnn/erfinv_bw", "ttnn/ttnn/exp", "ttnn/ttnn/exp2", "ttnn/ttnn/exp2_bw", "ttnn/ttnn/exp_bw", "ttnn/ttnn/expm1", "ttnn/ttnn/expm1_bw", "ttnn/ttnn/fill_bw", "ttnn/ttnn/fill_ones_rm", "ttnn/ttnn/fill_rm", "ttnn/ttnn/fill_zero_bw", "ttnn/ttnn/floor", "ttnn/ttnn/floor_bw", "ttnn/ttnn/floor_div", "ttnn/ttnn/fmod", "ttnn/ttnn/fmod_bw", "ttnn/ttnn/format_input_tensor", "ttnn/ttnn/format_output_tensor", "ttnn/ttnn/frac", "ttnn/ttnn/frac_bw", "ttnn/ttnn/from_device", "ttnn/ttnn/from_torch", "ttnn/ttnn/full", "ttnn/ttnn/full_like", "ttnn/ttnn/ge", "ttnn/ttnn/ge_", "ttnn/ttnn/geglu", "ttnn/ttnn/gelu", "ttnn/ttnn/gelu_bw", "ttnn/ttnn/gez", "ttnn/ttnn/global_avg_pool2d", "ttnn/ttnn/glu", "ttnn/ttnn/group_norm", "ttnn/ttnn/gt", "ttnn/ttnn/gt_", "ttnn/ttnn/gtz", "ttnn/ttnn/hardshrink", "ttnn/ttnn/hardshrink_bw", "ttnn/ttnn/hardsigmoid", "ttnn/ttnn/hardsigmoid_bw", "ttnn/ttnn/hardswish", "ttnn/ttnn/hardswish_bw", "ttnn/ttnn/hardtanh", "ttnn/ttnn/hardtanh_bw", "ttnn/ttnn/heaviside", "ttnn/ttnn/hypot", "ttnn/ttnn/hypot_bw", "ttnn/ttnn/i0", "ttnn/ttnn/i0_bw", "ttnn/ttnn/identity", "ttnn/ttnn/imag", "ttnn/ttnn/imag_bw", "ttnn/ttnn/indexed_fill", "ttnn/ttnn/is_imag", "ttnn/ttnn/is_real", "ttnn/ttnn/isclose", "ttnn/ttnn/isfinite", "ttnn/ttnn/isinf", "ttnn/ttnn/isnan", "ttnn/ttnn/isneginf", "ttnn/ttnn/isposinf", "ttnn/ttnn/kv_cache/fill_cache_for_user_", "ttnn/ttnn/kv_cache/update_cache_for_token_", "ttnn/ttnn/l1_loss", "ttnn/ttnn/layer_norm", "ttnn/ttnn/ldexp", "ttnn/ttnn/ldexp_bw", "ttnn/ttnn/le", "ttnn/ttnn/le_", "ttnn/ttnn/leaky_relu", "ttnn/ttnn/leaky_relu_bw", "ttnn/ttnn/lerp", "ttnn/ttnn/lerp_bw", "ttnn/ttnn/lez", "ttnn/ttnn/lgamma", "ttnn/ttnn/lgamma_bw", "ttnn/ttnn/linear", "ttnn/ttnn/load_tensor", "ttnn/ttnn/log", "ttnn/ttnn/log10", "ttnn/ttnn/log10_bw", "ttnn/ttnn/log1p", "ttnn/ttnn/log1p_bw", "ttnn/ttnn/log2", "ttnn/ttnn/log2_bw", "ttnn/ttnn/log_bw", "ttnn/ttnn/log_sigmoid", "ttnn/ttnn/log_sigmoid_bw", "ttnn/ttnn/logaddexp", "ttnn/ttnn/logaddexp2", "ttnn/ttnn/logaddexp2_bw", "ttnn/ttnn/logaddexp_bw", "ttnn/ttnn/logical_and", "ttnn/ttnn/logical_and_", "ttnn/ttnn/logical_not", "ttnn/ttnn/logical_not_", "ttnn/ttnn/logical_or", "ttnn/ttnn/logical_or_", "ttnn/ttnn/logical_xor", "ttnn/ttnn/logical_xor_", "ttnn/ttnn/logit", "ttnn/ttnn/logit_bw", "ttnn/ttnn/logiteps_bw", "ttnn/ttnn/lt", "ttnn/ttnn/lt_", "ttnn/ttnn/ltz", "ttnn/ttnn/mac", "ttnn/ttnn/manage_device", "ttnn/ttnn/matmul", "ttnn/ttnn/max", "ttnn/ttnn/max_bw", "ttnn/ttnn/max_pool2d", "ttnn/ttnn/maximum", "ttnn/ttnn/mean", "ttnn/ttnn/min", "ttnn/ttnn/min_bw", "ttnn/ttnn/minimum", "ttnn/ttnn/mish", "ttnn/ttnn/model_preprocessing/preprocess_model", "ttnn/ttnn/model_preprocessing/preprocess_model_parameters", "ttnn/ttnn/mse_loss", "ttnn/ttnn/mul_bw", "ttnn/ttnn/multigammaln", "ttnn/ttnn/multigammaln_bw", "ttnn/ttnn/multiply", "ttnn/ttnn/ne", "ttnn/ttnn/ne_", "ttnn/ttnn/neg", "ttnn/ttnn/neg_bw", "ttnn/ttnn/nextafter", "ttnn/ttnn/nez", "ttnn/ttnn/nonzero", "ttnn/ttnn/normalize_global", "ttnn/ttnn/normalize_hw", "ttnn/ttnn/ones", "ttnn/ttnn/ones_like", "ttnn/ttnn/open_device", "ttnn/ttnn/outer", "ttnn/ttnn/pad", "ttnn/ttnn/pad_to_tile_shape", "ttnn/ttnn/permute", "ttnn/ttnn/polar", "ttnn/ttnn/polar_bw", "ttnn/ttnn/polygamma", "ttnn/ttnn/polygamma_bw", "ttnn/ttnn/polyval", "ttnn/ttnn/pow", "ttnn/ttnn/pow_bw", "ttnn/ttnn/prelu", "ttnn/ttnn/prod", "ttnn/ttnn/prod_bw", "ttnn/ttnn/rad2deg", "ttnn/ttnn/rad2deg_bw", "ttnn/ttnn/rdiv", "ttnn/ttnn/rdiv_bw", "ttnn/ttnn/real", "ttnn/ttnn/real_bw", "ttnn/ttnn/reallocate", "ttnn/ttnn/reciprocal", "ttnn/ttnn/reciprocal_bw", "ttnn/ttnn/register_post_operation_hook", "ttnn/ttnn/register_pre_operation_hook", "ttnn/ttnn/reglu", "ttnn/ttnn/relu", "ttnn/ttnn/relu6", "ttnn/ttnn/relu6_bw", "ttnn/ttnn/relu_bw", "ttnn/ttnn/relu_max", "ttnn/ttnn/relu_min", "ttnn/ttnn/remainder", "ttnn/ttnn/remainder_bw", "ttnn/ttnn/repeat", "ttnn/ttnn/repeat_bw", "ttnn/ttnn/repeat_interleave", "ttnn/ttnn/reshape", "ttnn/ttnn/rms_norm", "ttnn/ttnn/round", "ttnn/ttnn/round_bw", "ttnn/ttnn/rpow", "ttnn/ttnn/rpow_bw", "ttnn/ttnn/rsqrt", "ttnn/ttnn/rsqrt_bw", "ttnn/ttnn/rsub", "ttnn/ttnn/rsub_bw", "ttnn/ttnn/scatter", "ttnn/ttnn/selu", "ttnn/ttnn/selu_bw", "ttnn/ttnn/set_printoptions", "ttnn/ttnn/sigmoid", "ttnn/ttnn/sigmoid_accurate", "ttnn/ttnn/sigmoid_bw", "ttnn/ttnn/sign", "ttnn/ttnn/sign_bw", "ttnn/ttnn/signbit", "ttnn/ttnn/silu", "ttnn/ttnn/silu_bw", "ttnn/ttnn/sin", "ttnn/ttnn/sin_bw", "ttnn/ttnn/sinh", "ttnn/ttnn/sinh_bw", "ttnn/ttnn/softmax", "ttnn/ttnn/softplus", "ttnn/ttnn/softplus_bw", "ttnn/ttnn/softshrink", "ttnn/ttnn/softshrink_bw", "ttnn/ttnn/softsign", "ttnn/ttnn/softsign_bw", "ttnn/ttnn/split", "ttnn/ttnn/sqrt", "ttnn/ttnn/sqrt_bw", "ttnn/ttnn/square", "ttnn/ttnn/square_bw", "ttnn/ttnn/squared_difference", "ttnn/ttnn/squared_difference_bw", "ttnn/ttnn/std", "ttnn/ttnn/sub_bw", "ttnn/ttnn/subalpha", "ttnn/ttnn/subalpha_bw", "ttnn/ttnn/subtract", "ttnn/ttnn/sum", "ttnn/ttnn/swiglu", "ttnn/ttnn/swish", "ttnn/ttnn/synchronize_device", "ttnn/ttnn/tan", "ttnn/ttnn/tan_bw", "ttnn/ttnn/tanh", "ttnn/ttnn/tanh_bw", "ttnn/ttnn/tanhshrink", "ttnn/ttnn/tanhshrink_bw", "ttnn/ttnn/threshold", "ttnn/ttnn/threshold_bw", "ttnn/ttnn/tilize", "ttnn/ttnn/tilize_with_val_padding", "ttnn/ttnn/to_device", "ttnn/ttnn/to_layout", "ttnn/ttnn/to_memory_config", "ttnn/ttnn/to_torch", "ttnn/ttnn/topk", "ttnn/ttnn/transformer/attention_softmax", "ttnn/ttnn/transformer/attention_softmax_", "ttnn/ttnn/transformer/concatenate_heads", "ttnn/ttnn/transformer/rotary_embedding", "ttnn/ttnn/transformer/sdpa", "ttnn/ttnn/transformer/sdpa_decode", "ttnn/ttnn/transformer/sdpa_decode_gqa", "ttnn/ttnn/transformer/split_query_key_value_and_split_heads", "ttnn/ttnn/tril", "ttnn/ttnn/triu", "ttnn/ttnn/trunc", "ttnn/ttnn/trunc_bw", "ttnn/ttnn/untilize", "ttnn/ttnn/untilize_with_halo_v2", "ttnn/ttnn/untilize_with_unpadding", "ttnn/ttnn/upsample", "ttnn/ttnn/var", "ttnn/ttnn/where", "ttnn/ttnn/where_bw", "ttnn/ttnn/xlogy", "ttnn/ttnn/xlogy_bw", "ttnn/ttnn/zeros", "ttnn/ttnn/zeros_like", "ttnn/tutorials", "ttnn/tutorials/graphing_torch_dit", "ttnn/tutorials/matmul", "ttnn/tutorials/multihead-attention", "ttnn/tutorials/profiling", "ttnn/tutorials/resnet-basic-block", "ttnn/tutorials/tensor_and_add_operation", "ttnn/tutorials/ttnn-tracer", "ttnn/tutorials/ttnn_tutorials/001", "ttnn/tutorials/ttnn_tutorials/002", "ttnn/tutorials/ttnn_tutorials/003", "ttnn/tutorials/ttnn_tutorials/004", "ttnn/tutorials/ttnn_tutorials/005", "ttnn/tutorials/ttnn_tutorials/006", "ttnn/tutorials/ttnn_tutorials/007", "ttnn/usage", "ttnn_sweeps/index"], "filenames": [".ttnn_runtime_artifacts/tt_metal/README.md", ".ttnn_runtime_artifacts/tt_metal/hostdevcommon/README.md", ".ttnn_runtime_artifacts/tt_metal/third_party/lfs/README.md", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/README.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/cast/chrono.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/cast/custom.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/cast/eigen.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/cast/functional.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/cast/index.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/cast/overview.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/cast/stl.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/cast/strings.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/classes.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/embedding.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/exceptions.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/functions.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/misc.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/pycpp/index.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/pycpp/numpy.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/pycpp/object.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/pycpp/utilities.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/advanced/smart_ptrs.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/pybind11/docs/cmake/index.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/sfpi/README.md", ".ttnn_runtime_artifacts/tt_metal/third_party/taskflow/3rd-party/README.md", ".ttnn_runtime_artifacts/tt_metal/third_party/taskflow/3rd-party/eigen-3.3.7/README.md", ".ttnn_runtime_artifacts/tt_metal/third_party/taskflow/3rd-party/eigen-3.3.7/unsupported/Eigen/CXX11/src/Tensor/README.md", ".ttnn_runtime_artifacts/tt_metal/third_party/taskflow/3rd-party/spdlog/fmt/bundled/LICENSE.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/taskflow/3rd-party/tbb/README.md", ".ttnn_runtime_artifacts/tt_metal/third_party/taskflow/3rd-party/tbb/cmake/README.rst", ".ttnn_runtime_artifacts/tt_metal/third_party/taskflow/README.md", ".ttnn_runtime_artifacts/tt_metal/third_party/taskflow/benchmarks/benchmarks.md", ".ttnn_runtime_artifacts/tt_metal/third_party/tracy/README.md", ".ttnn_runtime_artifacts/tt_metal/third_party/tracy/examples/ToyPathTracer/license.md", ".ttnn_runtime_artifacts/tt_metal/third_party/tracy/imgui/misc/freetype/README.md", ".ttnn_runtime_artifacts/tt_metal/third_party/tt_llk_blackhole/README.md", ".ttnn_runtime_artifacts/tt_metal/third_party/tt_llk_grayskull/README.md", ".ttnn_runtime_artifacts/tt_metal/third_party/tt_llk_wormhole_b0/README.md", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/README.md", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/README.emu.md", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/CONTRIBUTING.md", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/ChangeLog.md", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/README.md", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/doc/ChangeLog-old.md", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/doc/api.md", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/doc/get-started.md", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/doc/index.md", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/doc/syntax.md", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/support/bazel/README.md", ".ttnn_runtime_artifacts/tt_metal/third_party/umd/third_party/fmt/test/fuzzing/README.md", ".ttnn_runtime_artifacts/tt_metal/tools/README.md", ".ttnn_runtime_artifacts/tt_metal/tools/profiler/README.md", ".ttnn_runtime_artifacts/tt_metal/tools/tt_gdb/README.debugger.md", ".ttnn_runtime_artifacts/ttnn/cpp/ttnn/operations/ccl/README.md", ".ttnn_runtime_artifacts/ttnn/cpp/ttnn/operations/ccl/kernels/edm/README.md", "_build/doctrees/nbsphinx/ttnn/tutorials/ttnn_tutorials/001.ipynb", "_build/doctrees/nbsphinx/ttnn/tutorials/ttnn_tutorials/002.ipynb", "_build/doctrees/nbsphinx/ttnn/tutorials/ttnn_tutorials/003.ipynb", "_build/doctrees/nbsphinx/ttnn/tutorials/ttnn_tutorials/004.ipynb", "_build/doctrees/nbsphinx/ttnn/tutorials/ttnn_tutorials/005.ipynb", "_build/doctrees/nbsphinx/ttnn/tutorials/ttnn_tutorials/006.ipynb", "_build/doctrees/nbsphinx/ttnn/tutorials/ttnn_tutorials/007.ipynb", "index.rst", "resources/contributing.rst", "resources/support.rst", "tt_metal_models/get_performance.rst", "tt_metal_models/get_started.rst", "ttnn/about.rst", "ttnn/adding_new_ttnn_operation.rst", "ttnn/api.rst", "ttnn/converting_torch_model_to_ttnn.rst", "ttnn/demos.rst", "ttnn/dependencies/examples.rst", "ttnn/dependencies/index.rst", "ttnn/dependencies/tensor.rst", "ttnn/dependencies/tt_lib.rst", "ttnn/get_started.rst", "ttnn/installing.md", "ttnn/onboarding.rst", "ttnn/profiling_ttnn_operations.rst", "ttnn/tensor.rst", "ttnn/ttnn/GetDefaultDevice.rst", "ttnn/ttnn/MaxPool2d.rst", "ttnn/ttnn/SetDefaultDevice.rst", "ttnn/ttnn/abs.rst", "ttnn/ttnn/abs_bw.rst", "ttnn/ttnn/acos.rst", "ttnn/ttnn/acos_bw.rst", "ttnn/ttnn/acosh.rst", "ttnn/ttnn/acosh_bw.rst", "ttnn/ttnn/add.rst", "ttnn/ttnn/add_bw.rst", "ttnn/ttnn/addalpha.rst", "ttnn/ttnn/addalpha_bw.rst", "ttnn/ttnn/addcdiv.rst", "ttnn/ttnn/addcdiv_bw.rst", "ttnn/ttnn/addcmul.rst", "ttnn/ttnn/addcmul_bw.rst", "ttnn/ttnn/angle.rst", "ttnn/ttnn/angle_bw.rst", "ttnn/ttnn/arange.rst", "ttnn/ttnn/argmax.rst", "ttnn/ttnn/as_tensor.rst", "ttnn/ttnn/asin.rst", "ttnn/ttnn/asin_bw.rst", "ttnn/ttnn/asinh.rst", "ttnn/ttnn/asinh_bw.rst", "ttnn/ttnn/assign_bw.rst", "ttnn/ttnn/atan.rst", "ttnn/ttnn/atan2.rst", "ttnn/ttnn/atan2_bw.rst", "ttnn/ttnn/atan_bw.rst", "ttnn/ttnn/atanh.rst", "ttnn/ttnn/atanh_bw.rst", "ttnn/ttnn/bias_gelu_bw.rst", "ttnn/ttnn/bitwise_and.rst", "ttnn/ttnn/bitwise_left_shift.rst", "ttnn/ttnn/bitwise_not.rst", "ttnn/ttnn/bitwise_or.rst", "ttnn/ttnn/bitwise_right_shift.rst", "ttnn/ttnn/bitwise_xor.rst", "ttnn/ttnn/cbrt.rst", "ttnn/ttnn/ceil.rst", "ttnn/ttnn/ceil_bw.rst", "ttnn/ttnn/celu.rst", "ttnn/ttnn/celu_bw.rst", "ttnn/ttnn/clamp.rst", "ttnn/ttnn/clamp_bw.rst", "ttnn/ttnn/clip.rst", "ttnn/ttnn/clone.rst", "ttnn/ttnn/close_device.rst", "ttnn/ttnn/concat.rst", "ttnn/ttnn/concat_bw.rst", "ttnn/ttnn/conj.rst", "ttnn/ttnn/conj_bw.rst", "ttnn/ttnn/cos.rst", "ttnn/ttnn/cos_bw.rst", "ttnn/ttnn/cosh.rst", "ttnn/ttnn/cosh_bw.rst", "ttnn/ttnn/create_sharded_memory_config.rst", "ttnn/ttnn/deallocate.rst", "ttnn/ttnn/deg2rad.rst", "ttnn/ttnn/deg2rad_bw.rst", "ttnn/ttnn/digamma.rst", "ttnn/ttnn/digamma_bw.rst", "ttnn/ttnn/div.rst", "ttnn/ttnn/div_bw.rst", "ttnn/ttnn/div_no_nan.rst", "ttnn/ttnn/div_no_nan_bw.rst", "ttnn/ttnn/downsample.rst", "ttnn/ttnn/dump_tensor.rst", "ttnn/ttnn/elu.rst", "ttnn/ttnn/elu_bw.rst", "ttnn/ttnn/embedding.rst", "ttnn/ttnn/embedding_bw.rst", "ttnn/ttnn/empty.rst", "ttnn/ttnn/eq.rst", "ttnn/ttnn/eq_.rst", "ttnn/ttnn/eqz.rst", "ttnn/ttnn/erf.rst", "ttnn/ttnn/erf_bw.rst", "ttnn/ttnn/erfc.rst", "ttnn/ttnn/erfc_bw.rst", "ttnn/ttnn/erfinv.rst", "ttnn/ttnn/erfinv_bw.rst", "ttnn/ttnn/exp.rst", "ttnn/ttnn/exp2.rst", "ttnn/ttnn/exp2_bw.rst", "ttnn/ttnn/exp_bw.rst", "ttnn/ttnn/expm1.rst", "ttnn/ttnn/expm1_bw.rst", "ttnn/ttnn/fill_bw.rst", "ttnn/ttnn/fill_ones_rm.rst", "ttnn/ttnn/fill_rm.rst", "ttnn/ttnn/fill_zero_bw.rst", "ttnn/ttnn/floor.rst", "ttnn/ttnn/floor_bw.rst", "ttnn/ttnn/floor_div.rst", "ttnn/ttnn/fmod.rst", "ttnn/ttnn/fmod_bw.rst", "ttnn/ttnn/format_input_tensor.rst", "ttnn/ttnn/format_output_tensor.rst", "ttnn/ttnn/frac.rst", "ttnn/ttnn/frac_bw.rst", "ttnn/ttnn/from_device.rst", "ttnn/ttnn/from_torch.rst", "ttnn/ttnn/full.rst", "ttnn/ttnn/full_like.rst", "ttnn/ttnn/ge.rst", "ttnn/ttnn/ge_.rst", "ttnn/ttnn/geglu.rst", "ttnn/ttnn/gelu.rst", "ttnn/ttnn/gelu_bw.rst", "ttnn/ttnn/gez.rst", "ttnn/ttnn/global_avg_pool2d.rst", "ttnn/ttnn/glu.rst", "ttnn/ttnn/group_norm.rst", "ttnn/ttnn/gt.rst", "ttnn/ttnn/gt_.rst", "ttnn/ttnn/gtz.rst", "ttnn/ttnn/hardshrink.rst", "ttnn/ttnn/hardshrink_bw.rst", "ttnn/ttnn/hardsigmoid.rst", "ttnn/ttnn/hardsigmoid_bw.rst", "ttnn/ttnn/hardswish.rst", "ttnn/ttnn/hardswish_bw.rst", "ttnn/ttnn/hardtanh.rst", "ttnn/ttnn/hardtanh_bw.rst", "ttnn/ttnn/heaviside.rst", "ttnn/ttnn/hypot.rst", "ttnn/ttnn/hypot_bw.rst", "ttnn/ttnn/i0.rst", "ttnn/ttnn/i0_bw.rst", "ttnn/ttnn/identity.rst", "ttnn/ttnn/imag.rst", "ttnn/ttnn/imag_bw.rst", "ttnn/ttnn/indexed_fill.rst", "ttnn/ttnn/is_imag.rst", "ttnn/ttnn/is_real.rst", "ttnn/ttnn/isclose.rst", "ttnn/ttnn/isfinite.rst", "ttnn/ttnn/isinf.rst", "ttnn/ttnn/isnan.rst", "ttnn/ttnn/isneginf.rst", "ttnn/ttnn/isposinf.rst", "ttnn/ttnn/kv_cache/fill_cache_for_user_.rst", "ttnn/ttnn/kv_cache/update_cache_for_token_.rst", "ttnn/ttnn/l1_loss.rst", "ttnn/ttnn/layer_norm.rst", "ttnn/ttnn/ldexp.rst", "ttnn/ttnn/ldexp_bw.rst", "ttnn/ttnn/le.rst", "ttnn/ttnn/le_.rst", "ttnn/ttnn/leaky_relu.rst", "ttnn/ttnn/leaky_relu_bw.rst", "ttnn/ttnn/lerp.rst", "ttnn/ttnn/lerp_bw.rst", "ttnn/ttnn/lez.rst", "ttnn/ttnn/lgamma.rst", "ttnn/ttnn/lgamma_bw.rst", "ttnn/ttnn/linear.rst", "ttnn/ttnn/load_tensor.rst", "ttnn/ttnn/log.rst", "ttnn/ttnn/log10.rst", "ttnn/ttnn/log10_bw.rst", "ttnn/ttnn/log1p.rst", "ttnn/ttnn/log1p_bw.rst", "ttnn/ttnn/log2.rst", "ttnn/ttnn/log2_bw.rst", "ttnn/ttnn/log_bw.rst", "ttnn/ttnn/log_sigmoid.rst", "ttnn/ttnn/log_sigmoid_bw.rst", "ttnn/ttnn/logaddexp.rst", "ttnn/ttnn/logaddexp2.rst", "ttnn/ttnn/logaddexp2_bw.rst", "ttnn/ttnn/logaddexp_bw.rst", "ttnn/ttnn/logical_and.rst", "ttnn/ttnn/logical_and_.rst", "ttnn/ttnn/logical_not.rst", "ttnn/ttnn/logical_not_.rst", "ttnn/ttnn/logical_or.rst", "ttnn/ttnn/logical_or_.rst", "ttnn/ttnn/logical_xor.rst", "ttnn/ttnn/logical_xor_.rst", "ttnn/ttnn/logit.rst", "ttnn/ttnn/logit_bw.rst", "ttnn/ttnn/logiteps_bw.rst", "ttnn/ttnn/lt.rst", "ttnn/ttnn/lt_.rst", "ttnn/ttnn/ltz.rst", "ttnn/ttnn/mac.rst", "ttnn/ttnn/manage_device.rst", "ttnn/ttnn/matmul.rst", "ttnn/ttnn/max.rst", "ttnn/ttnn/max_bw.rst", "ttnn/ttnn/max_pool2d.rst", "ttnn/ttnn/maximum.rst", "ttnn/ttnn/mean.rst", "ttnn/ttnn/min.rst", "ttnn/ttnn/min_bw.rst", "ttnn/ttnn/minimum.rst", "ttnn/ttnn/mish.rst", "ttnn/ttnn/model_preprocessing/preprocess_model.rst", "ttnn/ttnn/model_preprocessing/preprocess_model_parameters.rst", "ttnn/ttnn/mse_loss.rst", "ttnn/ttnn/mul_bw.rst", "ttnn/ttnn/multigammaln.rst", "ttnn/ttnn/multigammaln_bw.rst", "ttnn/ttnn/multiply.rst", "ttnn/ttnn/ne.rst", "ttnn/ttnn/ne_.rst", "ttnn/ttnn/neg.rst", "ttnn/ttnn/neg_bw.rst", "ttnn/ttnn/nextafter.rst", "ttnn/ttnn/nez.rst", "ttnn/ttnn/nonzero.rst", "ttnn/ttnn/normalize_global.rst", "ttnn/ttnn/normalize_hw.rst", "ttnn/ttnn/ones.rst", "ttnn/ttnn/ones_like.rst", "ttnn/ttnn/open_device.rst", "ttnn/ttnn/outer.rst", "ttnn/ttnn/pad.rst", "ttnn/ttnn/pad_to_tile_shape.rst", "ttnn/ttnn/permute.rst", "ttnn/ttnn/polar.rst", "ttnn/ttnn/polar_bw.rst", "ttnn/ttnn/polygamma.rst", "ttnn/ttnn/polygamma_bw.rst", "ttnn/ttnn/polyval.rst", "ttnn/ttnn/pow.rst", "ttnn/ttnn/pow_bw.rst", "ttnn/ttnn/prelu.rst", "ttnn/ttnn/prod.rst", "ttnn/ttnn/prod_bw.rst", "ttnn/ttnn/rad2deg.rst", "ttnn/ttnn/rad2deg_bw.rst", "ttnn/ttnn/rdiv.rst", "ttnn/ttnn/rdiv_bw.rst", "ttnn/ttnn/real.rst", "ttnn/ttnn/real_bw.rst", "ttnn/ttnn/reallocate.rst", "ttnn/ttnn/reciprocal.rst", "ttnn/ttnn/reciprocal_bw.rst", "ttnn/ttnn/register_post_operation_hook.rst", "ttnn/ttnn/register_pre_operation_hook.rst", "ttnn/ttnn/reglu.rst", "ttnn/ttnn/relu.rst", "ttnn/ttnn/relu6.rst", "ttnn/ttnn/relu6_bw.rst", "ttnn/ttnn/relu_bw.rst", "ttnn/ttnn/relu_max.rst", "ttnn/ttnn/relu_min.rst", "ttnn/ttnn/remainder.rst", "ttnn/ttnn/remainder_bw.rst", "ttnn/ttnn/repeat.rst", "ttnn/ttnn/repeat_bw.rst", "ttnn/ttnn/repeat_interleave.rst", "ttnn/ttnn/reshape.rst", "ttnn/ttnn/rms_norm.rst", "ttnn/ttnn/round.rst", "ttnn/ttnn/round_bw.rst", "ttnn/ttnn/rpow.rst", "ttnn/ttnn/rpow_bw.rst", "ttnn/ttnn/rsqrt.rst", "ttnn/ttnn/rsqrt_bw.rst", "ttnn/ttnn/rsub.rst", "ttnn/ttnn/rsub_bw.rst", "ttnn/ttnn/scatter.rst", "ttnn/ttnn/selu.rst", "ttnn/ttnn/selu_bw.rst", "ttnn/ttnn/set_printoptions.rst", "ttnn/ttnn/sigmoid.rst", "ttnn/ttnn/sigmoid_accurate.rst", "ttnn/ttnn/sigmoid_bw.rst", "ttnn/ttnn/sign.rst", "ttnn/ttnn/sign_bw.rst", "ttnn/ttnn/signbit.rst", "ttnn/ttnn/silu.rst", "ttnn/ttnn/silu_bw.rst", "ttnn/ttnn/sin.rst", "ttnn/ttnn/sin_bw.rst", "ttnn/ttnn/sinh.rst", "ttnn/ttnn/sinh_bw.rst", "ttnn/ttnn/softmax.rst", "ttnn/ttnn/softplus.rst", "ttnn/ttnn/softplus_bw.rst", "ttnn/ttnn/softshrink.rst", "ttnn/ttnn/softshrink_bw.rst", "ttnn/ttnn/softsign.rst", "ttnn/ttnn/softsign_bw.rst", "ttnn/ttnn/split.rst", "ttnn/ttnn/sqrt.rst", "ttnn/ttnn/sqrt_bw.rst", "ttnn/ttnn/square.rst", "ttnn/ttnn/square_bw.rst", "ttnn/ttnn/squared_difference.rst", "ttnn/ttnn/squared_difference_bw.rst", "ttnn/ttnn/std.rst", "ttnn/ttnn/sub_bw.rst", "ttnn/ttnn/subalpha.rst", "ttnn/ttnn/subalpha_bw.rst", "ttnn/ttnn/subtract.rst", "ttnn/ttnn/sum.rst", "ttnn/ttnn/swiglu.rst", "ttnn/ttnn/swish.rst", "ttnn/ttnn/synchronize_device.rst", "ttnn/ttnn/tan.rst", "ttnn/ttnn/tan_bw.rst", "ttnn/ttnn/tanh.rst", "ttnn/ttnn/tanh_bw.rst", "ttnn/ttnn/tanhshrink.rst", "ttnn/ttnn/tanhshrink_bw.rst", "ttnn/ttnn/threshold.rst", "ttnn/ttnn/threshold_bw.rst", "ttnn/ttnn/tilize.rst", "ttnn/ttnn/tilize_with_val_padding.rst", "ttnn/ttnn/to_device.rst", "ttnn/ttnn/to_layout.rst", "ttnn/ttnn/to_memory_config.rst", "ttnn/ttnn/to_torch.rst", "ttnn/ttnn/topk.rst", "ttnn/ttnn/transformer/attention_softmax.rst", "ttnn/ttnn/transformer/attention_softmax_.rst", "ttnn/ttnn/transformer/concatenate_heads.rst", "ttnn/ttnn/transformer/rotary_embedding.rst", "ttnn/ttnn/transformer/sdpa.rst", "ttnn/ttnn/transformer/sdpa_decode.rst", "ttnn/ttnn/transformer/sdpa_decode_gqa.rst", "ttnn/ttnn/transformer/split_query_key_value_and_split_heads.rst", "ttnn/ttnn/tril.rst", "ttnn/ttnn/triu.rst", "ttnn/ttnn/trunc.rst", "ttnn/ttnn/trunc_bw.rst", "ttnn/ttnn/untilize.rst", "ttnn/ttnn/untilize_with_halo_v2.rst", "ttnn/ttnn/untilize_with_unpadding.rst", "ttnn/ttnn/upsample.rst", "ttnn/ttnn/var.rst", "ttnn/ttnn/where.rst", "ttnn/ttnn/where_bw.rst", "ttnn/ttnn/xlogy.rst", "ttnn/ttnn/xlogy_bw.rst", "ttnn/ttnn/zeros.rst", "ttnn/ttnn/zeros_like.rst", "ttnn/tutorials.rst", "ttnn/tutorials/graphing_torch_dit.rst", "ttnn/tutorials/matmul.rst", "ttnn/tutorials/multihead-attention.rst", "ttnn/tutorials/profiling.rst", "ttnn/tutorials/resnet-basic-block.rst", "ttnn/tutorials/tensor_and_add_operation.rst", "ttnn/tutorials/ttnn-tracer.rst", "ttnn/tutorials/ttnn_tutorials/001.ipynb", "ttnn/tutorials/ttnn_tutorials/002.ipynb", "ttnn/tutorials/ttnn_tutorials/003.ipynb", "ttnn/tutorials/ttnn_tutorials/004.ipynb", "ttnn/tutorials/ttnn_tutorials/005.ipynb", "ttnn/tutorials/ttnn_tutorials/006.ipynb", "ttnn/tutorials/ttnn_tutorials/007.ipynb", "ttnn/usage.rst", "ttnn_sweeps/index.rst"], "titles": ["&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Core features", "Chrono", "Custom type casters", "Eigen", "Functional", "Type conversions", "Overview", "STL containers", "Strings, bytes and Unicode conversions", "Classes", "Embedding the interpreter", "Exceptions", "Functions", "Miscellaneous", "Python C++ interface", "NumPy", "Python types", "Utilities", "Smart pointers", "CMake helpers", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Introduction", "}", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "fi", "Contributing to {fmt}", "&lt;no title&gt;", "}", "&lt;no title&gt;", "};", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", ")", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Tensor and Add Operation", "Matrix Multiplication", "Multi-Head Attention", "Tracing ttnn operations and torch modules/functions", "Profiling ttnn operations", "Resnet Block", "Build a graph of a pytorch based model", "Welcome to TT-NN documentation!", "Contributing as a developer", "Support", "Performance", "Getting Started", "What is ttnn?", "Adding New ttnn Operation", "APIs", "Converting torch Model to ttnn", "Building and Uplifting Demos", "Examples of Tensor and TT-LIB Use", "Dependencies", "Tensor", "TT-LIB", "Getting Started", "&lt;no title&gt;", "Onboarding New Functionality", "Profiling ttnn Operations", "Tensor", "ttnn.GetDefaultDevice", "ttnn.MaxPool2d", "ttnn.SetDefaultDevice", "ttnn.abs", "ttnn.abs_bw", "ttnn.acos", "ttnn.acos_bw", "ttnn.acosh", "ttnn.acosh_bw", "ttnn.add", "ttnn.add_bw", "ttnn.addalpha", "ttnn.addalpha_bw", "ttnn.addcdiv", "ttnn.addcdiv_bw", "ttnn.addcmul", "ttnn.addcmul_bw", "ttnn.angle", "ttnn.angle_bw", "ttnn.arange", "ttnn.argmax", "ttnn.as_tensor", "ttnn.asin", "ttnn.asin_bw", "ttnn.asinh", "ttnn.asinh_bw", "ttnn.assign_bw", "ttnn.atan", "ttnn.atan2", "ttnn.atan2_bw", "ttnn.atan_bw", "ttnn.atanh", "ttnn.atanh_bw", "ttnn.bias_gelu_bw", "ttnn.bitwise_and", "ttnn.bitwise_left_shift", "ttnn.bitwise_not", "ttnn.bitwise_or", "ttnn.bitwise_right_shift", "ttnn.bitwise_xor", "ttnn.cbrt", "ttnn.ceil", "ttnn.ceil_bw", "ttnn.celu", "ttnn.celu_bw", "ttnn.clamp", "ttnn.clamp_bw", "ttnn.clip", "ttnn.clone", "ttnn.close_device", "ttnn.concat", "ttnn.concat_bw", "ttnn.conj", "ttnn.conj_bw", "ttnn.cos", "ttnn.cos_bw", "ttnn.cosh", "ttnn.cosh_bw", "ttnn.create_sharded_memory_config", "ttnn.deallocate", "ttnn.deg2rad", "ttnn.deg2rad_bw", "ttnn.digamma", "ttnn.digamma_bw", "ttnn.div", "ttnn.div_bw", "ttnn.div_no_nan", "ttnn.div_no_nan_bw", "ttnn.downsample", "ttnn.dump_tensor", "ttnn.elu", "ttnn.elu_bw", "ttnn.embedding", "ttnn.embedding_bw", "ttnn.empty", "ttnn.eq", "ttnn.eq", "ttnn.eqz", "ttnn.erf", "ttnn.erf_bw", "ttnn.erfc", "ttnn.erfc_bw", "ttnn.erfinv", "ttnn.erfinv_bw", "ttnn.exp", "ttnn.exp2", "ttnn.exp2_bw", "ttnn.exp_bw", "ttnn.expm1", "ttnn.expm1_bw", "ttnn.fill_bw", "ttnn.fill_ones_rm", "ttnn.fill_rm", "ttnn.fill_zero_bw", "ttnn.floor", "ttnn.floor_bw", "ttnn.floor_div", "ttnn.fmod", "ttnn.fmod_bw", "ttnn.format_input_tensor", "ttnn.format_output_tensor", "ttnn.frac", "ttnn.frac_bw", "ttnn.from_device", "ttnn.from_torch", "ttnn.full", "ttnn.full_like", "ttnn.ge", "ttnn.ge", "ttnn.geglu", "ttnn.gelu", "ttnn.gelu_bw", "ttnn.gez", "ttnn.global_avg_pool2d", "ttnn.glu", "ttnn.group_norm", "ttnn.gt", "ttnn.gt", "ttnn.gtz", "ttnn.hardshrink", "ttnn.hardshrink_bw", "ttnn.hardsigmoid", "ttnn.hardsigmoid_bw", "ttnn.hardswish", "ttnn.hardswish_bw", "ttnn.hardtanh", "ttnn.hardtanh_bw", "ttnn.heaviside", "ttnn.hypot", "ttnn.hypot_bw", "ttnn.i0", "ttnn.i0_bw", "ttnn.identity", "ttnn.imag", "ttnn.imag_bw", "ttnn.indexed_fill", "ttnn.is_imag", "ttnn.is_real", "ttnn.isclose", "ttnn.isfinite", "ttnn.isinf", "ttnn.isnan", "ttnn.isneginf", "ttnn.isposinf", "ttnn.kv_cache.fill_cache_for_user_", "ttnn.kv_cache.update_cache_for_token_", "ttnn.l1_loss", "ttnn.layer_norm", "ttnn.ldexp", "ttnn.ldexp_bw", "ttnn.le", "ttnn.le", "ttnn.leaky_relu", "ttnn.leaky_relu_bw", "ttnn.lerp", "ttnn.lerp_bw", "ttnn.lez", "ttnn.lgamma", "ttnn.lgamma_bw", "ttnn.linear", "ttnn.load_tensor", "ttnn.log", "ttnn.log10", "ttnn.log10_bw", "ttnn.log1p", "ttnn.log1p_bw", "ttnn.log2", "ttnn.log2_bw", "ttnn.log_bw", "ttnn.log_sigmoid", "ttnn.log_sigmoid_bw", "ttnn.logaddexp", "ttnn.logaddexp2", "ttnn.logaddexp2_bw", "ttnn.logaddexp_bw", "ttnn.logical_and", "ttnn.logical_and", "ttnn.logical_not", "ttnn.logical_not", "ttnn.logical_or", "ttnn.logical_or", "ttnn.logical_xor", "ttnn.logical_xor", "ttnn.logit", "ttnn.logit_bw", "ttnn.logiteps_bw", "ttnn.lt", "ttnn.lt", "ttnn.ltz", "ttnn.mac", "ttnn.manage_device", "ttnn.matmul", "ttnn.max", "ttnn.max_bw", "ttnn.max_pool2d", "ttnn.maximum", "ttnn.mean", "ttnn.min", "ttnn.min_bw", "ttnn.minimum", "ttnn.mish", "ttnn.model_preprocessing.preprocess_model", "ttnn.model_preprocessing.preprocess_model_parameters", "ttnn.mse_loss", "ttnn.mul_bw", "ttnn.multigammaln", "ttnn.multigammaln_bw", "ttnn.multiply", "ttnn.ne", "ttnn.ne", "ttnn.neg", "ttnn.neg_bw", "ttnn.nextafter", "ttnn.nez", "ttnn.nonzero", "ttnn.normalize_global", "ttnn.normalize_hw", "ttnn.ones", "ttnn.ones_like", "ttnn.open_device", "ttnn.outer", "ttnn.pad", "ttnn.pad_to_tile_shape", "ttnn.permute", "ttnn.polar", "ttnn.polar_bw", "ttnn.polygamma", "ttnn.polygamma_bw", "ttnn.polyval", "ttnn.pow", "ttnn.pow_bw", "ttnn.prelu", "ttnn.prod", "ttnn.prod_bw", "ttnn.rad2deg", "ttnn.rad2deg_bw", "ttnn.rdiv", "ttnn.rdiv_bw", "ttnn.real", "ttnn.real_bw", "ttnn.reallocate", "ttnn.reciprocal", "ttnn.reciprocal_bw", "ttnn.register_post_operation_hook", "ttnn.register_pre_operation_hook", "ttnn.reglu", "ttnn.relu", "ttnn.relu6", "ttnn.relu6_bw", "ttnn.relu_bw", "ttnn.relu_max", "ttnn.relu_min", "ttnn.remainder", "ttnn.remainder_bw", "ttnn.repeat", "ttnn.repeat_bw", "ttnn.repeat_interleave", "ttnn.reshape", "ttnn.rms_norm", "ttnn.round", "ttnn.round_bw", "ttnn.rpow", "ttnn.rpow_bw", "ttnn.rsqrt", "ttnn.rsqrt_bw", "ttnn.rsub", "ttnn.rsub_bw", "ttnn.scatter", "ttnn.selu", "ttnn.selu_bw", "ttnn.set_printoptions", "ttnn.sigmoid", "ttnn.sigmoid_accurate", "ttnn.sigmoid_bw", "ttnn.sign", "ttnn.sign_bw", "ttnn.signbit", "ttnn.silu", "ttnn.silu_bw", "ttnn.sin", "ttnn.sin_bw", "ttnn.sinh", "ttnn.sinh_bw", "ttnn.softmax", "ttnn.softplus", "ttnn.softplus_bw", "ttnn.softshrink", "ttnn.softshrink_bw", "ttnn.softsign", "ttnn.softsign_bw", "ttnn.split", "ttnn.sqrt", "ttnn.sqrt_bw", "ttnn.square", "ttnn.square_bw", "ttnn.squared_difference", "ttnn.squared_difference_bw", "ttnn.std", "ttnn.sub_bw", "ttnn.subalpha", "ttnn.subalpha_bw", "ttnn.subtract", "ttnn.sum", "ttnn.swiglu", "ttnn.swish", "ttnn.synchronize_device", "ttnn.tan", "ttnn.tan_bw", "ttnn.tanh", "ttnn.tanh_bw", "ttnn.tanhshrink", "ttnn.tanhshrink_bw", "ttnn.threshold", "ttnn.threshold_bw", "ttnn.tilize", "ttnn.tilize_with_val_padding", "ttnn.to_device", "ttnn.to_layout", "ttnn.to_memory_config", "ttnn.to_torch", "ttnn.topk", "ttnn.transformer.attention_softmax", "ttnn.transformer.attention_softmax_", "ttnn.transformer.concatenate_heads", "ttnn.experimental.rotary_embedding", "ttnn.transformer.scaled_dot_product_attention", "ttnn.transformer.scaled_dot_product_attention_decode", "ttnn.transformer.scaled_dot_product_attention_decode_gqa", "ttnn.transformer.split_query_key_value_and_split_heads", "ttnn.tril", "ttnn.triu", "ttnn.trunc", "ttnn.trunc_bw", "ttnn.untilize", "ttnn.untilize_with_halo_v2", "ttnn.untilize_with_unpadding", "ttnn.upsample", "ttnn.var", "ttnn.where", "ttnn.where_bw", "ttnn.xlogy", "ttnn.xlogy_bw", "ttnn.zeros", "ttnn.zeros_like", "Tutorials", "Graphing Torch DiT_XL_2 With TTNN", "Matmul Operation", "Multi-Head Attention", "ttnn Profiling", "Resnet Basic Block", "Tensor and Add Operation", "ttnn Tracer", "Tensor and Add Operation", "Matrix Multiplication", "Multi-Head Attention", "Tracing ttnn operations and torch modules/functions", "Profiling ttnn operations", "Resnet Block", "Build a graph of a pytorch based model", "Using ttnn", "Placeholder title"], "terms": {"tt": [0, 2, 35, 36, 37, 39, 51, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 73, 77, 83, 395, 396, 414, 416, 425, 426, 429, 430, 433, 434, 435, 436, 437, 438, 439], "metal": [0, 51, 55, 56, 57, 58, 59, 60, 61, 64, 67, 74, 76, 77, 425, 433, 434, 435, 436, 437, 438, 439], "A": [0, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 27, 29, 30, 32, 33, 42, 43, 44, 46, 47, 68, 71, 72, 74, 75, 77, 78, 80, 272, 365, 407, 408], "low": [0, 35, 36, 37, 42, 126, 128, 173], "level": [0, 10, 20, 21, 26, 28, 30, 35, 36, 37, 38, 41, 42, 43, 53, 77, 79], "program": [0, 7, 10, 12, 13, 16, 28, 29, 30, 31, 42, 52, 55, 58, 59, 60, 62, 65, 67, 68, 73, 79, 240, 272, 402, 403, 425, 427, 428, 433, 436, 437, 438], "model": [0, 39, 55, 56, 59, 60, 65, 67, 71, 77, 78, 79, 282, 283, 425, 426, 428, 432, 433, 434, 437, 438], "user": [0, 4, 13, 15, 16, 18, 26, 29, 30, 34, 41, 42, 43, 44, 55, 56, 57, 58, 59, 60, 61, 66, 67, 68, 71, 76, 77, 78, 213, 282, 283, 396, 433, 434, 435, 436, 437, 438, 439], "face": 0, "host": [0, 1, 56, 57, 58, 59, 60, 62, 72, 74, 75, 79, 80, 102, 302, 386, 398, 425, 431, 434, 435, 436, 437, 438], "host_api": 0, "hpp": [0, 30, 43, 52, 68], "api": [0, 5, 11, 13, 16, 17, 18, 19, 20, 26, 30, 32, 41, 42, 43, 44, 46, 47, 57, 62, 66, 67, 68, 70, 73, 76, 77, 78, 406, 435, 440], "devic": [1, 26, 38, 39, 46, 51, 58, 59, 60, 61, 62, 67, 70, 71, 73, 74, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 410, 411, 412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 425, 427, 428, 431, 436, 437, 438, 439], "common": [1, 3, 10, 20, 21, 26, 30, 41, 42, 43, 46, 47, 52, 66, 68, 71, 75, 77], "code": [1, 3, 5, 6, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 26, 27, 30, 33, 40, 41, 42, 43, 44, 45, 46, 47, 52, 55, 59, 64, 68, 72, 75, 76, 77, 78, 79, 101, 302, 324, 325, 371, 401, 409, 433, 437, 440], "under": [1, 3, 14, 18, 20, 28, 31, 33, 34, 40, 42, 43, 46, 51, 52, 65, 66, 71, 72, 78, 79, 425, 440], "thi": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 26, 27, 29, 30, 31, 33, 34, 38, 39, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 55, 56, 57, 61, 63, 65, 66, 67, 68, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 83, 101, 102, 154, 180, 181, 194, 213, 272, 302, 303, 331, 332, 365, 405, 406, 425, 426, 429, 430, 433, 434, 435, 439, 440], "subdirectori": [1, 38, 45], "modul": [1, 3, 5, 10, 14, 15, 20, 30, 39, 41, 42, 45, 48, 51, 55, 56, 57, 61, 62, 67, 68, 70, 75, 76, 282, 283, 425, 430, 432, 433, 434, 435, 439], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 32, 33, 34, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 91, 93, 94, 96, 101, 110, 114, 129, 132, 139, 145, 146, 149, 153, 154, 156, 172, 173, 188, 194, 197, 210, 216, 217, 218, 227, 230, 231, 254, 255, 267, 272, 274, 279, 282, 283, 284, 285, 287, 289, 300, 302, 305, 307, 310, 313, 317, 324, 325, 337, 346, 347, 364, 371, 377, 379, 381, 386, 398, 400, 401, 402, 403, 405, 406, 407, 408, 409, 417, 422, 425, 426, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440], "share": [1, 12, 13, 14, 15, 16, 21, 29, 39, 41, 42, 43, 45, 68, 74, 408], "between": [1, 3, 4, 6, 7, 8, 9, 10, 12, 15, 16, 18, 26, 41, 43, 47, 62, 67, 68, 73, 75, 77], "lf": [2, 51, 77], "repo": [2, 38, 39, 50, 77], "us": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 26, 27, 30, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 61, 62, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 102, 114, 131, 139, 153, 154, 159, 161, 165, 173, 191, 192, 213, 240, 272, 282, 283, 317, 318, 324, 325, 335, 336, 344, 364, 365, 395, 396, 398, 399, 400, 401, 405, 407, 408, 409, 414, 416, 425, 427, 428, 431, 432, 437, 439], "checkpoint": 2, "other": [2, 6, 9, 10, 12, 13, 14, 15, 16, 18, 19, 21, 26, 27, 28, 29, 32, 33, 39, 41, 42, 43, 44, 45, 46, 47, 51, 64, 67, 68, 70, 71, 75, 76, 77, 80, 426, 429, 430, 440], "larger": [2, 12, 29, 41, 43], "data": [2, 3, 6, 8, 9, 10, 11, 12, 13, 15, 18, 20, 26, 29, 30, 31, 39, 41, 42, 43, 44, 47, 53, 59, 62, 70, 72, 74, 75, 79, 83, 90, 101, 102, 129, 149, 153, 154, 156, 172, 173, 185, 188, 194, 197, 229, 231, 240, 252, 253, 256, 260, 267, 272, 275, 288, 289, 317, 376, 382, 395, 396, 398, 399, 401, 414, 415, 416, 417, 425, 431, 437, 440], "storag": [2, 3, 12, 26, 41, 42, 43, 62, 73, 75, 425, 431], "metalium": [2, 53, 65, 66, 77], "project": [2, 3, 12, 13, 28, 30, 34, 38, 40, 41, 42, 43, 45, 46, 48, 63, 64, 66, 76, 77], "pybind11": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 68], "seamless": 3, "oper": [3, 4, 6, 10, 11, 14, 15, 16, 18, 19, 20, 26, 29, 41, 42, 43, 44, 46, 53, 56, 57, 62, 67, 71, 72, 73, 74, 76, 78, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 129, 131, 132, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 182, 183, 189, 190, 191, 192, 193, 194, 195, 198, 199, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 221, 222, 223, 224, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 258, 259, 262, 263, 265, 266, 268, 269, 270, 272, 274, 276, 279, 280, 281, 285, 286, 287, 290, 291, 292, 293, 294, 296, 297, 301, 306, 308, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 341, 343, 344, 345, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 372, 373, 374, 375, 377, 379, 380, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 398, 400, 412, 413, 419, 420, 421, 422, 425, 429, 432, 434, 435], "c": [3, 5, 6, 7, 8, 9, 12, 13, 15, 18, 21, 25, 26, 27, 28, 29, 30, 32, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 55, 56, 57, 58, 59, 60, 62, 75, 79, 80, 149, 172, 173, 417, 433, 434, 435, 436, 437, 438], "11": [3, 7, 10, 12, 16, 20, 21, 26, 29, 32, 41, 43, 44, 45, 46, 47, 55, 56, 57, 58, 59, 60, 62, 433, 434, 435, 436, 437, 438], "python": [3, 4, 5, 7, 8, 9, 10, 16, 18, 21, 31, 39, 41, 42, 43, 44, 45, 46, 51, 59, 61, 62, 66, 75, 77, 78, 79, 437, 439], "setuptool": [3, 59, 437], "examplscikit": [3, 59, 437], "build": [3, 12, 16, 18, 28, 29, 30, 31, 32, 34, 38, 39, 41, 42, 43, 45, 48, 49, 52, 59, 62, 72, 77, 425, 426, 429, 437], "cmake": [3, 13, 31, 38, 41, 42, 43, 45, 49, 77], "lightweight": [3, 19, 30, 43], "header": [3, 4, 6, 7, 9, 10, 12, 15, 18, 29, 30, 39, 41, 42, 43, 44, 45, 46, 52, 62, 65], "onli": [3, 5, 6, 10, 11, 12, 13, 16, 18, 20, 21, 24, 26, 29, 30, 41, 42, 43, 44, 45, 46, 47, 49, 52, 60, 68, 70, 71, 74, 75, 79, 80, 91, 93, 94, 96, 97, 101, 110, 114, 115, 116, 117, 118, 119, 120, 122, 132, 139, 145, 146, 154, 173, 175, 178, 210, 227, 230, 235, 236, 254, 255, 270, 272, 274, 279, 284, 285, 307, 317, 333, 347, 377, 379, 381, 386, 406, 407, 409, 419, 422, 425, 426, 429, 430, 438, 440], "librari": [3, 6, 7, 11, 12, 16, 17, 18, 20, 24, 25, 26, 29, 30, 38, 39, 41, 42, 43, 44, 45, 46, 50, 53, 62, 66, 67, 72, 73, 74, 425, 426], "expos": [3, 7, 9, 10, 12, 15, 16, 17, 18, 68], "type": [3, 4, 6, 9, 11, 14, 15, 17, 20, 21, 26, 29, 30, 34, 40, 41, 42, 43, 44, 46, 47, 52, 53, 59, 61, 62, 68, 70, 72, 73, 74, 77, 79, 83, 90, 99, 101, 102, 114, 129, 134, 153, 154, 156, 172, 173, 185, 188, 192, 194, 197, 215, 229, 231, 240, 252, 253, 256, 260, 267, 272, 275, 288, 289, 306, 317, 320, 338, 376, 382, 395, 396, 398, 399, 401, 414, 416, 425, 431, 437, 439], "vice": [3, 7, 8, 14, 399], "versa": [3, 7, 8, 14, 399], "mainli": [3, 13], "creat": [3, 6, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 26, 29, 30, 31, 41, 42, 44, 45, 52, 57, 61, 62, 66, 68, 72, 74, 75, 78, 80, 139, 425, 430, 431, 435, 439], "bind": [3, 6, 7, 8, 9, 13, 18, 21, 32, 59, 62, 437], "exist": [3, 10, 12, 13, 14, 15, 18, 21, 26, 29, 30, 32, 42, 43, 44, 59, 61, 68, 74, 300, 437, 439], "Its": [3, 26, 42], "goal": [3, 52, 78], "syntax": [3, 12, 15, 19, 30, 42, 43, 44, 47], "ar": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 55, 56, 57, 62, 65, 66, 70, 71, 72, 74, 75, 76, 77, 79, 80, 173, 272, 295, 324, 325, 386, 401, 408, 409, 417, 425, 426, 429, 430, 433, 434, 435, 440], "similar": [3, 6, 7, 10, 12, 13, 14, 21, 41, 42, 44, 47, 55, 57, 79, 433, 435], "excel": [3, 4], "boost": [3, 10, 15, 41, 42, 43], "david": 3, "abraham": 3, "minim": [3, 41, 43, 44, 46], "boilerpl": 3, "tradit": [3, 12, 26], "extens": [3, 5, 9, 12, 13, 41, 42, 43, 44, 45, 46, 59, 61, 437, 439], "infer": [3, 59, 65, 71, 79, 437], "inform": [3, 4, 12, 13, 15, 19, 21, 25, 26, 28, 33, 47, 75, 425], "time": [3, 4, 6, 7, 9, 10, 12, 13, 15, 16, 18, 20, 26, 29, 30, 32, 41, 42, 43, 44, 45, 46, 47, 52, 53, 56, 57, 59, 65, 71, 75, 77, 79, 272, 282, 288, 335, 434, 435, 437, 440], "introspect": 3, "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 34, 38, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 55, 56, 61, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 149, 151, 153, 173, 194, 208, 225, 226, 233, 272, 324, 325, 331, 332, 335, 337, 401, 406, 407, 408, 417, 433, 434, 439, 440], "main": [3, 8, 12, 13, 20, 29, 30, 38, 41, 42, 43, 44, 45, 48, 59, 61, 77, 78, 425, 437, 439, 440], "issu": [3, 11, 12, 13, 15, 16, 20, 21, 28, 30, 34, 41, 42, 43, 45, 46, 52, 55, 56, 57, 58, 59, 60, 64, 71, 77, 78, 79, 365, 433, 434, 435, 436, 437, 438], "reason": [3, 6, 12, 15, 18, 26, 42, 43, 74], "an": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 47, 52, 55, 57, 61, 62, 64, 65, 67, 68, 71, 74, 75, 76, 77, 78, 79, 80, 153, 171, 173, 174, 178, 194, 272, 305, 310, 333, 433, 435, 439], "enorm": 3, "larg": [3, 6, 9, 10, 18, 26, 30, 33, 41, 43, 47, 58, 70, 365, 436], "complex": [3, 9, 12, 15, 18, 26, 30, 41, 42, 44, 62, 73, 98, 99, 133, 134, 214, 215, 305, 306, 319, 320], "suit": [3, 38, 42], "util": [3, 16, 17, 42, 44, 55, 56, 61, 74, 433, 434, 439], "work": [3, 5, 6, 7, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 26, 29, 30, 39, 41, 42, 43, 45, 46, 48, 49, 52, 53, 66, 70, 71, 425, 426, 429, 430, 440], "almost": [3, 7, 41], "everi": [3, 5, 6, 8, 10, 11, 12, 14, 15, 18, 26, 41, 42, 44, 57, 71, 74, 77, 79, 435, 440], "compat": [3, 6, 12, 18, 41, 42, 43, 44, 45, 67, 77, 426, 429, 430], "ha": [3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 21, 26, 29, 30, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 52, 55, 61, 70, 71, 72, 74, 75, 79, 80, 282, 283, 409, 417, 433, 439, 440], "its": [3, 4, 6, 7, 9, 12, 13, 14, 15, 16, 18, 26, 28, 29, 42, 43, 44, 45, 47, 51, 68, 70, 71, 74, 75, 77, 78, 79, 80, 272, 302, 440], "cost": [3, 7, 43, 75], "arcan": 3, "templat": [3, 5, 6, 10, 16, 18, 20, 21, 25, 26, 29, 41, 43, 44, 46, 79], "trick": 3, "workaround": [3, 16, 43], "necessari": [3, 5, 6, 11, 12, 15, 18, 19, 34, 71], "oldest": 3, "buggiest": 3, "specimen": 3, "now": [3, 4, 5, 6, 9, 12, 15, 16, 18, 26, 29, 38, 41, 42, 43, 45, 55, 57, 66, 76, 77, 80, 417, 433, 435], "wide": [3, 9, 30, 41, 43, 44], "avail": [3, 9, 10, 12, 14, 15, 16, 17, 18, 26, 29, 31, 41, 42, 43, 45, 46, 47, 52, 68, 72, 74, 122, 175, 264, 417, 425, 426, 429, 430, 440], "heavi": [3, 42], "machineri": [3, 10, 16], "becom": [3, 9, 129, 398], "excess": [3, 16, 42], "unnecessari": [3, 41, 43], "depend": [3, 4, 7, 8, 9, 11, 15, 16, 18, 20, 26, 29, 30, 31, 38, 41, 42, 43, 44, 45, 46, 47, 48, 59, 62, 66, 67, 71, 77, 79, 80, 129, 272, 398, 425, 437], "think": [3, 16, 26], "tini": 3, "self": [3, 5, 12, 15, 16, 19, 42, 46, 60, 68, 70, 74, 75, 80, 438], "contain": [3, 6, 7, 8, 11, 12, 14, 15, 16, 18, 19, 21, 24, 26, 28, 29, 31, 32, 39, 41, 42, 43, 44, 46, 47, 55, 65, 66, 74, 80, 153, 433], "version": [3, 8, 10, 12, 13, 14, 15, 16, 18, 19, 28, 29, 30, 32, 41, 42, 43, 44, 45, 48, 55, 56, 58, 59, 62, 77, 79, 272, 282, 283, 407, 408, 425, 428, 430, 433, 434, 436, 437], "everyth": [3, 13, 16, 20], "strip": [3, 42, 43], "awai": [3, 38, 80], "isn": [3, 6], "t": [3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 18, 21, 26, 31, 32, 41, 42, 43, 44, 45, 47, 52, 55, 57, 59, 68, 72, 74, 75, 79, 81, 83, 213, 282, 283, 433, 435, 437], "relev": [3, 64, 71], "gener": [3, 5, 6, 7, 8, 12, 13, 15, 18, 19, 21, 26, 28, 29, 39, 41, 42, 43, 44, 45, 47, 50, 51, 52, 55, 56, 57, 58, 59, 60, 71, 75, 77, 79, 153, 173, 305, 433, 434, 435, 436, 437, 438, 441], "without": [3, 6, 7, 10, 12, 14, 15, 16, 17, 18, 21, 27, 33, 41, 43, 44, 47, 51, 65, 72, 74, 75], "comment": [3, 16, 26, 78], "file": [3, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 27, 29, 34, 39, 41, 42, 43, 44, 45, 46, 48, 51, 52, 59, 61, 62, 64, 66, 68, 71, 77, 79, 102, 437, 439, 440], "requir": [3, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 26, 28, 29, 34, 38, 41, 42, 43, 44, 46, 51, 59, 61, 65, 68, 71, 74, 75, 77, 79, 83, 91, 93, 139, 146, 172, 173, 275, 282, 283, 285, 347, 379, 381, 429, 437, 439], "4k": 3, "line": [3, 12, 13, 15, 16, 20, 26, 29, 30, 42, 43, 44, 47, 52, 59, 437], "3": [3, 6, 9, 12, 13, 14, 15, 16, 18, 19, 26, 28, 29, 30, 32, 34, 39, 41, 42, 43, 44, 45, 46, 47, 52, 55, 56, 57, 58, 59, 60, 61, 62, 65, 74, 75, 77, 80, 87, 91, 93, 94, 95, 96, 97, 101, 102, 104, 106, 110, 111, 113, 114, 123, 124, 131, 132, 138, 142, 144, 146, 153, 160, 162, 164, 165, 166, 167, 169, 170, 173, 174, 183, 185, 190, 194, 195, 200, 205, 210, 212, 230, 235, 236, 244, 246, 248, 251, 254, 255, 264, 270, 274, 279, 285, 292, 304, 309, 316, 326, 329, 335, 338, 345, 347, 350, 354, 356, 359, 361, 363, 364, 367, 370, 375, 377, 379, 381, 384, 388, 392, 394, 398, 400, 409, 413, 419, 420, 422, 433, 434, 435, 436, 437, 438, 439], "6": [3, 6, 10, 12, 14, 15, 18, 26, 30, 32, 41, 42, 43, 47, 55, 56, 57, 58, 59, 60, 61, 62, 74, 80, 286, 433, 434, 435, 436, 437, 438, 439], "pypi": [3, 12, 16, 59, 61, 437, 439], "standard": [3, 4, 7, 10, 12, 14, 17, 19, 21, 29, 30, 34, 41, 42, 43, 44, 46, 47, 63, 64, 71, 76, 332], "compact": [3, 43, 46], "implement": [3, 5, 10, 11, 12, 14, 15, 20, 26, 30, 39, 41, 42, 43, 44, 47, 62, 65, 67, 70, 75, 78, 79, 272, 406, 407, 409, 425, 428, 430], "wa": [3, 5, 6, 9, 12, 14, 15, 16, 26, 41, 43, 52, 55, 61, 68, 71, 79, 80, 433, 439], "possibl": [3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 29, 41, 43, 44, 46, 58, 70, 75, 400, 436], "thank": [3, 40, 41, 43], "some": [3, 6, 9, 11, 12, 15, 18, 26, 41, 42, 43, 44, 46, 47, 51, 67, 68, 75, 440], "new": [3, 7, 9, 12, 13, 14, 15, 16, 18, 20, 21, 26, 29, 32, 41, 42, 43, 45, 47, 51, 55, 58, 62, 71, 73, 79, 335, 433, 436], "languag": [3, 7, 8, 9, 11, 29, 32, 42, 46, 47], "specif": [3, 6, 12, 14, 18, 19, 26, 29, 39, 41, 42, 43, 44, 47, 52, 59, 68, 71, 75, 77, 80, 101, 407, 408, 425, 437], "tupl": [3, 9, 10, 12, 15, 19, 41, 43, 44, 68, 75, 139, 273, 277, 278, 302, 378, 383, 401, 409, 417, 418], "lambda": [3, 7, 12, 14, 18, 58, 60, 70, 201, 368, 436, 438], "function": [3, 5, 6, 8, 9, 10, 11, 13, 14, 16, 17, 21, 22, 26, 29, 39, 40, 41, 42, 43, 44, 46, 47, 50, 52, 55, 62, 70, 71, 72, 74, 75, 88, 90, 99, 102, 105, 112, 121, 124, 126, 128, 134, 137, 141, 143, 151, 156, 168, 182, 188, 190, 195, 197, 200, 202, 204, 206, 207, 208, 213, 215, 227, 229, 231, 233, 238, 240, 245, 252, 253, 256, 259, 260, 264, 267, 272, 281, 282, 283, 284, 286, 288, 289, 296, 297, 306, 307, 313, 315, 320, 326, 331, 332, 338, 340, 342, 349, 362, 365, 367, 369, 376, 382, 384, 385, 390, 391, 393, 397, 410, 411, 425, 432, 433], "variad": [3, 10, 43], "sinc": [3, 6, 8, 10, 12, 14, 15, 16, 18, 20, 21, 26, 28, 41, 43, 44, 52, 65, 72], "creation": [3, 12, 43, 62, 74], "grown": 3, "beyond": 3, "mani": [3, 7, 8, 12, 15, 18, 26, 29, 30, 32, 42, 43, 44, 46, 47, 56, 61, 66, 68, 70, 434, 439], "wai": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 26, 30, 39, 41, 44, 45, 48, 55, 65, 67, 70, 75, 77, 282, 283, 371, 433], "lead": [3, 12, 15, 16, 20, 42, 43, 47], "dramat": 3, "simpler": [3, 43], "situat": [3, 6, 7, 8, 9, 10, 12, 15, 18, 21], "tutori": [3, 28, 30, 31, 57, 61, 62, 77, 426, 429, 430, 435, 439], "refer": [3, 5, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 30, 33, 34, 41, 42, 43, 44, 47, 50, 64, 65, 66, 67, 74, 78, 80, 287, 440], "document": [3, 6, 12, 13, 14, 26, 27, 28, 30, 32, 40, 41, 42, 43, 45, 52, 59, 66, 68, 71, 77, 78, 437], "provid": [3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 20, 21, 22, 26, 27, 29, 30, 31, 32, 33, 39, 41, 42, 43, 44, 45, 46, 47, 48, 55, 57, 66, 67, 71, 74, 75, 77, 78, 79, 80, 101, 115, 116, 117, 118, 119, 120, 178, 282, 283, 317, 333, 364, 386, 396, 401, 433, 435, 440], "readthedoc": [3, 43], "io": [3, 14, 28, 30, 40, 42, 43, 45, 79], "pdf": [3, 30, 32, 43], "manual": [3, 9, 14, 15, 16, 18, 29, 68, 70, 440], "here": [3, 7, 9, 12, 13, 14, 15, 16, 26, 28, 41, 42, 43, 52, 56, 61, 62, 64, 68, 77, 434, 439, 441], "And": [3, 15, 55, 56, 68, 70, 74, 75, 80, 433, 434], "sourc": [3, 4, 5, 6, 13, 15, 27, 30, 31, 33, 39, 41, 42, 43, 44, 45, 46, 65, 66, 77, 225, 425, 429], "alwai": [3, 6, 9, 12, 14, 15, 16, 19, 20, 21, 26, 29, 43, 47, 55, 58, 59, 425, 433, 436, 437], "github": [3, 16, 28, 29, 30, 32, 34, 40, 41, 42, 43, 45, 46, 48, 62, 64, 76, 77, 425, 426], "com": [3, 16, 28, 29, 30, 32, 34, 39, 40, 41, 42, 43, 44, 45, 46, 48, 52, 62, 76, 77, 425, 426], "pybind": [3, 10, 15, 16, 68], "can": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 26, 29, 30, 34, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 56, 57, 58, 60, 61, 64, 65, 66, 67, 68, 70, 72, 74, 75, 76, 77, 79, 80, 114, 192, 272, 314, 318, 324, 325, 365, 425, 433, 434, 435, 436, 438, 439, 440], "map": [3, 6, 9, 10, 12, 18, 26, 29, 41, 43, 55, 56, 57, 58, 59, 60, 68, 102, 433, 434, 435, 436, 437, 438], "follow": [3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 26, 27, 29, 30, 31, 40, 41, 42, 43, 44, 45, 47, 51, 52, 61, 65, 68, 70, 72, 74, 75, 76, 77, 78, 79, 80, 173, 190, 195, 272, 324, 325, 326, 384, 425, 439, 440], "accept": [3, 6, 11, 12, 16, 18, 20, 21, 29, 41, 43, 44, 71, 78, 406, 407, 408], "return": [3, 5, 7, 9, 10, 12, 13, 14, 16, 18, 19, 20, 21, 26, 30, 41, 43, 44, 57, 58, 59, 60, 61, 68, 70, 72, 74, 75, 90, 101, 129, 133, 154, 156, 157, 171, 174, 188, 189, 194, 197, 198, 213, 217, 218, 227, 229, 231, 232, 240, 252, 253, 256, 257, 260, 261, 267, 268, 272, 284, 288, 289, 290, 295, 300, 302, 303, 321, 324, 325, 335, 346, 371, 376, 382, 398, 401, 404, 409, 435, 436, 437, 438, 439], "custom": [3, 8, 9, 10, 15, 16, 18, 19, 26, 29, 39, 41, 43, 44, 45, 57, 68, 77, 324, 325, 435], "structur": [3, 9, 10, 13, 15, 16, 17, 29, 68, 70], "per": [3, 12, 42, 46, 59, 75, 415, 437], "valu": [3, 4, 5, 7, 9, 10, 11, 12, 14, 18, 19, 20, 21, 26, 29, 34, 41, 42, 43, 44, 47, 50, 57, 62, 71, 72, 74, 75, 93, 94, 96, 101, 114, 115, 117, 118, 120, 124, 125, 126, 127, 128, 132, 133, 139, 143, 152, 171, 172, 173, 192, 194, 200, 201, 202, 204, 206, 207, 208, 216, 217, 218, 225, 226, 234, 238, 264, 266, 287, 302, 307, 311, 313, 314, 317, 318, 331, 332, 340, 346, 349, 365, 366, 367, 368, 381, 393, 394, 396, 401, 409, 410, 411, 415, 425, 427, 431, 435, 440], "pointer": [3, 6, 7, 12, 14, 15, 16, 18, 19, 26, 41, 43, 47, 74], "instanc": [3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 18, 19, 21, 26, 48, 49], "method": [3, 5, 6, 7, 14, 15, 16, 17, 18, 20, 26, 30, 31, 41, 42, 43, 44, 59, 68, 75, 77, 80, 437], "static": [3, 5, 9, 10, 14, 15, 16, 18, 21, 26, 30, 41, 43, 45, 68], "overload": [3, 10, 18, 26, 41, 43, 44, 55, 68, 74, 338, 397, 433], "attribut": [3, 10, 12, 15, 16, 19, 26, 32, 41, 42, 43, 59, 62, 68, 70, 75, 79, 80, 425, 431, 437], "arbitrari": [3, 6, 7, 9, 10, 12, 14, 15, 16, 18, 19, 41, 43], "except": [3, 6, 7, 12, 15, 16, 17, 20, 27, 40, 41, 43, 44, 47, 55, 57, 59, 75, 272, 433, 435, 437], "enumer": 3, "callback": [3, 12, 14, 16], "iter": [3, 10, 14, 15, 19, 30, 41, 43, 44, 62, 425, 428], "rang": [3, 5, 30, 41, 42, 43, 44, 47, 68, 74, 75, 83, 116, 117, 119, 137, 172, 173, 245, 275, 286, 307, 362], "singl": [3, 11, 12, 13, 14, 20, 21, 26, 42, 43, 46, 47, 52, 55, 68, 70, 78, 79, 80, 407, 433], "multipl": [3, 10, 13, 14, 15, 20, 21, 26, 30, 31, 43, 62, 68, 74, 75, 79, 129, 173, 272, 282, 396, 398, 425, 427], "inherit": [3, 16, 44], "stl": [3, 8, 9, 11, 12, 15, 28, 29, 68], "smart": [3, 15, 30], "count": [3, 5, 9, 14, 15, 16, 18, 21, 26, 31, 43, 47, 59, 74, 79, 172, 173, 437], "like": [3, 6, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 21, 26, 41, 42, 43, 44, 45, 46, 52, 55, 63, 70, 72, 77, 80, 171, 174, 365, 433, 440], "std": [3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 26, 30, 41, 42, 43, 44, 46, 47, 60, 62, 68, 69, 74, 75, 87, 89, 93, 95, 97, 99, 101, 104, 106, 107, 110, 111, 113, 114, 123, 124, 125, 126, 127, 128, 132, 134, 136, 138, 142, 144, 148, 152, 160, 162, 164, 167, 168, 170, 171, 174, 176, 179, 183, 192, 200, 201, 202, 203, 204, 205, 206, 207, 210, 212, 215, 216, 230, 234, 236, 239, 244, 246, 248, 249, 251, 254, 255, 264, 265, 266, 274, 279, 287, 292, 295, 304, 306, 307, 308, 311, 314, 316, 317, 318, 320, 329, 330, 334, 336, 340, 341, 342, 343, 345, 347, 349, 350, 354, 356, 359, 361, 363, 366, 367, 368, 370, 373, 375, 377, 381, 388, 390, 392, 393, 394, 401, 410, 411, 413, 420, 422, 438], "shared_ptr": [3, 15, 43, 44], "intern": [3, 9, 10, 12, 13, 15, 16, 18, 26, 41, 43, 75, 76], "correct": [3, 12, 26, 34, 41, 42, 43, 68], "class": [3, 5, 6, 7, 9, 10, 13, 14, 15, 16, 18, 19, 21, 26, 41, 43, 44, 46, 47, 59, 60, 61, 70, 71, 74, 75, 79, 80, 437, 438, 439], "virtual": [3, 16, 41, 44, 66, 77], "pure": [3, 11, 12, 13, 14, 19, 41, 59, 437], "extend": [3, 13, 16, 41, 43, 272], "In": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 29, 30, 33, 41, 42, 43, 44, 45, 47, 52, 53, 55, 61, 66, 68, 70, 72, 75, 79, 80, 129, 272, 398, 403, 433, 439], "addit": [3, 4, 9, 10, 12, 14, 16, 18, 20, 26, 29, 30, 43, 44, 46, 47, 70, 75, 77], "extra": [3, 7, 12, 13, 20, 41, 42], "pypy3": 3, "7": [3, 10, 12, 18, 26, 29, 32, 39, 41, 43, 44, 47, 55, 56, 57, 58, 59, 60, 61, 62, 74, 153, 433, 434, 435, 436, 437, 438, 439], "agnost": [3, 11, 26, 41], "interfac": [3, 9, 12, 13, 19, 21, 22, 29, 30, 39, 43, 67, 75], "2": [3, 5, 6, 9, 12, 13, 14, 15, 16, 18, 20, 26, 28, 30, 32, 34, 39, 41, 42, 43, 44, 45, 46, 47, 48, 52, 55, 56, 57, 58, 59, 60, 62, 73, 74, 77, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 219, 220, 221, 222, 223, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 301, 302, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 400, 406, 409, 410, 411, 412, 413, 419, 420, 421, 422, 425, 426, 433, 434, 435, 436, 437, 438], "9": [3, 6, 15, 26, 41, 42, 43, 44, 47, 55, 56, 57, 58, 59, 60, 61, 62, 74, 75, 77, 137, 153, 433, 434, 435, 436, 437, 438, 439], "last": [3, 8, 12, 14, 15, 18, 26, 30, 41, 47, 62, 73, 74, 75, 79, 80, 101, 129, 398, 401, 409], "5": [3, 6, 10, 12, 15, 18, 19, 26, 30, 31, 32, 41, 42, 43, 55, 56, 57, 58, 59, 60, 61, 62, 74, 77, 139, 153, 200, 201, 202, 204, 338, 367, 368, 433, 434, 435, 436, 437, 438, 439], "It": [3, 4, 6, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 26, 29, 34, 39, 41, 42, 43, 44, 45, 47, 52, 55, 65, 68, 74, 75, 77, 282, 283, 433], "captur": [3, 7, 11, 14, 17, 32, 43, 61, 62, 439], "variabl": [3, 5, 6, 7, 12, 14, 16, 29, 30, 38, 39, 41, 43, 44, 45, 51, 52, 58, 60, 66, 68, 75, 77, 436, 438, 440], "store": [3, 6, 7, 12, 16, 26, 29, 41, 42, 43, 44, 55, 68, 74, 79, 80, 433], "insid": [3, 14, 39, 50, 74, 440], "result": [3, 4, 6, 7, 11, 12, 13, 15, 16, 18, 19, 20, 26, 27, 29, 31, 34, 41, 42, 43, 44, 46, 47, 62, 65, 67, 72, 75, 79, 173, 240, 272, 317, 425, 427], "object": [3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 16, 18, 19, 20, 21, 26, 27, 41, 43, 44, 45, 47, 61, 67, 70, 74, 78, 139, 439], "move": [3, 12, 15, 19, 26, 39, 41, 43, 48, 52, 55, 57, 58, 59, 68, 71, 72, 74, 75, 433, 435, 436, 437], "constructor": [3, 15, 16, 18, 19, 20, 26, 41, 43, 62, 74, 425, 430], "assign": [3, 5, 12, 26, 30, 41, 72, 107], "whenev": [3, 16], "effici": [3, 18, 26, 29, 30, 43, 44, 55, 56, 433, 434], "transfer": [3, 15, 55, 433], "": [3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 26, 29, 34, 39, 41, 42, 43, 44, 45, 46, 47, 55, 56, 57, 61, 65, 66, 67, 68, 71, 74, 75, 80, 282, 283, 406, 407, 408, 433, 434, 435, 439], "easi": [3, 6, 10, 13, 26, 30, 41, 44, 55, 65, 433], "through": [3, 14, 15, 16, 18, 26, 30, 50, 61, 62, 73, 77, 439], "buffer": [3, 11, 17, 19, 20, 30, 41, 42, 43, 44, 46, 62, 68, 73, 74, 75, 79, 80], "protocol": [3, 14, 17], "handi": [3, 20], "e": [3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 29, 41, 43, 44, 45, 47, 48, 52, 53, 68, 75, 77, 79, 272, 440], "g": [3, 6, 7, 10, 12, 13, 14, 15, 16, 18, 19, 26, 30, 36, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 65, 75, 79, 272], "fast": [3, 18, 19, 26, 41, 42, 43, 46, 62, 73, 159, 161, 165, 191, 344], "convers": [3, 5, 6, 14, 15, 19, 21, 41, 42, 43, 47, 55, 62, 72, 74, 316, 398, 433], "matrix": [3, 6, 9, 15, 18, 26, 31, 55, 62, 77, 80, 153, 240, 272, 425, 427, 433, 440], "eigen": [3, 8, 9, 10, 15, 18, 25, 26, 41], "numpi": [3, 6, 15, 17, 19, 59, 61, 74, 80, 437, 439], "expens": [3, 6, 9, 44], "copi": [3, 7, 8, 9, 10, 12, 13, 15, 16, 18, 26, 27, 30, 33, 41, 47, 48, 51, 55, 68, 74, 75, 129, 213, 433], "automat": [3, 4, 8, 9, 11, 14, 15, 16, 18, 26, 29, 32, 41, 42, 43, 45, 46, 47, 55, 56, 68, 71, 72, 75, 79, 80, 129, 398, 433, 434], "vector": [3, 9, 10, 12, 15, 17, 25, 41, 42, 43, 44, 46, 47, 50, 52, 68, 74, 75, 87, 89, 93, 95, 97, 99, 104, 106, 107, 110, 111, 113, 114, 123, 124, 125, 126, 127, 128, 132, 134, 136, 138, 142, 144, 148, 152, 160, 162, 164, 167, 168, 170, 171, 174, 176, 179, 183, 192, 200, 201, 202, 203, 204, 205, 206, 207, 210, 212, 215, 230, 234, 236, 239, 244, 246, 248, 249, 251, 254, 255, 264, 265, 266, 272, 274, 279, 287, 292, 306, 307, 308, 309, 311, 314, 316, 317, 318, 320, 329, 330, 334, 336, 340, 341, 342, 343, 345, 347, 349, 350, 354, 356, 359, 361, 363, 366, 367, 368, 370, 373, 375, 377, 381, 388, 390, 392, 393, 394, 410, 411, 413, 420, 422], "so": [3, 6, 8, 10, 11, 12, 13, 14, 15, 18, 21, 26, 27, 29, 34, 38, 39, 41, 42, 43, 44, 47, 49, 50, 52, 55, 61, 68, 70, 72, 74, 75, 173, 408, 433, 439], "thei": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 26, 29, 39, 41, 42, 43, 44, 47, 56, 57, 68, 71, 75, 434, 435], "transpar": [3, 6, 18, 21], "appli": [3, 5, 6, 10, 12, 13, 14, 15, 21, 26, 41, 42, 43, 44, 71, 75, 84, 86, 90, 103, 108, 115, 116, 117, 118, 119, 120, 122, 135, 151, 156, 158, 159, 161, 163, 165, 166, 169, 175, 188, 190, 191, 193, 194, 195, 197, 199, 208, 211, 220, 221, 222, 223, 224, 229, 231, 233, 237, 240, 242, 243, 247, 250, 252, 253, 256, 258, 260, 267, 269, 272, 288, 289, 291, 294, 302, 310, 322, 326, 327, 328, 331, 332, 335, 337, 344, 346, 352, 353, 355, 357, 358, 360, 365, 372, 374, 376, 382, 384, 387, 389, 405, 412], "all": [3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 26, 27, 29, 30, 31, 32, 33, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 53, 55, 57, 59, 62, 67, 68, 70, 71, 74, 75, 77, 78, 79, 80, 101, 194, 282, 283, 313, 314, 386, 408, 433, 435, 437], "entri": [3, 15, 18, 26, 29, 45, 75], "one": [3, 6, 7, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 26, 30, 39, 41, 42, 44, 45, 47, 52, 62, 68, 73, 75, 77, 272], "more": [3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 26, 29, 30, 32, 33, 39, 41, 42, 43, 44, 46, 50, 52, 57, 59, 61, 62, 63, 68, 75, 76, 79, 80, 425, 427, 435, 437, 439], "arrai": [3, 6, 9, 10, 15, 17, 19, 26, 41, 43], "argument": [3, 5, 6, 7, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 26, 29, 41, 42, 43, 44, 46, 47, 55, 58, 60, 68, 74, 75, 83, 172, 173, 240, 272, 275, 324, 325, 433, 436, 438], "slice": [3, 6, 18, 19, 26, 43, 62, 75], "base": [3, 6, 9, 10, 12, 14, 15, 16, 18, 21, 29, 30, 31, 41, 42, 43, 44, 45, 46, 47, 57, 62, 65, 66, 68, 75, 80, 139, 425, 426, 435], "access": [3, 6, 8, 14, 15, 16, 17, 21, 26, 39, 41, 47, 61, 63, 64, 439], "just": [3, 6, 9, 10, 12, 13, 15, 16, 20, 26, 30, 41, 42, 43, 46, 47, 52, 57, 61, 68, 77, 435, 439], "few": [3, 12, 13, 16, 19, 26, 30, 46, 55, 71, 80, 433], "need": [3, 4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 26, 29, 30, 34, 38, 39, 41, 42, 43, 45, 47, 51, 52, 55, 56, 57, 62, 63, 64, 71, 72, 75, 77, 79, 80, 115, 116, 117, 118, 119, 120, 240, 272, 433, 434, 435, 440], "link": [3, 7, 9, 10, 29, 38, 42, 43, 45, 49], "against": [3, 12, 38, 71, 440], "ani": [3, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 26, 27, 33, 41, 42, 43, 44, 45, 47, 52, 59, 65, 67, 71, 72, 75, 172, 173, 437], "binari": [3, 12, 13, 26, 28, 30, 31, 32, 33, 34, 42, 43, 44, 46, 47, 50, 62, 75], "smaller": [3, 29, 41, 43, 46], "factor": 3, "least": [3, 12, 15, 30, 42, 44, 79, 272], "compar": [3, 6, 15, 18, 31, 41, 42, 43, 44, 46, 56, 67, 68, 156, 188, 197, 267, 289, 434], "equival": [3, 6, 15, 19, 26, 41, 42, 43, 46, 47, 67, 68, 80, 101, 302, 371, 401, 409], "recent": [3, 12, 15, 26], "pyrosetta": 3, "report": [3, 28, 41, 42, 43, 44, 46, 55, 56, 57, 58, 59, 60, 62, 71, 433, 434, 435, 436, 437, 438, 440], "size": [3, 6, 9, 10, 12, 18, 26, 31, 41, 42, 43, 44, 47, 50, 55, 62, 73, 74, 75, 80, 149, 153, 154, 406, 407, 408, 409, 417, 433, 440], "reduct": [3, 26, 30, 41, 62, 101, 227, 284], "4x": [3, 41], "8x": 3, "signatur": [3, 5, 7, 14, 15, 16, 18, 19, 21, 68], "precomput": 3, "constexpr": [3, 18, 41, 43, 44, 52, 68], "With": [3, 6, 12, 15, 16, 26, 43, 62, 425], "littl": 3, "effort": [3, 9, 42], "pickl": 3, "unpickl": [3, 12], "regular": [3, 6, 12, 15, 30, 43, 44, 72], "clang": [3, 16, 30, 41, 42, 43, 46, 49], "llvm": [3, 12, 42, 43, 77], "newer": [3, 10, 12, 43, 46], "appl": [3, 41, 42, 43, 46], "xcode": 3, "0": [3, 6, 10, 11, 12, 14, 15, 18, 19, 20, 26, 28, 29, 30, 31, 39, 41, 42, 43, 45, 46, 47, 50, 52, 55, 56, 57, 58, 59, 60, 61, 65, 68, 70, 72, 74, 75, 77, 79, 80, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 107, 109, 110, 116, 119, 132, 133, 143, 145, 146, 147, 153, 154, 156, 172, 173, 177, 179, 184, 185, 188, 197, 200, 201, 202, 204, 209, 210, 214, 216, 217, 218, 219, 227, 229, 230, 231, 234, 235, 236, 238, 252, 253, 254, 255, 256, 260, 262, 263, 264, 266, 267, 270, 274, 276, 279, 280, 284, 285, 288, 289, 293, 295, 301, 304, 305, 310, 313, 314, 317, 319, 331, 332, 334, 337, 340, 347, 348, 364, 365, 367, 368, 371, 376, 377, 379, 380, 381, 382, 395, 396, 398, 399, 400, 401, 406, 409, 410, 411, 414, 415, 416, 419, 420, 421, 422, 433, 434, 435, 436, 437, 438, 439, 440], "gcc": [3, 14, 16, 39, 41, 42, 43, 46], "4": [3, 6, 7, 12, 13, 15, 16, 18, 19, 26, 30, 31, 32, 41, 42, 43, 46, 47, 50, 55, 56, 57, 58, 59, 60, 61, 62, 74, 75, 77, 80, 87, 91, 93, 94, 95, 96, 97, 104, 106, 110, 111, 113, 114, 123, 124, 131, 132, 138, 142, 144, 146, 153, 160, 162, 164, 165, 166, 167, 169, 170, 174, 183, 200, 205, 210, 212, 230, 235, 236, 244, 246, 248, 251, 254, 255, 264, 270, 274, 279, 285, 287, 292, 309, 316, 329, 335, 338, 345, 347, 350, 354, 356, 359, 361, 363, 367, 370, 375, 377, 379, 381, 388, 392, 394, 413, 419, 420, 422, 433, 434, 435, 436, 437, 438, 439], "8": [3, 6, 9, 11, 12, 14, 15, 18, 26, 31, 32, 41, 42, 43, 44, 46, 47, 49, 55, 56, 57, 58, 59, 60, 61, 62, 74, 77, 79, 80, 139, 153, 433, 434, 435, 436, 437, 438, 439], "microsoft": [3, 29, 30, 42, 45], "visual": [3, 29, 30, 42, 58, 60, 61, 62, 67, 436, 438, 439], "studio": [3, 29, 30], "2017": [3, 29, 43, 59, 61, 74, 437, 439], "intel": [3, 26, 28, 29, 30, 31, 43], "classic": [3, 7], "18": [3, 26, 41, 43, 47, 55, 56, 57, 58, 59, 61, 433, 434, 435, 436, 437, 439], "icc": 3, "20": [3, 26, 30, 41, 42, 43, 44, 46, 47, 59, 61, 77, 79, 365, 366, 437, 439], "test": [3, 6, 7, 10, 12, 14, 15, 16, 18, 19, 21, 26, 38, 39, 41, 42, 43, 45, 49, 51, 52, 53, 57, 59, 65, 66, 68, 70, 71, 78, 79, 435, 437, 440], "ci": [3, 30, 41, 71], "cygwin": [3, 43], "previous": [3, 12, 14, 15, 18, 43, 51], "1": [3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 26, 29, 30, 31, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 55, 56, 57, 58, 59, 60, 61, 62, 65, 72, 74, 75, 77, 78, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 398, 405, 406, 407, 408, 409, 410, 411, 412, 413, 418, 419, 420, 421, 422, 433, 434, 435, 436, 437, 438, 439], "nvcc": [3, 30, 43], "cuda": [3, 26, 30, 43, 61, 439], "nvidia": [3, 30], "pgi": 3, "wenzel": 3, "jakob": 3, "signific": [3, 12, 18, 41, 42, 43, 47, 56, 434], "improv": [3, 12, 19, 29, 30, 41, 43, 44, 45, 71, 365], "were": [3, 14, 15, 16, 26, 29, 30, 42, 51], "jona": 3, "adler": 3, "lori": 3, "burn": 3, "sylvain": 3, "corlai": 3, "eric": 3, "cousineau": 3, "aaron": 3, "gokaslan": 3, "ralf": 3, "gross": 3, "kunstlev": 3, "trent": 3, "houliston": 3, "axel": 3, "huebl": 3, "hulucc": 3, "yannick": 3, "jadoul": 3, "sergei": 3, "lyskov": 3, "johan": 3, "mabil": 3, "tomasz": 3, "mi\u0105sko": 3, "dean": 3, "moldovan": 3, "ben": 3, "pritchard": 3, "jason": 3, "rhineland": 3, "bori": 3, "sch\u00e4ling": 3, "pim": 3, "schellart": 3, "henri": 3, "schreiner": 3, "ivan": [3, 41], "smirnov": 3, "stalet": 3, "patrick": 3, "stewart": 3, "we": [3, 9, 10, 12, 13, 16, 18, 26, 29, 30, 31, 33, 38, 39, 42, 52, 55, 56, 61, 64, 65, 66, 67, 71, 72, 75, 77, 78, 80, 272, 426, 429, 430, 433, 434, 439, 440], "googl": [3, 40, 42, 43, 58, 61, 436, 439], "financi": [3, 42], "continu": [3, 14, 41, 42, 43, 44, 71, 78], "integr": [3, 30, 32, 34, 41, 43, 44, 45, 70, 71, 72, 75], "infrastructur": [3, 43, 62, 67, 73], "see": [3, 6, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 26, 29, 30, 31, 34, 39, 42, 43, 44, 45, 47, 52, 55, 59, 61, 71, 75, 78, 433, 437, 439], "guid": [3, 15, 40, 41, 42, 43, 51, 76, 77], "bsd": 3, "style": [3, 18, 34, 40, 41, 42, 44], "found": [3, 12, 13, 14, 29, 39, 41, 42, 43, 59, 61, 65, 68, 70, 425, 437, 439], "By": [3, 16, 18, 21, 28, 29, 40, 42, 47, 56, 78, 365, 434], "distribut": [3, 27, 30, 33, 42, 43, 45, 46, 80, 139, 240, 272], "you": [3, 4, 6, 10, 12, 14, 15, 16, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 58, 61, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 76, 77, 79, 365, 425, 436, 439, 440, 441], "agre": [3, 12, 40], "term": [3, 12, 28, 41, 42, 43, 47, 78], "condit": [3, 27, 29, 30, 71], "when": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 26, 29, 30, 31, 38, 39, 41, 43, 44, 47, 51, 52, 55, 57, 58, 60, 64, 68, 71, 74, 75, 78, 80, 81, 83, 129, 139, 272, 282, 398, 405, 433, 435, 436, 438, 440], "includ": [4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 27, 28, 29, 30, 31, 33, 39, 41, 42, 43, 44, 45, 46, 47, 50, 52, 65, 68, 71], "h": [4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 26, 29, 31, 34, 41, 42, 43, 44, 45, 46, 47, 52, 68, 75, 80, 149, 172, 173, 417], "from": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 21, 22, 26, 27, 29, 30, 33, 34, 38, 41, 42, 43, 44, 45, 46, 47, 48, 52, 55, 57, 58, 59, 62, 64, 65, 66, 67, 68, 70, 71, 73, 74, 77, 79, 80, 102, 130, 154, 225, 226, 302, 346, 347, 382, 416, 425, 426, 430, 433, 435, 436, 437], "datatyp": [4, 26, 53, 55, 56, 60, 72, 74, 75, 90, 91, 100, 102, 129, 146, 154, 155, 156, 185, 186, 187, 188, 194, 197, 229, 231, 240, 252, 253, 256, 260, 267, 272, 285, 288, 289, 298, 299, 376, 379, 382, 395, 396, 398, 399, 423, 424, 433, 434, 438], "datetim": 4, "enabl": [4, 6, 7, 8, 10, 12, 15, 16, 21, 26, 29, 30, 31, 34, 39, 41, 42, 43, 44, 46, 47, 52, 55, 58, 59, 60, 61, 62, 65, 75, 77, 78, 425, 427, 428, 433, 436, 437, 438, 439], "also": [4, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 26, 28, 29, 30, 34, 39, 42, 43, 44, 46, 47, 61, 65, 68, 71, 72, 74, 75, 76, 77, 79, 129, 439], "float": [4, 6, 9, 12, 15, 18, 19, 26, 30, 41, 42, 43, 44, 46, 47, 72, 74, 75, 90, 91, 93, 94, 95, 96, 97, 114, 124, 125, 126, 127, 128, 145, 146, 148, 151, 152, 156, 157, 173, 178, 179, 186, 187, 188, 189, 196, 197, 198, 200, 201, 202, 204, 206, 207, 208, 228, 229, 231, 232, 233, 234, 236, 252, 253, 256, 260, 264, 266, 267, 268, 270, 273, 277, 278, 285, 288, 289, 290, 302, 308, 309, 310, 311, 317, 318, 331, 332, 333, 334, 339, 340, 342, 343, 346, 347, 349, 365, 366, 367, 368, 376, 378, 379, 381, 382, 383, 393, 394, 396, 410, 411, 418, 419], "often": [4, 11, 12, 14, 18, 19, 20, 26], "monoton": 4, "perf_count": 4, "process_tim": 4, "durat": [4, 9, 12, 18, 41, 43, 44, 47, 57, 59, 79, 435, 437, 440], "point": [4, 9, 11, 12, 15, 16, 26, 41, 42, 43, 44, 46, 47, 53, 72, 75, 79, 365], "confus": [4, 12, 16], "differ": [4, 6, 8, 13, 14, 15, 18, 20, 26, 41, 43, 44, 47, 52, 55, 74, 80, 272, 376, 433, 440], "There": [4, 7, 8, 9, 12, 13, 14, 16, 18, 21, 26, 29, 41, 42, 44, 45, 49, 68, 70, 74, 75, 80], "three": [4, 8, 15, 16, 20, 26, 30, 41, 42, 45, 46, 47], "defin": [4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 26, 29, 30, 34, 41, 42, 43, 44, 47, 52, 68, 74, 75, 78, 80, 102], "own": [4, 6, 12, 15, 16, 26, 29, 42, 43, 44, 45, 46, 47, 62, 74, 77, 80, 425, 431], "each": [4, 7, 9, 10, 11, 12, 14, 15, 16, 18, 19, 21, 26, 30, 31, 42, 47, 52, 64, 65, 67, 74, 75, 77, 79, 80, 173, 194, 302, 335, 337], "have": [4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 26, 28, 29, 31, 39, 40, 41, 42, 43, 44, 47, 51, 52, 55, 61, 64, 65, 66, 68, 71, 74, 75, 77, 79, 80, 101, 139, 317, 395, 396, 401, 414, 416, 425, 433, 439], "properti": [4, 10, 15, 28, 29, 77, 80], "convert": [4, 5, 6, 9, 10, 11, 12, 14, 18, 19, 26, 29, 34, 39, 41, 42, 43, 44, 47, 56, 62, 67, 68, 72, 73, 102, 129, 185, 282, 283, 399, 400, 425, 428, 431, 434], "give": [4, 9, 15, 18, 21, 41, 42, 43, 44, 46, 66, 79], "first": [4, 5, 6, 11, 12, 14, 15, 16, 18, 20, 21, 26, 30, 42, 45, 47, 56, 62, 65, 70, 72, 74, 75, 77, 79, 190, 195, 240, 272, 295, 302, 326, 384, 425, 428, 434, 440], "system_clock": [4, 41, 42, 43], "measur": [4, 51, 71], "current": [4, 12, 13, 14, 16, 19, 20, 26, 31, 39, 41, 42, 43, 44, 45, 47, 51, 52, 55, 75, 77, 80, 139, 227, 272, 282, 283, 284, 406, 407, 425, 433, 440], "date": [4, 9, 29, 30, 41, 42, 43, 44, 45, 46, 47, 61, 439], "howev": [4, 6, 10, 12, 13, 15, 16, 19, 26, 38, 42, 52, 55, 68, 75, 77, 433], "chang": [4, 6, 10, 12, 13, 14, 15, 16, 18, 26, 28, 29, 31, 34, 38, 40, 41, 43, 51, 55, 59, 62, 75, 129, 395, 396, 414, 416, 433, 437], "updat": [4, 13, 26, 41, 43, 45, 51, 71, 77, 78, 226, 440], "system": [4, 14, 20, 28, 29, 30, 41, 42, 43, 44, 45, 46, 77, 79], "For": [4, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 26, 28, 31, 33, 34, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 68, 70, 71, 74, 77, 78, 79, 80, 102, 236, 272, 409], "your": [4, 6, 10, 11, 12, 16, 19, 20, 21, 26, 27, 29, 30, 34, 38, 40, 42, 43, 44, 45, 46, 48, 51, 52, 67, 71, 72, 75, 77, 79, 425], "synchronis": 4, "server": [4, 42, 52, 59, 437], "make": [4, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 29, 30, 31, 33, 38, 39, 41, 42, 43, 44, 45, 46, 48, 51, 52, 59, 68, 70, 80, 282, 283, 365, 401, 409, 437, 440], "poor": 4, "choic": [4, 20, 45, 55, 77, 433], "purpos": [4, 12, 20, 27, 29, 33, 71, 78, 80, 272], "good": [4, 12, 15, 42, 71], "wall": [4, 42], "second": [4, 5, 6, 12, 13, 14, 15, 18, 21, 26, 30, 41, 42, 43, 47, 57, 59, 65, 74, 75, 77, 79, 190, 195, 240, 272, 302, 326, 384, 435, 437, 440], "steady_clock": 4, "tick": 4, "steadi": 4, "rate": 4, "never": [4, 6, 10, 11, 14, 16, 21], "adjust": [4, 21, 365], "doe": [4, 6, 10, 11, 12, 13, 14, 15, 16, 18, 20, 26, 29, 30, 43, 44, 47, 71, 75, 79, 129], "correspond": [4, 10, 11, 12, 14, 16, 20, 26, 74, 75, 153, 154, 407], "amount": 4, "been": [4, 10, 12, 13, 15, 16, 18, 26, 41, 43, 44, 45, 49, 52, 61, 71, 282, 283, 439], "although": [4, 5, 16, 18, 42, 47], "same": [4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 26, 29, 32, 39, 41, 43, 44, 47, 55, 57, 68, 75, 79, 80, 90, 129, 156, 157, 172, 188, 189, 197, 198, 213, 229, 231, 232, 252, 253, 256, 257, 260, 261, 267, 268, 272, 282, 283, 288, 289, 290, 295, 376, 382, 398, 401, 406, 433, 435], "cannot": [4, 5, 6, 11, 12, 13, 14, 15, 18, 21, 26, 43, 47], "third": [4, 5, 6, 11, 13, 14, 21, 24, 26, 29, 32, 75], "high_resolution_clock": 4, "highest": [4, 77], "resolut": [4, 10, 32], "out": [4, 5, 6, 9, 10, 12, 14, 16, 21, 27, 29, 30, 33, 41, 42, 43, 44, 45, 46, 49, 52, 55, 57, 60, 64, 68, 75, 77, 332, 400, 401, 433, 435, 438], "normal": [4, 11, 12, 18, 26, 44, 47, 59, 61, 62, 75, 213, 437, 439], "typedef": [4, 18], "either": [4, 6, 10, 12, 13, 14, 16, 18, 19, 20, 22, 26, 33, 42, 47, 50, 71, 75, 77, 80, 129, 139, 272, 398, 425], "independ": [4, 13, 21, 26, 41, 42, 43, 44, 45, 46], "import": [4, 5, 7, 10, 12, 14, 15, 16, 19, 20, 21, 26, 29, 41, 45, 55, 56, 57, 58, 59, 60, 61, 68, 70, 71, 72, 77, 79, 433, 434, 435, 436, 437, 438, 439, 440], "get": [4, 6, 9, 11, 12, 14, 15, 16, 18, 21, 26, 29, 30, 34, 39, 41, 43, 45, 47, 48, 52, 55, 56, 57, 58, 59, 62, 70, 72, 74, 77, 81, 404, 425, 430, 433, 434, 435, 436, 437], "might": [4, 12, 15, 16, 21, 42, 56, 71, 75, 434], "If": [4, 6, 10, 11, 12, 14, 15, 16, 18, 19, 21, 26, 29, 30, 38, 42, 43, 45, 47, 50, 51, 52, 58, 63, 64, 68, 74, 75, 76, 77, 78, 79, 101, 139, 240, 272, 282, 283, 300, 302, 313, 364, 386, 400, 401, 407, 408, 409, 436, 440], "timedelta": 4, "time_point": [4, 9, 41, 43, 44], "local": [4, 5, 10, 13, 39, 41, 42, 43, 44, 46, 47, 49, 52, 70, 71, 80, 415], "timezon": 4, "do": [4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 26, 27, 29, 30, 42, 43, 44, 47, 48, 57, 65, 71, 72, 77, 435], "attach": [4, 59, 68, 282, 283, 437], "them": [4, 5, 7, 9, 10, 11, 13, 14, 15, 19, 20, 21, 26, 43, 44, 46, 55, 66, 75, 77, 79, 409, 433], "naiv": 4, "precis": [4, 12, 18, 41, 43, 47, 75], "greater": [4, 26, 75, 143, 188, 189, 197, 198, 238, 287, 440], "than": [4, 10, 11, 12, 15, 16, 18, 19, 26, 29, 30, 34, 41, 42, 43, 46, 47, 57, 75, 77, 79, 143, 188, 189, 197, 198, 231, 232, 238, 267, 268, 287, 435, 440], "microsecond": [4, 41, 47], "lost": [4, 11, 21], "round": [4, 31, 41, 42, 43, 47, 62, 69, 317, 318, 341], "toward": 4, "zero": [4, 6, 14, 15, 18, 21, 26, 41, 42, 43, 47, 58, 62, 69, 74, 75, 131, 145, 174, 295, 304, 364, 396, 436, 440], "other_clock": 4, "delta": 4, "epoch": [4, 41], "timepoint": [4, 41], "ignor": [4, 5, 11, 12, 14, 15, 26, 29, 34, 41, 47, 68, 314], "treat": [4, 12, 15, 47, 272], "start": [4, 11, 12, 15, 28, 29, 30, 39, 41, 44, 45, 47, 50, 57, 59, 62, 68, 70, 74, 75, 77, 79, 100, 302, 435, 437], "pass": [4, 9, 10, 12, 14, 15, 16, 18, 19, 20, 21, 26, 29, 41, 43, 44, 52, 55, 58, 59, 62, 68, 70, 72, 75, 78, 173, 324, 325, 405, 409, 425, 430, 433, 436, 437], "interpret": [4, 6, 12, 14, 15, 20, 47], "number": [4, 6, 7, 9, 12, 13, 15, 16, 18, 19, 26, 30, 41, 42, 43, 44, 46, 47, 52, 57, 61, 74, 75, 78, 79, 80, 90, 91, 92, 94, 96, 109, 145, 146, 147, 156, 157, 177, 178, 188, 189, 197, 198, 209, 219, 229, 231, 232, 235, 252, 253, 256, 260, 262, 263, 267, 268, 270, 276, 280, 285, 288, 289, 290, 293, 295, 301, 302, 333, 335, 337, 348, 371, 376, 379, 380, 382, 401, 402, 403, 415, 421, 435, 439], "These": [4, 9, 10, 12, 13, 15, 19, 26, 29, 30, 43, 47, 53, 71, 72, 75, 77, 425, 440], "duration_cast": 4, "veri": [5, 7, 9, 10, 15, 16, 18, 26, 29, 30, 41, 42, 43, 55, 57, 67, 79, 365, 433, 435], "rare": [5, 12, 16, 43], "case": [5, 6, 7, 8, 9, 10, 12, 15, 16, 18, 19, 20, 21, 22, 26, 41, 43, 44, 47, 55, 68, 70, 71, 75, 80, 129, 272, 398, 433, 440], "applic": [5, 13, 15, 16, 29, 30, 31, 32, 42], "mai": [5, 6, 9, 11, 12, 13, 14, 15, 16, 19, 20, 26, 27, 28, 29, 34, 41, 42, 44, 47, 52, 68, 70, 75, 77, 440], "express": [5, 11, 13, 14, 17, 18, 26, 27, 30, 33, 43], "abstract": [5, 42, 80], "thu": [5, 10, 15, 16, 18, 21], "raw": [5, 12, 13, 16, 18, 20, 21, 26, 29, 42, 43, 61, 77, 439], "call": [5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 20, 26, 29, 42, 43, 44, 46, 52, 55, 57, 59, 68, 72, 74, 75, 78, 79, 80, 324, 325, 433, 435, 437, 440], "fairli": [5, 10], "advanc": [5, 9, 12, 13, 14, 15, 18, 42], "usag": [5, 6, 7, 10, 13, 15, 26, 32, 34, 41, 42, 43, 45, 50, 71, 77], "should": [5, 6, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 26, 29, 38, 40, 43, 44, 45, 47, 49, 52, 55, 56, 57, 58, 60, 68, 71, 74, 76, 78, 79, 213, 295, 302, 398, 433, 434, 435, 436, 438], "pursu": 5, "expert": 5, "who": [5, 29, 30, 80], "familiar": [5, 12, 15, 67, 77], "intricaci": 5, "snippet": [5, 12, 16, 18, 21, 26, 52, 440], "demonstr": [5, 7, 10, 12, 14, 15, 18, 19, 21, 71, 79], "how": [5, 6, 7, 10, 11, 12, 14, 15, 16, 18, 20, 21, 26, 28, 29, 42, 47, 56, 57, 66, 68, 71, 74, 75, 79, 80, 434, 435, 440], "simpl": [5, 7, 12, 14, 15, 16, 18, 19, 26, 29, 30, 41, 42, 47, 59, 61, 62, 77, 437, 439], "inti": 5, "__int__": 5, "struct": [5, 10, 12, 16, 18, 21, 26, 41, 43, 44, 68, 75], "long": [5, 6, 7, 12, 13, 15, 16, 26, 41, 43, 44, 78], "long_valu": 5, "void": [5, 6, 9, 10, 12, 14, 15, 16, 18, 21, 30, 41, 43, 44, 52, 68, 75], "print": [5, 10, 12, 13, 14, 17, 19, 21, 26, 41, 42, 43, 44, 46, 47, 52, 55, 56, 57, 59, 61, 72, 74, 75, 79, 80, 102, 131, 185, 240, 272, 304, 335, 337, 364, 398, 400, 433, 434, 435, 437, 439, 440], "cout": [5, 9, 11, 13, 15, 20, 26, 30, 42, 43], "endl": [5, 15, 26], "intend": [5, 33, 78], "side": [5, 8, 9, 10, 12, 13, 15, 16, 18, 21, 26, 51, 55, 56, 57, 58, 59, 60, 75, 79, 433, 434, 435, 436, 437, 438], "def": [5, 6, 7, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 39, 57, 58, 59, 60, 61, 68, 70, 435, 436, 437, 438, 439, 440], "123": [5, 15, 26], "To": [5, 6, 9, 10, 12, 14, 15, 16, 18, 19, 20, 26, 28, 29, 30, 31, 38, 39, 41, 42, 43, 44, 45, 48, 52, 55, 56, 65, 72, 75, 78, 433, 434, 440], "regist": [5, 12, 15, 16, 18, 62, 68, 324, 325], "routin": [5, 12, 16], "add": [5, 7, 9, 10, 12, 13, 16, 18, 20, 21, 26, 29, 34, 38, 42, 43, 45, 47, 48, 57, 59, 60, 62, 69, 71, 75, 78, 91, 92, 109, 146, 156, 188, 197, 209, 219, 229, 231, 252, 253, 256, 260, 262, 263, 267, 276, 280, 285, 288, 289, 293, 301, 302, 348, 376, 379, 380, 382, 402, 403, 421, 425, 435, 437, 438, 440], "instanti": [5, 7, 10, 12, 15, 17, 41, 43], "detail": [5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 21, 26, 29, 30, 39, 41, 42, 43, 44, 47, 61, 63, 68, 76, 439, 440], "type_cast": [5, 10], "ad": [5, 6, 12, 15, 18, 26, 29, 41, 43, 46, 51, 52, 55, 62, 74, 75, 78, 240, 433], "explicitli": [5, 6, 12, 14, 15, 16, 19, 26, 41, 43, 55, 433], "allow": [5, 6, 12, 14, 16, 19, 20, 21, 26, 29, 34, 39, 41, 43, 44, 47, 50, 71, 74, 75, 78], "namespac": [5, 6, 10, 12, 13, 18, 19, 21, 26, 41, 43, 44, 61, 68, 439], "pybind11_namespac": [5, 10, 12, 21], "public": [5, 6, 16, 18, 21, 33, 38, 41, 42, 43], "macro": [5, 10, 12, 13, 18, 21, 41, 42, 43, 44, 52], "establish": 5, "name": [5, 7, 10, 12, 13, 14, 15, 16, 18, 20, 21, 28, 29, 30, 40, 41, 42, 43, 44, 45, 47, 48, 51, 59, 60, 61, 65, 68, 70, 74, 75, 78, 79, 102, 282, 283, 406, 437, 438, 439, 440], "declar": [5, 10, 11, 12, 14, 15, 16, 18, 21, 26, 43, 75], "pybind11_type_cast": 5, "const_nam": 5, "part": [5, 12, 26, 42, 43, 44, 52, 57, 66, 71, 75, 79, 435], "pyobject": [5, 12, 19], "fals": [5, 6, 10, 11, 12, 14, 15, 18, 21, 26, 41, 43, 47, 55, 56, 57, 58, 59, 60, 61, 68, 70, 75, 139, 145, 159, 161, 165, 191, 240, 272, 313, 314, 344, 395, 396, 402, 403, 408, 415, 416, 433, 434, 435, 436, 437, 438, 439, 440], "upon": [5, 7, 46, 71], "failur": [5, 12, 14, 26, 43], "indic": [5, 6, 12, 14, 15, 16, 18, 26, 47, 74, 75, 101, 153, 154, 295, 416], "whether": [5, 10, 11, 12, 15, 16, 26, 27, 33, 41, 43, 47, 75, 102, 282, 283, 395, 396, 401, 409, 414, 416], "implicit": [5, 10, 11, 15, 17, 41, 43, 75], "bool": [5, 9, 10, 12, 18, 19, 26, 41, 43, 44, 47, 68, 75, 91, 93, 139, 140, 146, 159, 161, 165, 184, 191, 273, 277, 278, 282, 283, 285, 313, 314, 344, 347, 378, 379, 381, 383, 395, 396, 401, 402, 403, 408, 414, 415, 416, 418], "load": [5, 10, 12, 13, 14, 34, 39, 58, 59, 61, 436, 437, 439], "handl": [5, 12, 13, 15, 16, 17, 30, 41, 42, 43, 55, 72, 433], "src": [5, 12, 30, 41, 42, 43, 45, 46], "extract": [5, 7, 10, 18, 26, 47, 154], "ptr": [5, 12, 18, 41, 43, 44, 74], "try": [5, 10, 12, 14, 16, 18, 19, 26, 29, 30, 39, 41, 42, 43, 55, 59, 71, 77, 433, 437], "integ": [5, 6, 9, 11, 12, 15, 18, 26, 41, 42, 43, 47, 75, 116, 119, 302, 310, 407, 408], "tmp": [5, 19, 26, 55, 56, 57, 58, 60, 61, 282, 433, 434, 435, 436, 438, 439], "pynumber_long": 5, "int": [5, 7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 26, 30, 41, 42, 43, 44, 47, 60, 61, 68, 74, 75, 90, 91, 100, 101, 132, 139, 146, 153, 154, 155, 156, 172, 173, 184, 186, 187, 188, 196, 197, 216, 225, 226, 229, 231, 252, 253, 256, 260, 267, 271, 273, 277, 278, 285, 288, 289, 295, 300, 302, 304, 307, 310, 313, 337, 338, 364, 371, 376, 378, 379, 382, 383, 386, 395, 396, 400, 401, 402, 403, 405, 409, 414, 415, 416, 418, 438, 439], "pylong_aslong": 5, "py_decref": 5, "ensur": [5, 6, 11, 12, 15, 16, 18, 20, 26, 65, 66, 71, 77], "ok": [5, 12, 16, 26], "avoid": [5, 6, 9, 10, 12, 18, 26, 29, 43, 44, 79, 282, 365], "error": [5, 12, 13, 15, 26, 41, 42, 43, 44, 46, 71, 102, 227, 284, 400], "etc": [5, 7, 9, 10, 14, 15, 26, 29, 32, 62, 68, 74, 77], "pyerr_occur": 5, "polici": [5, 6, 14, 16, 42], "parent": [5, 12, 15, 16, 21, 30, 43, 59, 437], "return_value_polici": [5, 6, 15], "reference_intern": [5, 6, 15], "cast": [5, 11, 12, 13, 15, 17, 18, 20, 26], "pylong_fromlong": 5, "default": [5, 6, 12, 14, 16, 18, 20, 21, 26, 29, 34, 41, 42, 43, 44, 46, 47, 56, 72, 74, 75, 79, 81, 83, 93, 94, 96, 114, 124, 125, 127, 132, 139, 152, 153, 154, 192, 200, 201, 202, 204, 206, 207, 216, 227, 234, 240, 264, 266, 272, 282, 283, 284, 313, 314, 317, 318, 340, 349, 364, 366, 367, 368, 371, 381, 402, 403, 408, 410, 411, 434, 440], "construct": [5, 9, 10, 11, 12, 15, 18, 26, 30, 41, 43, 44, 74, 415, 440], "consist": [5, 10, 14, 15, 16, 18, 20, 21, 41, 42, 43, 44, 46], "compil": [5, 6, 10, 11, 12, 13, 15, 16, 18, 26, 27, 29, 30, 31, 32, 33, 39, 41, 42, 43, 44, 45, 46, 52, 56, 59, 65, 75, 434, 437, 440], "unit": [5, 10, 41, 42, 43, 47, 52, 71, 75], "otherwis": [5, 12, 15, 26, 27, 30, 33, 44, 47, 57, 74, 386, 401, 435, 440], "undefin": [5, 12, 15, 16, 18, 21, 43, 75], "behavior": [5, 10, 12, 14, 15, 16, 18, 21, 41, 43, 44, 47, 75, 272], "ensu": [5, 15], "dens": [6, 9, 18, 70], "spars": [6, 9], "linear": [6, 12, 25, 31, 34, 53, 55, 56, 57, 58, 62, 69, 70, 73, 75, 365, 433, 434, 435, 436], "algebra": [6, 25], "due": [6, 12, 13, 15, 41, 43, 55, 79, 80, 433], "popular": [6, 34, 78], "widespread": 6, "adopt": 6, "limit": [6, 10, 12, 16, 18, 26, 27, 33, 41, 42, 43, 52, 71, 75], "support": [6, 9, 10, 11, 14, 15, 18, 19, 20, 21, 26, 28, 29, 30, 32, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 60, 62, 63, 67, 72, 74, 75, 77, 80, 87, 90, 91, 93, 94, 95, 96, 97, 101, 104, 106, 107, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 132, 137, 138, 139, 142, 143, 144, 146, 156, 160, 162, 164, 165, 166, 167, 169, 170, 174, 178, 179, 183, 188, 190, 195, 197, 200, 205, 210, 212, 227, 229, 230, 231, 235, 236, 238, 244, 245, 246, 248, 251, 252, 253, 254, 255, 256, 258, 260, 264, 267, 270, 274, 279, 281, 284, 285, 286, 288, 289, 292, 307, 316, 317, 326, 329, 333, 334, 340, 345, 347, 350, 354, 356, 359, 361, 362, 363, 367, 370, 375, 376, 377, 379, 381, 382, 384, 388, 392, 394, 406, 407, 412, 413, 419, 420, 422, 433, 438], "scientif": [6, 30, 47], "built": [6, 11, 12, 15, 16, 26, 29, 30, 38, 41, 43, 44, 45, 47, 59, 61, 66, 77, 437, 439], "must": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 26, 40, 43, 47, 52, 53, 72, 74, 75, 77, 80, 101, 272, 287, 317, 324, 325, 395, 396, 401, 406, 414, 416, 441], "option": [6, 8, 9, 10, 12, 13, 15, 16, 18, 20, 21, 26, 27, 29, 31, 41, 42, 43, 44, 45, 46, 47, 51, 61, 62, 73, 74, 77, 79, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 107, 108, 109, 110, 112, 115, 116, 117, 118, 119, 120, 121, 122, 127, 131, 132, 133, 134, 135, 136, 137, 141, 143, 145, 146, 147, 151, 153, 154, 156, 158, 159, 161, 163, 165, 166, 168, 169, 171, 175, 176, 177, 178, 179, 182, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 199, 203, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 242, 243, 245, 247, 249, 250, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 265, 267, 269, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 304, 305, 306, 309, 310, 311, 313, 315, 317, 319, 320, 322, 326, 327, 328, 330, 331, 332, 333, 334, 339, 341, 344, 345, 346, 347, 348, 352, 353, 355, 357, 358, 359, 360, 362, 364, 365, 369, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 389, 390, 391, 397, 398, 399, 401, 402, 403, 405, 412, 415, 418, 419, 420, 421, 422, 423, 424, 439, 440], "ordinari": [6, 44], "matrixxd": [6, 18], "input": [6, 11, 12, 14, 18, 26, 30, 41, 47, 53, 56, 57, 60, 61, 62, 68, 71, 72, 73, 74, 79, 81, 83, 84, 85, 86, 87, 89, 101, 103, 104, 106, 108, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 127, 135, 136, 138, 142, 144, 145, 148, 149, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 180, 183, 190, 191, 192, 193, 194, 195, 199, 201, 203, 205, 207, 208, 211, 212, 213, 216, 220, 221, 222, 223, 224, 225, 226, 227, 233, 234, 236, 237, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 258, 265, 266, 269, 272, 275, 284, 287, 291, 294, 295, 302, 304, 308, 310, 313, 314, 316, 317, 318, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 335, 336, 341, 343, 344, 345, 346, 350, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 368, 370, 371, 372, 374, 375, 384, 387, 388, 389, 392, 394, 395, 396, 401, 402, 403, 404, 405, 409, 412, 413, 414, 415, 416, 417, 434, 435, 438, 439, 440], "alreadi": [6, 10, 12, 13, 14, 15, 18, 21, 41, 45, 59, 61, 72, 282, 283, 300, 425, 437, 439], "ndarrai": 6, "dimens": [6, 18, 26, 72, 74, 75, 80, 101, 129, 131, 132, 190, 194, 195, 272, 304, 313, 314, 326, 337, 364, 384, 398, 400, 401, 404, 406, 407, 408, 409], "temporari": [6, 26, 41, 43], "appropri": [6, 12, 14, 44, 45, 47, 71], "similarli": [6, 10, 14, 16, 26], "scipi": [6, 19, 59, 437], "csr_matrix": 6, "csc_matrix": 6, "One": [6, 9, 11, 13, 14, 15, 16, 19, 21, 26], "major": [6, 10, 15, 18, 19, 26, 29, 32, 41, 43, 46, 53, 55, 56, 74, 80, 173, 295, 415, 433, 434], "abov": [6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 26, 27, 34, 39, 41, 42, 47, 48, 52, 77], "implicitli": [6, 11, 16, 43, 44, 47, 272], "involv": [6, 7, 10, 12, 15, 16, 18, 30, 41], "which": [6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 29, 34, 41, 42, 43, 44, 46, 47, 49, 51, 52, 66, 67, 70, 74, 75, 79, 80, 139, 240, 272, 282, 283, 317, 346, 364, 406, 407, 408], "both": [6, 9, 12, 14, 15, 16, 18, 19, 20, 21, 26, 30, 41, 42, 43, 44, 47, 55, 60, 64, 70, 71, 74, 75, 79, 80, 258, 272, 433, 438], "disallow": [6, 41, 43, 44], "around": [6, 12, 14, 15, 16, 20, 26, 39, 41, 43, 52, 79], "ref": [6, 26, 43], "matrixtyp": 6, "much": [6, 10, 18, 26, 32, 34, 41, 42, 46, 56, 75, 79, 434], "would": [6, 10, 12, 14, 16, 20, 21, 26, 43, 52, 63, 77, 78, 79, 80, 213], "write": [6, 12, 16, 20, 26, 28, 29, 30, 39, 41, 42, 43, 44, 50, 52, 59, 62, 63, 65, 66, 68, 70, 80, 139, 240, 272, 425, 428, 437], "take": [6, 7, 11, 12, 13, 14, 15, 16, 18, 21, 26, 28, 41, 42, 43, 44, 55, 67, 68, 71, 74, 75, 76, 80, 324, 325, 404, 433], "itself": [6, 12, 13, 26, 46, 74], "subject": [6, 27], "discuss": [6, 8, 12, 15, 20, 64, 71], "below": [6, 7, 9, 12, 13, 14, 18, 26, 29, 52, 68, 71, 75, 79, 80, 425], "bound": [6, 10, 12, 14, 15, 18, 19], "const": [6, 7, 9, 10, 11, 12, 14, 15, 16, 18, 21, 26, 41, 43, 44, 52, 68, 75], "attempt": [6, 10, 12, 15, 18, 19, 26, 59, 65, 75, 437], "dtype": [6, 18, 19, 55, 56, 57, 58, 60, 68, 70, 74, 75, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 410, 411, 412, 413, 419, 420, 421, 422, 423, 424, 433, 434, 435, 436, 438, 440], "float64": [6, 18], "scalar": [6, 12, 18, 26, 72, 75, 91, 107, 115, 117, 118, 120, 145, 147, 148, 177, 179, 235, 236, 270, 273, 277, 278, 308, 317, 318, 334, 343, 378, 379, 383, 418, 419, 440], "doubl": [6, 9, 10, 12, 15, 18, 26, 41, 42, 43, 44, 47], "layout": [6, 8, 15, 18, 26, 43, 53, 57, 60, 62, 68, 70, 72, 74, 75, 79, 87, 90, 91, 93, 94, 95, 96, 97, 101, 102, 104, 106, 107, 110, 111, 113, 114, 123, 124, 129, 132, 138, 142, 144, 146, 153, 154, 155, 156, 157, 160, 162, 164, 165, 166, 167, 169, 170, 174, 179, 180, 181, 183, 185, 186, 187, 188, 189, 197, 198, 200, 205, 210, 212, 229, 230, 231, 232, 235, 236, 244, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 264, 267, 268, 270, 274, 279, 285, 288, 289, 290, 292, 295, 298, 299, 316, 329, 334, 337, 345, 347, 350, 354, 356, 359, 361, 363, 367, 370, 375, 376, 377, 379, 381, 382, 388, 392, 394, 395, 396, 398, 401, 413, 414, 416, 419, 420, 422, 423, 424, 425, 427, 431, 435, 438, 440], "latter": [6, 18, 41, 43, 44], "section": [6, 8, 9, 10, 12, 13, 14, 15, 16, 18, 29, 34, 39, 42, 43, 45, 47, 63, 64, 71, 75, 80], "care": [6, 13, 15, 16, 18, 51], "consider": 6, "becaus": [6, 11, 12, 13, 15, 16, 19, 26, 41, 42, 43, 46, 55, 56, 57, 68, 80, 433, 434, 435], "paramet": [6, 7, 10, 14, 16, 18, 19, 20, 21, 26, 29, 30, 41, 43, 44, 58, 62, 67, 70, 75, 151, 208, 233, 282, 283, 425, 428, 430, 436], "incompat": [6, 12, 15, 18, 43], "instead": [6, 10, 12, 13, 14, 15, 16, 18, 19, 21, 26, 29, 34, 40, 41, 43, 44, 47, 55, 57, 61, 75, 102, 213, 332, 433, 435, 439], "note": [6, 10, 11, 12, 13, 14, 15, 18, 21, 26, 28, 30, 34, 41, 43, 44, 47, 51, 55, 57, 61, 68, 72, 74, 75, 77, 79, 80, 91, 93, 94, 96, 97, 110, 114, 129, 132, 146, 210, 230, 235, 236, 254, 255, 270, 272, 274, 279, 285, 347, 377, 379, 381, 419, 422, 433, 435, 439, 440], "lack": 6, "writeabl": [6, 18], "flag": [6, 12, 16, 18, 26, 29, 34, 38, 41, 43, 59, 75, 102, 437], "true": [6, 11, 12, 14, 15, 20, 21, 26, 29, 31, 41, 43, 45, 47, 55, 56, 57, 58, 59, 60, 61, 68, 70, 74, 75, 91, 93, 139, 140, 145, 154, 159, 161, 165, 184, 191, 273, 277, 278, 313, 314, 344, 347, 378, 379, 381, 383, 401, 408, 414, 416, 418, 433, 434, 435, 436, 437, 438, 439, 440], "modif": [6, 10, 13, 42], "made": [6, 8, 9, 12, 18, 19, 26, 34, 41, 43, 47, 51], "carri": [6, 332], "directli": [6, 12, 13, 14, 15, 18, 20, 26, 29, 30, 43, 52], "mean": [6, 10, 12, 14, 15, 21, 26, 33, 47, 52, 62, 69, 72, 75, 80, 227, 284], "expect": [6, 11, 18, 20, 26, 41, 53, 55, 71, 74, 75, 78, 173, 272, 408, 409, 433], "scale_by_2": 6, "vectorxd": 6, "v": [6, 9, 10, 12, 30, 32, 41, 42, 43, 47, 62, 102, 173, 406, 407, 408, 425, 431], "run": [6, 7, 12, 13, 14, 16, 18, 26, 29, 30, 31, 38, 39, 41, 42, 44, 45, 49, 51, 52, 55, 56, 59, 62, 67, 68, 71, 73, 75, 76, 77, 78, 79, 282, 324, 325, 425, 428, 430, 433, 434, 437], "won": [6, 8, 14, 15], "rowvectorxf": 6, "keep": [6, 7, 9, 10, 12, 13, 26, 41, 43, 68, 70, 80], "perform": [6, 7, 8, 10, 11, 12, 16, 18, 26, 28, 29, 30, 31, 41, 42, 43, 44, 46, 57, 62, 70, 71, 74, 75, 76, 78, 79, 85, 87, 88, 89, 91, 93, 95, 97, 98, 99, 104, 105, 106, 107, 110, 111, 112, 113, 114, 121, 123, 124, 125, 126, 127, 128, 132, 134, 136, 137, 138, 141, 142, 143, 144, 146, 148, 152, 157, 160, 162, 164, 167, 168, 170, 171, 174, 176, 178, 179, 182, 183, 189, 192, 194, 198, 200, 201, 202, 203, 204, 205, 206, 207, 210, 212, 213, 214, 215, 230, 232, 234, 236, 238, 239, 244, 245, 246, 248, 249, 251, 254, 255, 259, 264, 265, 266, 268, 274, 279, 281, 285, 286, 287, 290, 292, 296, 297, 302, 305, 306, 307, 308, 311, 313, 314, 315, 316, 317, 318, 319, 320, 323, 329, 330, 333, 334, 336, 340, 341, 342, 343, 345, 347, 349, 350, 354, 356, 359, 361, 362, 363, 366, 367, 368, 369, 370, 373, 375, 377, 379, 381, 385, 388, 390, 391, 392, 393, 394, 410, 411, 413, 420, 422, 425, 427, 435], "owndata": [6, 18], "set": [6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 26, 29, 31, 34, 39, 41, 42, 43, 44, 45, 47, 51, 55, 58, 59, 60, 61, 65, 66, 70, 72, 74, 75, 77, 79, 83, 172, 313, 404, 409, 425, 433, 436, 437, 438, 439, 440], "lifetim": [6, 12, 15, 16, 18, 43], "ti": [6, 12, 15, 74], "non": [6, 8, 18, 26, 30, 33, 41, 42, 43, 44, 47, 52, 145, 272, 295], "thing": [6, 9, 12, 13, 14, 15, 42], "happen": [6, 9, 10, 15, 26], "lvalu": [6, 15, 26, 43], "usual": [6, 9, 11, 12, 15, 18, 19, 20, 26, 41, 45, 46, 68], "rule": [6, 10, 11, 12, 16, 59, 437], "dictat": [6, 16], "full": [6, 26, 28, 34, 42, 43, 44, 47, 62, 67, 69, 71, 73, 75, 79, 440], "That": [6, 14, 15, 16, 56, 74, 80, 434], "explicit": [6, 15, 16, 19, 26, 43, 55, 433], "manag": [6, 12, 13, 14, 15, 18, 20, 21, 29, 42, 43, 45, 46, 71, 77, 271, 324, 325], "specifi": [6, 10, 12, 14, 15, 16, 18, 21, 26, 29, 31, 38, 39, 41, 42, 43, 44, 46, 47, 56, 57, 68, 70, 74, 75, 240, 282, 283, 302, 304, 313, 335, 396, 406, 407, 408, 434, 435], "myclass": [6, 10, 12, 15, 19], "big_mat": 6, "10000": 6, "getmatrix": 6, "viewmatrix": 6, "later": [6, 10, 15, 16, 26, 39, 41, 43, 44, 46], "py": [6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 31, 42, 50, 51, 58, 59, 65, 68, 70, 71, 77, 79, 436, 437, 440], "class_": [6, 9, 10, 12, 15, 16, 18, 19, 21], "m": [6, 7, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 31, 39, 41, 42, 43, 44, 47, 56, 75, 272, 434], "init": [6, 10, 12, 15, 16, 18, 21, 30, 39], "copy_matrix": 6, "get_matrix": 6, "view_matrix": 6, "element": [6, 9, 10, 15, 18, 19, 26, 30, 41, 43, 44, 47, 55, 75, 80, 84, 86, 101, 103, 108, 115, 116, 117, 118, 119, 120, 122, 135, 151, 158, 159, 161, 163, 165, 166, 169, 175, 190, 191, 193, 194, 195, 199, 208, 211, 220, 221, 222, 223, 224, 233, 237, 242, 243, 247, 250, 258, 269, 291, 294, 295, 302, 310, 317, 322, 326, 327, 328, 331, 332, 335, 337, 344, 346, 352, 353, 355, 357, 358, 360, 365, 372, 374, 384, 387, 389, 401, 412, 416, 433], "tie": 6, "life": 6, "block": [6, 12, 14, 21, 28, 29, 30, 31, 43, 53, 62, 75, 80, 139, 184, 272, 425], "relat": [6, 16, 25, 41, 42, 48, 75], "behaviour": [6, 12, 15, 272], "simpli": [6, 11, 14, 18, 19, 38, 55, 68, 74, 75, 129, 398, 433], "remain": [6, 26, 44, 80], "valid": [6, 11, 12, 18, 19, 26, 29, 41, 46, 47, 50, 59, 68, 70, 71, 74, 75, 79, 83, 172, 173, 272, 275, 282, 283, 437], "ask": [6, 42, 78], "keep_al": [6, 10, 15], "stai": [6, 30, 55, 433], "addition": [6, 7, 15, 29, 30, 52, 440], "respect": [6, 15, 18, 20, 31, 41, 43, 47, 80, 154, 272, 346], "readonli": 6, "statu": [6, 30, 59, 437], "mark": [6, 12, 14, 41, 43, 44, 70, 71], "read": [6, 10, 14, 18, 30, 39, 63, 75, 76, 80, 139, 415], "via": [6, 10, 12, 15, 16, 18, 19, 21, 28, 29, 41, 43, 44, 46, 47], "awar": [6, 12, 42, 47], "effect": [6, 10, 12, 16, 26, 41, 47, 55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "foremost": 6, "contigu": [6, 18, 41, 55, 75, 409, 433], "along": [6, 26, 49, 74, 75, 77, 80, 302, 313, 314, 364, 401, 404], "rowmajor": [6, 18, 26], "former": [6, 43], "abl": [6, 12, 14, 16, 68], "two": [6, 7, 9, 10, 11, 12, 13, 15, 16, 18, 20, 21, 26, 29, 30, 31, 43, 44, 45, 47, 65, 70, 74, 75, 80, 129, 190, 195, 272, 326, 384, 398, 409], "distinct": [6, 12], "meaningless": 6, "approach": [6, 8, 9, 10, 12, 13, 14, 16, 18, 48, 70, 78, 365, 440], "stride": [6, 18, 26, 55, 60, 75, 149, 275, 433, 438], "dynam": [6, 9, 12, 15, 18, 30, 41, 42, 43, 44, 46, 47], "fulli": [6, 12, 26, 29, 42, 44, 78, 79], "cumbersom": 6, "eigendref": 6, "alia": [6, 12, 16, 43], "conveni": [6, 9, 10, 12, 13, 15, 17, 18, 21, 26, 29], "eigendmap": 6, "eigendstrid": 6, "done": [6, 12, 18, 19, 20, 21, 26, 28, 39, 43, 55, 59, 68, 71, 74, 79, 433, 437], "known": [6, 16, 18, 26, 28, 34, 75], "outer": [6, 9, 62, 69], "inner": [6, 26], "benefit": [6, 33, 34, 78], "being": [6, 11, 12, 15, 26, 29, 42, 44, 47, 52, 53, 79, 80, 324, 325], "contriv": [6, 18], "multipli": [6, 12, 26, 31, 62, 69, 75, 240, 272, 285, 417, 425, 427, 440], "coeffici": [6, 26, 71], "even": [6, 10, 11, 12, 13, 15, 18, 26, 34, 41, 42, 43, 46, 47, 72, 75, 272], "scale": [6, 26, 30, 75, 202, 204, 349, 365, 406, 407, 408], "np": [6, 18, 19, 74], "myarrai": [6, 18], "intrus": [6, 21], "rearrang": 6, "underli": [6, 7, 9, 12, 15, 21, 26, 41, 43, 44, 74], "problem": [6, 8, 14, 21, 26, 31, 42, 49], "place": [6, 10, 12, 13, 15, 29, 41, 43, 44, 47, 74, 80, 157, 189, 198, 225, 226, 232, 268, 290, 403], "particular": [6, 8, 10, 21, 27, 33, 41, 43, 47, 52, 55, 70, 77, 314, 433, 440], "where": [6, 7, 10, 12, 13, 14, 15, 16, 18, 21, 26, 29, 30, 39, 41, 43, 44, 46, 47, 52, 61, 62, 64, 65, 66, 69, 71, 75, 77, 79, 80, 129, 139, 272, 295, 302, 398, 420, 439], "rowmatrixxd": 6, "callabl": [6, 12, 14, 282, 283], "altern": [6, 10, 12, 13, 14, 15, 16, 19, 20, 29, 42, 43, 44, 47, 440], "f": [6, 7, 12, 15, 18, 19, 41, 43, 44, 47, 55, 56, 57, 59, 61, 433, 434, 435, 437, 439, 440], "Such": [6, 15], "passabl": 6, "caveat": [6, 10, 12, 13], "entir": [6, 12, 14, 15, 18, 66, 194], "flip": 6, "alter": 6, "a2": 6, "transpos": [6, 26, 405, 409, 415], "view": [6, 9, 12, 15, 17, 26, 39, 43, 52, 440], "opposit": [6, 9, 26], "while": [6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 26, 41, 44, 45, 46, 75, 78], "optim": [6, 18, 26, 30, 41, 42, 43, 46, 55, 62, 425, 428, 433], "calcul": [6, 19, 26, 44, 65, 79, 139, 317, 346], "unlik": [6, 13, 44, 440], "special": [6, 10, 12, 14, 16, 18, 21, 26, 29, 41, 43, 44, 47, 52, 71, 75, 80], "properli": [6, 12, 13, 16, 26, 55, 433], "whatev": [6, 12], "conform": [6, 18, 43], "want": [6, 12, 15, 16, 18, 19, 26, 29, 38, 44, 45, 50, 56, 58, 68, 72, 77, 434, 436, 440], "arg": [6, 7, 10, 12, 18, 19, 20, 41, 43, 44, 53, 68, 74, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 274, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 440], "noconvert": [6, 15, 18], "annot": [6, 15, 71], "describ": [6, 12, 14, 15, 18, 20, 29, 44, 45, 47, 48, 71, 75, 302], "show": [6, 7, 10, 12, 16, 18, 31, 39, 47, 51, 56, 57, 68, 74, 80, 434, 435], "don": [6, 10, 12, 21, 26, 41, 42, 44, 45, 52, 55, 68, 75, 433], "some_method": 6, "some_funct": 6, "matrixxf": 6, "big": [6, 41, 42], "small": [6, 9, 18, 21, 26, 34, 42, 43, 44, 46, 59, 437], "associ": [6, 10, 12, 14, 16, 21, 27, 42, 47, 386], "liter": [6, 9, 13, 16, 19, 20, 41, 43, 44, 47], "_a": [6, 12, 13, 15, 19, 20, 41, 43, 44], "definit": [6, 10, 12, 13, 15, 18, 21, 43, 45], "m2": 6, "rais": [6, 11, 12, 15, 19, 60, 102, 438], "runtimeerror": [6, 14, 15], "mutabl": [6, 41], "fundament": [6, 8, 9, 10, 15, 18], "notion": 6, "contrast": 6, "dimension": [6, 18, 26, 31, 55, 75, 80, 272, 433], "1xn": 6, "nx1": 6, "n": [6, 9, 11, 13, 16, 18, 19, 20, 26, 29, 30, 41, 42, 43, 44, 47, 55, 56, 59, 61, 67, 75, 77, 79, 149, 172, 173, 272, 295, 406, 407, 417, 433, 434, 437, 439], "match": [6, 9, 10, 12, 14, 18, 26, 43, 44, 47, 53, 55, 56, 58, 59, 60, 62, 74, 75, 80, 282, 283, 417, 425, 428, 433, 434, 436, 437, 438], "On": [6, 12, 15, 26, 44, 49], "hand": [6, 8, 12, 15, 26], "length": [6, 11, 16, 18, 26, 43, 406, 407, 408], "hold": [6, 10, 12, 16, 19, 26, 41, 45], "constraint": [6, 55, 433], "preced": [6, 10, 30, 43, 47], "1d": [6, 18, 26, 59, 272, 295, 437], "permit": [6, 12, 13, 15, 27, 40], "end": [6, 9, 10, 15, 16, 20, 21, 26, 30, 41, 43, 44, 57, 59, 71, 74, 75, 79, 100, 416, 435, 437], "up": [6, 12, 15, 21, 26, 30, 39, 41, 42, 43, 45, 51, 52, 56, 61, 67, 75, 77, 79, 173, 425, 434, 439], "1x5": 6, "5x1": 6, "ambigu": [6, 41, 43], "could": [6, 11, 12, 14, 15, 16, 18, 26, 43, 55, 56, 57, 58, 59, 60, 67, 433, 434, 435, 436, 437, 438], "2d": [6, 26, 31, 53, 75, 80, 149, 194, 272, 275, 417], "1x4": 6, "encount": [6, 14, 71], "compromis": 6, "consid": [6, 10, 12, 15, 16, 26, 42, 47], "reshap": [6, 18, 26, 55, 56, 57, 58, 59, 60, 62, 69, 72, 73, 74, 75, 409, 433, 434, 435, 436, 437, 438], "desir": [6, 11, 12, 16, 18, 45, 172, 173, 399, 400], "test_eigen": 6, "cpp": [6, 7, 10, 12, 13, 14, 15, 16, 18, 19, 21, 29, 30, 34, 38, 39, 41, 42, 43, 44, 46, 52, 68], "complet": [6, 7, 10, 12, 13, 15, 16, 18, 19, 21, 30, 31, 34, 42, 75, 386], "featur": [7, 10, 12, 13, 18, 21, 26, 29, 32, 41, 42, 43, 44, 46, 51, 62, 75, 78, 429, 440], "brought": 7, "polymorph": [7, 9, 12], "wrapper": [7, 9, 10, 14, 15, 16, 17, 21, 26, 31, 39, 43], "power": [7, 12, 26, 29, 30, 41, 42, 72, 311], "come": [7, 12, 15, 26, 30, 41, 65, 76, 79], "flavor": 7, "stateless": [7, 14], "resembl": 7, "piec": [7, 26], "state": [7, 9, 12, 13, 14, 15, 16], "closur": 7, "10": [7, 20, 26, 30, 31, 39, 41, 42, 43, 44, 45, 47, 48, 55, 56, 57, 58, 59, 61, 62, 72, 74, 77, 153, 194, 240, 272, 307, 398, 399, 433, 434, 435, 436, 437, 439], "func_arg": 7, "anoth": [7, 12, 13, 15, 16, 21, 26, 42, 45], "kind": [7, 8, 12, 15, 16, 19, 26, 27, 33, 41], "execut": [7, 16, 26, 27, 29, 30, 31, 42, 43, 45, 49, 51, 56, 57, 59, 65, 71, 72, 75, 79, 324, 325, 434, 435, 437, 440], "func_ret": 7, "cpp_function": [7, 15, 16], "func_cpp": 7, "after": [7, 13, 14, 16, 18, 26, 29, 30, 31, 41, 43, 45, 47, 55, 68, 72, 78, 79, 272, 302, 324, 433, 440], "trivial": [7, 15, 19], "pybind11_modul": [7, 12, 16, 18, 21], "interact": [7, 8, 13, 15, 32, 52, 64], "session": [7, 12, 14, 39, 59, 437], "squar": [7, 26, 62, 69, 80, 284, 373, 375, 376, 402, 403], "100l": 7, "square_plus_1": 7, "17l": 7, "plus_1": 7, "43": [7, 59, 437], "44l": 7, "mind": [7, 9, 13, 57, 68, 435], "translat": [7, 10, 41, 42, 43, 47], "invoc": [7, 10, 12, 21], "natur": [7, 8, 13, 16, 26, 43], "increas": [7, 16, 26, 43], "comput": [7, 18, 19, 26, 30, 31, 41, 43, 55, 56, 65, 67, 68, 75, 79, 194, 196, 228, 229, 240, 252, 253, 256, 257, 260, 261, 272, 313, 339, 364, 376, 402, 403, 407, 409, 433, 434], "somewhat": [7, 18, 42], "problemat": [7, 41], "aris": [7, 10, 27, 33], "back": [7, 9, 10, 11, 12, 14, 15, 16, 17, 43, 44, 55, 62, 68, 72, 79, 404, 433], "forth": [7, 17], "row": [7, 18, 26, 53, 55, 56, 59, 65, 74, 79, 80, 173, 295, 415, 433, 434, 437], "accumul": 7, "correspondingli": 7, "sequenc": [7, 11, 15, 20, 42, 47, 68, 406, 407, 408], "roundtrip": 7, "significantli": [7, 26, 56, 67, 434], "decreas": [7, 26, 55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "detect": [7, 12, 15, 29, 41, 43, 55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "overhead": [7, 11, 41, 42, 43], "wrap": [7, 8, 9, 12, 15, 16, 21, 26, 41, 44, 45], "sidestep": 7, "potenti": [7, 10, 16, 20, 21, 41, 43], "test_callback": [7, 19], "gui": [7, 29], "asynchron": [7, 30, 42, 75], "network": [7, 31, 42, 75], "apart": [8, 12, 43, 74], "cross": [8, 42, 75], "tool": [8, 29, 30, 42, 43, 45, 50, 51, 52, 59, 77, 79, 437], "address": [8, 12, 15, 43, 46, 50, 68, 75], "nativ": [8, 9, 10, 11, 15, 19, 41, 45], "prefer": [8, 12, 15, 28], "everywher": [8, 11, 74], "most": [8, 12, 15, 26, 41, 42, 43, 46, 47, 52, 55, 433], "sens": [8, 55, 433], "downsid": [8, 10, 16], "transit": [8, 10, 38, 80], "memori": [8, 9, 12, 13, 15, 17, 26, 32, 39, 41, 42, 43, 44, 46, 53, 55, 57, 62, 70, 71, 74, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 182, 183, 185, 188, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 272, 274, 275, 276, 279, 280, 281, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 401, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 433, 435], "overview": [8, 15, 42, 62, 73], "tabl": [8, 9, 10, 15, 41, 42, 47, 59, 65, 437], "list": [8, 10, 12, 13, 14, 15, 18, 19, 26, 42, 43, 44, 51, 74, 75, 90, 91, 93, 139, 146, 149, 153, 155, 156, 188, 197, 229, 231, 252, 253, 256, 260, 267, 285, 288, 289, 302, 304, 338, 347, 376, 379, 381, 382, 407, 408], "builtin": [8, 13], "subsect": [8, 74], "focu": [8, 12], "repres": [8, 11, 13, 26, 31, 40, 41, 43, 44, 47, 52, 55, 64, 74, 79, 80, 433], "string": [8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 26, 41, 42, 43, 44, 46, 47, 52, 62, 75, 114, 146, 192, 282, 283, 317, 318, 336], "byte": [8, 18, 19, 41, 47, 80], "unicod": [8, 41, 42, 43, 46, 47], "chrono": [8, 9, 41, 42, 43, 44, 47], "caster": [8, 15, 16], "cover": [9, 12, 13, 43, 45], "origin": [9, 12, 14, 26, 39, 55, 62, 71, 78, 282, 283, 425, 428, 433], "sent": [9, 42, 74], "layer": [9, 60, 75, 79, 438], "over": [9, 15, 18, 26, 43, 44, 52, 75, 194, 196, 228, 339, 364, 406, 407, 408], "matter": [9, 12, 41, 77], "peel": 9, "off": [9, 43, 49, 64, 70, 331], "exact": [9, 57, 75, 80, 435], "famili": [9, 16, 41, 42, 46], "explain": [9, 12, 13, 15, 79], "pycpp": [9, 13, 15], "ll": [9, 12, 13, 20, 26, 42, 43, 66], "quick": [9, 13, 30], "print_list": 9, "my_list": 9, "auto": [9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 26, 30, 41, 42, 43, 44, 47, 68, 75], "item": [9, 12, 15, 18, 20, 30, 59, 79, 437], "At": [9, 15, 16, 20, 32], "core": [9, 10, 41, 42, 43, 44, 46, 50, 52, 56, 57, 59, 62, 68, 70, 75, 79, 80, 139, 240, 272, 415, 434, 435, 437], "still": [9, 12, 13, 15, 16, 18, 26, 43, 46, 51, 77, 80], "remov": [9, 14, 16, 18, 26, 41, 43, 47, 55, 58, 59, 61, 74, 130, 272, 400, 416, 433, 436, 437, 439], "thin": [9, 15, 17, 19, 34], "previou": [9, 12, 14, 26, 45, 72, 154], "had": [9, 15, 42], "print_vector": 9, "newli": [9, 15], "direct": [9, 12, 17, 19, 26, 31, 32, 41], "lot": [9, 34, 42], "box": [9, 10, 21, 46, 47, 49, 75, 77], "shown": [9, 13, 14, 41, 42, 47, 68, 77, 80], "perfectli": 9, "fine": [9, 12, 78], "immut": 9, "quit": [9, 20, 42], "overrid": [9, 10, 16, 43, 58, 59, 436, 437, 440], "mention": [9, 13, 26, 42, 79], "opaqu": [9, 15], "basic": [9, 12, 13, 15, 16, 18, 29, 39, 62, 76, 77, 425], "descript": [9, 15, 18, 29, 43, 62, 74, 75, 78, 83, 172, 173, 275], "int8_t": [9, 11], "uint8_t": [9, 11, 18], "bit": [9, 11, 21, 26, 41, 43, 75, 102], "int16_t": 9, "uint16_t": 9, "16": [9, 11, 26, 31, 41, 43, 47, 52, 57, 59, 60, 61, 65, 68, 77, 80, 435, 437, 438, 439], "int32_t": [9, 12, 115, 116, 117, 118, 119, 120, 190, 195, 326, 384], "uint32_t": [9, 52, 68, 275], "32": [9, 11, 41, 43, 55, 56, 58, 59, 60, 72, 74, 75, 80, 129, 131, 173, 194, 240, 272, 295, 304, 337, 364, 398, 399, 433, 434, 436, 437, 438, 440], "int64_t": [9, 314], "uint64_t": 9, "64": [9, 26, 41, 43, 57, 58, 59, 60, 74, 80, 131, 139, 240, 272, 304, 364, 398, 399, 435, 436, 437, 438, 440], "ssize_t": [9, 18], "size_t": [9, 18, 30, 41, 44, 68], "platform": [9, 11, 29, 41, 42, 43, 46, 49, 59, 74, 76, 437], "boolean": [9, 21, 26, 47, 75, 217, 218, 240, 272, 401], "char": [9, 11, 41, 43, 44, 46, 47], "charact": [9, 16, 41, 43, 44, 47], "char16_t": 9, "utf": [9, 11, 41, 43, 44, 46, 47], "char32_t": 9, "wchar_t": [9, 11, 41, 43, 44], "u16str": [9, 11], "u32str": [9, 11], "wstring": [9, 11], "string_view": [9, 11, 41, 43, 44], "u16string_view": [9, 11], "17": [9, 26, 30, 41, 42, 43, 57, 58, 59, 60, 61, 77, 435, 436, 437, 438, 439], "pair": [9, 10, 13, 26, 41], "t1": [9, 15, 16, 26], "t2": [9, 15, 16, 26], "reference_wrapp": 9, "dequ": [9, 10], "queue": [9, 41, 84, 86, 90, 91, 93, 101, 103, 107, 108, 115, 116, 117, 118, 119, 120, 122, 131, 135, 145, 146, 151, 153, 154, 156, 158, 159, 161, 163, 165, 166, 168, 169, 171, 175, 188, 190, 191, 192, 193, 195, 197, 199, 208, 211, 213, 216, 220, 221, 222, 223, 224, 227, 229, 231, 233, 237, 242, 243, 247, 250, 252, 253, 256, 258, 260, 267, 269, 284, 285, 288, 289, 291, 292, 294, 295, 302, 304, 310, 311, 317, 322, 326, 327, 328, 331, 332, 344, 345, 346, 347, 352, 353, 355, 357, 358, 359, 360, 365, 371, 372, 373, 374, 376, 379, 381, 382, 384, 386, 387, 389, 390, 395, 396, 401, 412, 414, 415, 416, 419, 420], "valarrai": [9, 10], "order": [9, 10, 11, 12, 14, 18, 20, 26, 29, 41, 43, 44, 47, 55, 57, 68, 74, 75, 77, 79, 80, 139, 272, 347, 401, 425, 433, 435, 440], "unordered_map": [9, 10], "unord": 9, "unordered_set": [9, 10], "experiment": [9, 10, 41, 43, 44, 59, 62, 66, 69, 71, 73, 437], "exp": [9, 19, 26, 58, 62, 69, 72, 75, 436, 440], "variant": [9, 10, 41, 44, 68], "safe": [9, 12, 13, 15, 16, 18, 20, 30, 42, 43, 44, 46], "union": [9, 75, 146, 186, 187, 273, 277, 278, 302, 310, 378, 383, 418], "filesystem": [9, 41, 43, 44], "path": [9, 13, 19, 29, 38, 41, 43, 44, 48, 59, 61, 79, 102, 437, 439, 440], "sparsematrix": 9, "pathlib": [9, 102], "o": [9, 19, 20, 30, 31, 41, 42, 43, 44, 47, 55, 56, 57, 58, 59, 61, 77, 79, 433, 434, 435, 436, 437, 439], "pathlik": 9, "dict": [10, 12, 13, 14, 15, 19, 61, 74, 282, 283, 439], "implic": 10, "semant": [10, 26, 42, 44], "pleas": [10, 12, 13, 15, 16, 21, 28, 30, 33, 39, 42, 45, 51, 52, 63, 64, 71, 75, 76, 77, 78, 425, 440], "next": [10, 12, 15, 18, 41, 43, 45, 47, 62, 75, 77, 80], "nest": [10, 26, 29, 41, 43, 44, 47, 59, 437], "test_stl": 10, "14": [10, 26, 41, 43, 44, 47, 55, 56, 57, 59, 62, 65, 80, 433, 434, 435, 437], "mode": [10, 11, 41, 43, 44, 52, 55, 56, 57, 58, 59, 60, 75, 114, 159, 161, 165, 191, 192, 318, 344, 433, 434, 435, 436, 437, 438], "variou": [10, 14, 26, 41, 42, 43, 47, 50, 77], "typenam": [10, 12, 15, 21, 26, 41, 43, 44], "optional_cast": 10, "variant_cast": 10, "visit": [10, 12, 29, 30, 41, 43, 77], "apply_visitor": 10, "visit_help": 10, "decltyp": [10, 68], "tell": [10, 12, 15, 26, 30], "determin": [10, 12, 14, 15, 26, 43, 47, 55, 56, 57, 58, 59, 60, 75, 272, 282, 283, 433, 434, 435, 436, 437, 438], "select": [10, 16, 26, 38, 52, 68, 74, 78], "solut": [10, 18, 29, 42], "modern": [10, 26, 30, 41, 42, 43, 46], "56": [10, 43, 59, 60, 437, 438], "heavili": [10, 19], "reli": [10, 15, 21, 46], "mechan": [10, 12, 14, 15, 16, 26], "hash": [10, 68, 79, 282, 283], "recurs": [10, 12, 13, 41, 42, 77], "manner": [10, 18, 26, 29], "deal": [10, 14, 15, 18, 27, 33], "elementari": 10, "prevent": [10, 12, 15, 16, 18, 41, 42, 43, 46], "what": [10, 12, 14, 15, 21, 26, 30, 61, 62, 71, 79, 439], "suppos": [10, 12, 16, 18], "append_1": 10, "push_back": [10, 43], "As": [10, 12, 13, 15, 16, 26, 27, 38, 42, 55, 56, 433, 434], "propag": [10, 12, 14, 30, 31, 41], "def_readwrit": [10, 12, 15, 16], "def_readonli": [10, 12], "content": [10, 15, 18, 26, 39, 41, 43, 47, 48, 51, 61, 439], "written": [10, 26, 29, 42, 43, 57, 62, 68, 225, 226, 425, 432, 435], "entireti": 10, "append": [10, 15, 16, 43, 61, 79, 272, 439], "final": [10, 47, 55, 68, 70, 71, 72, 78, 272, 302, 433], "costli": 10, "pybind11_make_opaqu": [10, 16], "disabl": [10, 12, 15, 16, 20, 41, 43, 46, 55, 56, 57, 58, 59, 60, 75, 282, 283, 433, 434, 435, 436, 437, 438, 440], "render": [10, 11, 34, 59, 437], "inspect": [10, 16, 62, 425, 427, 431], "henc": [10, 15, 18, 26], "turn": [10, 15, 70], "befor": [10, 11, 12, 13, 14, 15, 16, 19, 21, 26, 29, 30, 38, 39, 41, 42, 43, 47, 52, 68, 71, 75, 80, 102, 302, 325, 365], "top": [10, 21, 26, 38, 43, 46, 66, 74, 401, 425], "outsid": [10, 12, 43], "present": [10, 12, 19, 26, 27, 30, 33, 41, 47], "typic": [10, 12, 18, 26, 34, 45, 65, 80, 194], "intvector": 10, "clear": [10, 13, 14, 15, 43, 55, 56, 57, 58, 59, 60, 71, 78, 433, 434, 435, 436, 437, 438], "pop_back": 10, "__len__": [10, 16], "__iter__": [10, 16], "make_iter": 10, "begin": [10, 12, 15, 16, 18, 20, 41, 43, 44, 75, 79], "aliv": [10, 13, 16], "test_opaque_typ": 10, "abil": [10, 12, 15, 16, 29, 43, 67, 75], "request": [10, 14, 18, 26, 28, 29, 30, 40, 43, 45, 59, 61, 62, 78, 129, 398, 437, 439], "stl_bind": [10, 12], "exactli": [10, 12, 26, 47], "counterpart": [10, 44], "showcas": [10, 71], "forget": 10, "bind_vector": 10, "vectorint": 10, "bind_map": 10, "mapstringdoubl": 10, "decid": [10, 42], "confin": 10, "anyth": [10, 12, 47, 72], "module_loc": [10, 12], "numer": [10, 12, 25, 26, 41, 43, 46, 47, 75, 317, 365], "yet": [10, 16, 26, 29, 42, 44, 66], "design": [10, 21, 29, 42, 47, 67], "conflict": [10, 12, 43], "separ": [10, 12, 15, 16, 18, 20, 39, 41, 42, 43, 44, 47, 75], "forc": [10, 26, 43, 44, 47, 58, 140, 436], "global": [10, 12, 13, 15, 41, 43, 44, 59, 79, 437], "imposs": [10, 12], "test_stl_bind": 10, "str": [11, 15, 19, 41, 42, 43, 44, 61, 74, 75, 90, 91, 102, 146, 156, 188, 197, 229, 231, 240, 252, 253, 256, 260, 267, 272, 282, 283, 285, 288, 289, 351, 376, 379, 382, 439], "encod": [11, 12, 41, 42], "fail": [11, 12, 14, 15, 16, 19, 43, 44, 55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "respons": [11, 12, 15, 18, 43, 59, 437], "programm": 11, "track": [11, 16, 75], "easiest": 11, "utf8_test": 11, "ic": 11, "cake": 11, "utf8_charptr": 11, "my": [11, 29, 39, 41, 52], "favorit": 11, "food": 11, "termin": [11, 12, 14, 41, 42, 43, 44, 46, 47, 59, 437], "emul": [11, 16, 39, 42, 43], "emoji": [11, 34], "font": [11, 34], "displai": [11, 47, 52, 62, 425, 426, 430], "correctli": [11, 41, 46], "caller": [11, 75], "assum": [11, 12, 15, 21, 26, 29, 34, 43, 47, 149, 405, 417, 425], "decod": [11, 61, 407, 408, 439], "unicodedecodeerror": 11, "std_string_return": 11, "isinst": [11, 12, 70], "inclus": [11, 26, 43, 74, 80], "ascii": 11, "null": [11, 12, 15, 19, 41, 42, 43, 47, 61, 439], "overrun": 11, "occur": [11, 12, 14, 15, 16, 26, 41], "latin": 11, "str_output": 11, "send": [11, 28, 53, 72, 74, 75], "r": [11, 13, 14, 16, 18, 20, 26, 31, 39, 41, 43, 47, 59, 68, 77, 305, 437], "xe9sum": 11, "xe9": 11, "alic": 11, "hr": 11, "py_": 11, "pyunicode_decodelatin1": 11, "r\u00e9sum\u00e9": 11, "sever": [11, 12, 13, 14, 15, 16, 18, 26, 30, 42, 43, 46, 75, 194], "codec": 11, "parti": [11, 13, 24, 29, 32], "libiconv": 11, "transcod": [11, 41], "text": [11, 14, 26, 41, 42, 43, 44, 47, 52, 71, 75], "return_byt": 11, "xba": 11, "xd0": 11, "Not": [11, 12, 68, 70, 264, 290, 412, 440], "b": [11, 12, 13, 15, 16, 18, 26, 30, 31, 38, 39, 41, 44, 45, 46, 47, 62, 68, 178, 333, 337, 405, 406, 407, 408, 425, 427, 431], "asymmetri": 11, "look": [11, 12, 13, 15, 18, 21, 26, 29, 41, 43, 59, 61, 71, 76, 80, 272, 401, 437, 439], "harmless": 11, "invalid": [11, 12, 14, 15, 41, 42, 43, 44, 282, 283], "0xba": 11, "posit": [11, 26, 42, 43, 44, 45, 47, 72, 75, 115, 118, 120, 407], "endian": [11, 41], "window": [11, 30, 32, 34, 41, 42, 43, 45, 46, 49, 75, 275], "set_window_text": 11, "hwnd": 11, "setwindowtext": 11, "c_str": [11, 43], "get_window_text": 11, "buffer_s": 11, "getwindowtextlength": 11, "make_uniqu": 11, "getwindowtext": 11, "multibyt": [11, 43], "shift": [11, 75, 202, 204], "ji": 11, "receiv": [11, 13, 29, 53, 74, 79], "longer": [11, 15, 38, 41, 43, 56, 434], "trail": [11, 12, 41, 43, 47], "pass_char": 11, "pass_wchar": 11, "w": [11, 41, 42, 43, 44, 47, 51, 74, 75, 79, 149, 172, 173, 417], "0x65": 11, "chr": 11, "typeerror": [11, 12, 14, 15], "\u00e9": 11, "u": [11, 28, 29, 39, 41, 42, 47, 63, 77, 78], "00e9": 11, "combin": [11, 13, 15, 31, 41, 43, 53], "0065": 11, "0301": 11, "letter": [11, 47], "acut": 11, "accent": 11, "though": [11, 12, 15, 16, 20, 72, 272], "combining_e_acut": 11, "u0301": 11, "resolv": [11, 20, 21, 41, 59, 437], "unicodedata": 11, "nfc": 11, "thai": 11, "absolut": [11, 26, 75, 227], "minimum": [11, 26, 29, 42, 47, 55, 56, 57, 58, 62, 68, 69, 75, 80, 127, 207, 279, 433, 434, 435, 436], "softwar": [11, 27, 28, 30, 33, 39, 42, 45, 55, 56, 57, 58, 60, 77, 425, 433, 434, 435, 436, 438], "develop": [11, 15, 29, 30, 34, 40, 43, 45, 59, 62, 66, 76, 78, 79, 437], "know": [11, 12, 14, 15, 16, 21, 26, 29, 42, 80], "about": [11, 12, 15, 21, 26, 30, 34, 39, 41, 42, 44, 56, 77, 80, 434], "No": [11, 12, 13, 18, 43, 74, 75, 275], "excus": 11, "win32": [11, 59, 437], "boundari": [11, 14, 43], "d": [12, 18, 19, 26, 30, 41, 42, 43, 44, 46, 47, 59, 67, 415, 437], "within": [12, 13, 14, 15, 16, 34, 42, 43, 47, 71, 74, 75, 80, 116, 119, 425], "anim": [12, 15, 16, 34, 42], "dog": [12, 14, 15, 16], "given": [12, 14, 15, 18, 20, 21, 26, 41, 43, 47, 50, 55, 70, 74, 75, 79, 85, 87, 89, 91, 93, 95, 97, 99, 101, 104, 106, 107, 110, 111, 113, 114, 123, 125, 127, 129, 131, 132, 134, 136, 138, 142, 144, 146, 148, 149, 152, 160, 162, 164, 167, 168, 170, 171, 174, 176, 179, 183, 192, 201, 203, 205, 207, 210, 212, 215, 230, 234, 236, 239, 244, 246, 248, 249, 251, 254, 255, 265, 266, 274, 279, 282, 283, 285, 287, 292, 300, 306, 308, 311, 313, 316, 318, 320, 323, 329, 330, 334, 336, 337, 341, 343, 345, 347, 350, 354, 356, 359, 361, 363, 366, 368, 370, 373, 375, 377, 379, 381, 388, 390, 392, 394, 401, 407, 413, 417, 420, 422, 433], "go": [12, 15, 16, 25, 26, 29, 55, 62, 77, 433], "n_time": [12, 16], "woof": [12, 15], "let": [12, 26, 28, 29, 30, 42, 55, 57, 68, 80, 433, 435], "plain": [12, 18, 26], "call_go": [12, 16], "clearli": 12, "redirect": [12, 20, 41, 43], "helper": [12, 14, 49], "pyanim": [12, 16], "pybind11_override_pur": [12, 16], "pybind11_overrid": [12, 16], "pybind11_override_pure_nam": 12, "pybind11_override_nam": 12, "slot": [12, 72], "__call__": [12, 60, 438], "minor": [12, 29, 43], "adapt": [12, 41, 75, 194], "highlight": [12, 15, 16, 43, 71, 80], "importantli": [12, 30, 43], "holder": [12, 15, 21, 27, 29], "actual": [12, 14, 26, 29, 55, 72, 80, 317, 346, 433], "wrong": [12, 14, 15, 41], "suffici": 12, "step": [12, 30, 55, 61, 62, 71, 72, 77, 78, 100, 433, 439], "proper": [12, 16, 29, 43, 52], "invok": [12, 14, 15, 16, 18, 19, 45, 68, 77], "cat": [12, 14, 15, 30, 57, 61, 409, 435, 439], "meow": [12, 15], "deriv": [12, 15, 30, 43], "__init__": [12, 16, 60, 62, 70, 73, 74, 438], "regardless": [12, 43], "portion": [12, 27], "left": [12, 14, 15, 26, 47, 74, 75, 78], "uniniti": [12, 15], "leav": [12, 72], "caus": [12, 14, 15, 18, 20, 21, 26, 43, 47], "subsequ": [12, 41, 56, 62, 425, 428, 434, 440], "metaclass": 12, "throw": [12, 14, 16, 18, 19, 43, 44], "dachshund": 12, "bark": [12, 15, 16], "yap": 12, "super": [12, 42, 60, 70, 438], "onc": [12, 16, 26, 30, 39, 45, 56, 68, 434], "mix": [12, 19, 20, 26, 41, 42, 43], "fall": [12, 15, 44, 62], "mro": 12, "regard": [12, 13, 21], "overridden": [12, 29], "referenc": [12, 15, 16, 18, 21, 59, 78, 437], "modifi": [12, 13, 15, 16, 19, 21, 27, 33, 39, 43, 47, 51, 52, 55, 72, 365, 433], "cach": [12, 29, 41, 42, 55, 58, 59, 60, 61, 62, 65, 67, 73, 79, 80, 102, 130, 225, 226, 282, 283, 405, 408, 425, 427, 428, 433, 436, 437, 438, 439], "replac": [12, 18, 20, 29, 41, 42, 43, 44, 46, 47, 51, 216], "accompani": 12, "pybind11_overload": 12, "until": [12, 15, 26, 30, 44, 62, 69, 400, 415, 416], "v2": [12, 34, 77], "get_overrid": 12, "get_overload": 12, "older": [12, 26, 41, 42, 43, 44], "soon": [12, 52, 76, 81, 83, 180, 181, 303], "deprec": [12, 38, 41, 43, 58, 75, 81, 83, 180, 181, 303, 436], "reduc": [12, 18, 26, 30, 41, 43, 44, 53, 75, 101, 401], "overload_cast": 12, "test_virtual_funct": 12, "sure": [12, 15, 16, 19, 45, 51, 401, 425, 440], "unknown": [12, 43, 44], "doesn": [12, 15, 41, 42, 43, 44, 55, 282, 283, 433], "pydog": 12, "comma": [12, 16, 41, 47], "portabl": [12, 28, 42, 43, 46], "nonzero": [12, 62, 69], "omit": [12, 15, 18, 47], "huski": 12, "pyhuski": 12, "techniqu": 12, "duplic": [12, 26], "especi": [12, 41, 46], "help": [12, 15, 29, 30, 31, 42, 43, 45, 52, 64, 67, 78, 425], "animalbas": 12, "dogbas": 12, "advantag": [12, 18, 26, 28, 67], "possibli": [12, 14, 20, 44], "did": 12, "dedic": [12, 33], "neither": 12, "nor": [12, 74], "repeat": [12, 43, 47, 62, 67, 69, 73, 75, 336, 337], "shihtzu": 12, "yip": 12, "mere": 12, "primarili": 12, "dispatch": [12, 62, 73, 74, 79], "check": [12, 18, 19, 26, 30, 41, 42, 43, 44, 46, 59, 62, 64, 68, 71, 74, 76, 77, 425, 428, 437], "sometim": [12, 15, 16, 18, 26], "intermedi": [12, 26, 62], "destruct": [12, 15, 16], "init_alia": 12, "eventu": [12, 15], "introduc": [12, 15, 26, 41, 43], "hard": [12, 15, 55, 365, 433], "unwieldi": 12, "output": [12, 17, 26, 34, 41, 42, 43, 44, 45, 46, 47, 53, 58, 62, 65, 68, 70, 71, 72, 73, 74, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 425, 427, 428, 431, 436, 440], "faq_reference_argu": 12, "solv": 12, "bodi": [12, 16, 18], "retriev": [12, 153], "mymethod": 12, "someth": [12, 13, 15, 41, 49, 70], "none": [12, 14, 16, 20, 47, 55, 56, 57, 58, 59, 60, 74, 75, 84, 85, 86, 88, 90, 91, 92, 93, 94, 96, 100, 101, 102, 103, 105, 108, 109, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 130, 135, 137, 139, 140, 141, 143, 145, 146, 147, 151, 153, 154, 156, 158, 159, 161, 163, 165, 166, 169, 175, 177, 178, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 208, 209, 211, 213, 219, 220, 221, 222, 223, 224, 227, 228, 229, 231, 233, 235, 237, 238, 240, 242, 243, 245, 247, 250, 252, 253, 256, 258, 259, 260, 262, 263, 267, 269, 270, 272, 273, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 288, 289, 291, 293, 294, 296, 297, 298, 299, 301, 302, 309, 310, 313, 315, 317, 318, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 339, 344, 346, 347, 348, 351, 352, 353, 355, 357, 358, 360, 362, 364, 365, 369, 371, 372, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 412, 414, 415, 416, 418, 419, 421, 423, 424, 433, 434, 435, 436, 437, 438], "gil_scoped_acquir": [12, 13, 16], "gil": [12, 13, 15], "acquir": [12, 16], "scope": [12, 13, 15, 16, 18, 20, 30, 41], "obj": [12, 19, 21, 41], "int_": [12, 19], "els": [12, 14, 15, 16, 20, 26, 58, 60, 61, 68, 74, 145, 436, 438, 439], "factori": [12, 68], "privat": [12, 13, 18, 21, 41], "straightforward": [12, 16], "accomplish": [12, 18], "unique_ptr": [12, 41, 43, 44], "publicli": 12, "well": [12, 15, 18, 20, 26, 30, 39, 41, 43, 44, 47, 52, 53, 74, 78, 295], "rvalu": [12, 15, 18, 43], "pyexampl": 12, "target": [12, 13, 15, 29, 38, 39, 41, 43, 45, 71, 74, 75, 180, 181], "aggreg": [12, 79], "preferenti": 12, "initializer_list": [12, 26, 43, 44], "event": [12, 14, 27, 33, 59, 437], "singleton": 12, "pattern": [12, 15, 30, 68, 78, 282], "dealloc": [12, 15, 21, 55, 56, 57, 58, 60, 62, 69, 80, 321, 433, 434, 435, 436, 438, 440], "ever": [12, 14, 30, 64], "nodelet": 12, "crucial": 12, "leak": [12, 15, 16], "thrown": [12, 14, 15, 19, 47], "error_already_set": [12, 14, 19], "process": [12, 13, 18, 21, 26, 30, 32, 39, 41, 43, 51, 59, 62, 79, 425, 428, 437], "catch": [12, 14, 41, 43, 71], "discard": [12, 14, 26], "discard_as_unrais": [12, 14], "stop": [12, 30, 41, 43], "yield": [12, 16, 19], "stopiter": [12, 14], "stack": [12, 26, 41, 43, 45, 59, 437], "frame": [12, 32], "danger": [12, 16], "exec": [12, 13, 20], "valueerror": [12, 14, 59, 60, 437, 438], "unrais": 12, "error_context": 12, "why": [12, 30, 42, 56, 434], "__func__": [12, 14], "noexcept": [12, 14, 41, 43], "easili": [12, 15, 26, 28], "fix": [12, 20, 26, 41, 42, 43, 47, 272], "func": [12, 16, 26], "statement": [12, 15, 20], "implicitly_convert": [12, 15], "runawai": 12, "reentrant": 12, "getter": [12, 15], "setter": [12, 15], "subclass": [12, 14, 19], "illustr": [12, 14, 15, 20, 31, 42, 80], "foo": [12, 15, 16, 41, 43], "def_property_readonly_stat": 12, "re": [12, 13, 14, 15, 30, 39, 56, 70, 75, 76, 434], "vector2": 12, "x": [12, 18, 20, 26, 30, 31, 41, 43, 44, 47, 56, 57, 60, 61, 68, 74, 75, 77, 79, 80, 240, 272, 305, 406, 407, 408, 434, 435, 438, 439], "y": [12, 18, 26, 30, 31, 38, 41, 43, 44, 47, 56, 57, 61, 68, 74, 75, 79, 80, 305, 434, 435, 439], "friend": [12, 41, 43, 44], "tostr": 12, "to_str": [12, 41, 42, 43, 44], "__repr__": [12, 15], "realli": [12, 15], "short": [12, 13, 26, 42, 59, 437, 440], "notat": [12, 15, 18, 43, 47], "__mul__": 12, "is_oper": 12, "marker": [12, 79], "notimpl": [12, 43], "rather": [12, 15, 16, 18, 19, 26, 34, 42], "test_operator_overload": 12, "facil": [12, 46], "serial": [12, 30, 102], "de": 12, "graph": [12, 14, 30, 31, 42, 46, 58, 62, 67, 73, 282, 425, 430, 436], "stream": [12, 20, 41, 43, 44], "question": [12, 15, 42, 71], "pickleabl": 12, "m_valu": 12, "setextra": 12, "m_extra": 12, "__setstate__": 12, "__getstate__": 12, "p": [12, 14, 21, 26, 29, 30, 31, 41, 42, 43, 44, 46, 47, 52, 75, 80, 272, 287], "make_tupl": [12, 18, 19, 20], "runtime_error": [12, 18], "test_valu": 12, "15": [12, 26, 41, 42, 43, 44, 47, 57, 59, 62, 435, 437], "dump": [12, 30, 58, 61, 282, 436, 439, 440], "latest": [12, 28, 29, 32, 34, 42, 43, 45, 77, 79], "bewar": 12, "instruct": [12, 26, 32, 42, 43, 46, 52, 65, 66, 71, 76, 77, 425, 440], "alloc": [12, 15, 18, 26, 32, 41, 43, 44, 46, 53, 55, 56, 57, 58, 59, 60, 62, 68, 80, 433, 434, 435, 436, 437, 438], "skip": [12, 26, 55, 56, 57, 58, 59, 60, 61, 407, 433, 434, 435, 436, 437, 438, 439], "dure": [12, 16, 26, 29, 41, 43, 51, 65], "corrupt": [12, 15, 19], "segment": [12, 15, 21], "fault": [12, 15, 21], "test_pickl": 12, "http": [12, 16, 18, 25, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 48, 52, 59, 62, 76, 77, 425, 426, 437], "doc": [12, 13, 16, 18, 28, 30, 32, 34, 41, 42, 43, 44, 45, 59, 66, 68, 77, 437], "org": [12, 16, 18, 25, 30, 31, 33, 34, 41, 42, 43, 44, 45, 46, 59, 61, 77, 437, 439], "html": [12, 16, 18, 30, 31, 34, 40, 41, 42, 43, 44, 45, 59, 77, 437], "real": [12, 20, 32, 41, 42, 62, 69, 71, 74, 218, 305, 320], "capabl": [12, 26, 42], "deep": [12, 43, 75], "__copy__": 12, "__deepcopy__": 12, "copyabl": [12, 15], "memo": 12, "aka": 12, "mytyp": 12, "basetype1": 12, "basetype2": 12, "basetype3": 12, "interspers": 12, "earlier": [12, 15, 41, 52, 75], "find": [12, 30, 39, 43, 45, 55, 56, 57, 58, 59, 60, 66, 77, 433, 434, 435, 436, 437, 438], "export": [12, 14, 15, 16, 39, 41, 43, 49, 66, 75, 77, 440], "particip": 12, "tag": [12, 15, 18, 28, 29, 42, 43, 77], "multiple_inherit": 12, "redund": [12, 41, 43], "across": [12, 14, 30, 31, 42, 46, 74, 79, 80, 194, 408], "module1": [12, 14], "pet": [12, 16], "module2": [12, 14], "create_pet": 12, "pet1": 12, "kitti": 12, "pet2": 12, "doggi": 12, "split": [12, 16, 66, 75, 80, 190, 195, 326, 384, 409], "unrel": 12, "extern": [12, 13, 22, 38, 42, 43, 46, 71, 78, 80], "indirectli": 12, "get_nam": 12, "traceback": [12, 15], "stdin": [12, 15], "importerror": [12, 14], "generic_typ": 12, "unless": [12, 16, 26, 43, 44, 47, 55, 433, 440], "pet_nam": 12, "frog": 12, "mycat": 12, "mydog": 12, "fluffi": 12, "rover": 12, "registr": [12, 14], "elsewher": [12, 16, 21], "linker": 12, "embed": [12, 27, 43, 45, 55, 62, 154, 405, 433], "emb": [12, 13, 30, 34], "test_local_bind": 12, "42": [12, 13, 16, 19, 20, 41, 42, 43, 44, 47, 56, 59, 61, 68, 434, 437, 439], "aren": [12, 68, 81, 83], "meant": [12, 18, 68], "But": [12, 14, 26, 47, 68, 72], "publicist": 12, "primari": [12, 45, 62, 67, 73], "intent": 12, "is_fin": 12, "isfin": 12, "pyfinalchild": 12, "pettyp": 12, "cage": 12, "broken": [12, 15, 21, 26, 41, 43], "catcag": 12, "dogcag": 12, "those": [12, 20, 79], "again": [12, 14, 19, 55, 433], "fn": 12, "myclasst": 12, "understand": [12, 15, 26, 80], "produc": [12, 19, 41, 47, 55, 56, 68, 71, 72, 75, 433, 434], "fact": [12, 21, 26], "hierarchi": [12, 43, 44], "runtim": [12, 14, 15, 16, 18, 31, 41, 42, 43, 44, 46, 102], "proce": [12, 15], "polymorphic_type_hook": 12, "enum": [12, 15, 16, 41, 43, 44, 62, 73], "petkind": 12, "zebra": 12, "ag": 12, "_kind": 12, "sound": 12, "type_info": [12, 41], "nullptr": [12, 15, 41, 43, 44], "typeid": 12, "static_cast": [12, 15, 16, 18, 19], "critic": [12, 42], "whose": [12, 14, 26, 47, 398], "achiev": [12, 13, 46, 71, 78], "howtosetupllvmstylertti": 12, "too": [12, 18, 26, 42, 47, 440], "dynamic_cast": 12, "test_tagbased_polymorph": 12, "t_py": 12, "ob": 12, "garbag": [12, 15, 16], "collect": [12, 14, 15, 16, 31, 51, 53, 59, 71, 79, 425, 437], "wish": [12, 18], "manipul": [12, 14, 18, 26, 74], "pyheaptypeobject": 12, "custom_type_setup": 12, "ownspythonobject": 12, "cl": [12, 19, 41, 43], "heap_typ": 12, "ht_type": 12, "tp_flag": 12, "py_tpflags_have_gc": 12, "tp_travers": 12, "self_bas": 12, "visitproc": 12, "py_visit": 12, "tp_clear": 12, "focus": 13, "revers": [13, 14, 15, 19, 26, 41, 347], "page": [13, 29, 30, 43, 62, 76, 77, 425], "cmake_minimum_requir": [13, 29], "find_packag": [13, 22, 29, 45], "add_subdirectori": [13, 22, 38, 41, 45], "add_execut": [13, 29], "target_link_librari": [13, 29, 38, 45], "essenti": [13, 15, 77], "scoped_interpret": 13, "guard": [13, 20], "hello": [13, 15, 19, 20, 41, 42, 43, 47], "world": [13, 20, 41, 42, 43, 47], "initi": [13, 16, 18, 19, 21, 26, 39, 41, 43, 58, 59, 60, 62, 70, 72, 75, 282, 283, 425, 427, 428, 431, 436, 437, 438], "raii": 13, "destroi": [13, 18, 20], "shut": 13, "down": [13, 15, 18, 75], "eval": [13, 14, 20, 26, 58, 59, 60, 61, 70, 436, 437, 438, 439], "eval_fil": [13, 20], "evalu": [13, 16, 17, 26, 31, 59, 437], "context": [13, 16, 20, 26, 32, 41, 43, 44, 53, 271, 324, 325], "kwarg": [13, 19, 68, 74, 312, 324, 325, 338, 397, 440], "messag": [13, 31, 41, 43, 52, 79], "answer": [13, 41, 42, 43, 71], "format": [13, 16, 18, 29, 30, 34, 41, 42, 43, 44, 45, 46, 47, 51, 53, 78, 102, 180, 181, 408, 415], "index": [13, 15, 18, 26, 30, 42, 43, 45, 59, 61, 62, 68, 74, 77, 79, 225, 226, 401, 405, 407, 437, 439], "_": [13, 29, 43, 47, 57, 61, 70, 79, 435, 439], "iostream": [13, 20, 41, 42, 43, 46], "module_": [13, 14, 15, 16, 19, 20], "sy": [13, 19, 20], "attr": [13, 14, 16, 19, 20, 59, 93, 132, 146, 179, 285, 308, 334, 347, 437], "directori": [13, 19, 29, 38, 43, 45, 51, 61, 68, 425, 439], "calc": 13, "locat": [13, 15, 26, 29, 39, 43, 45, 53, 59, 75, 76, 79, 302, 437, 440], "j": [13, 18, 26, 29, 41, 47, 272], "assert": [13, 14, 16, 18, 26, 39, 41, 57, 435, 440], "reload": [13, 75], "scenario": [13, 19, 53], "script": [13, 20, 39, 42, 43, 45, 49, 50, 51, 59, 65, 66, 71, 77, 79, 437], "pybind11_embedded_modul": 13, "fast_calc": 13, "unlimit": 13, "uniqu": [13, 21], "py_modul": [13, 68], "cpp_modul": 13, "fmt": [13, 41, 42, 43, 44, 45, 46, 47, 48], "__dict__": [13, 20], "restart": 13, "initialize_interpret": 13, "finalize_interpret": 13, "unload": 13, "freed": [13, 15, 21, 26, 39], "cycl": [13, 30, 79], "cpython": [13, 15, 16], "concurr": [13, 20, 30, 42], "fatal": [13, 61, 439], "py_initi": 13, "py_fin": 13, "offer": [13, 18], "coupl": 13, "reflect": [13, 75, 78], "thread": [13, 16, 20, 26, 28, 29, 30, 31, 41, 42, 43, 44, 52, 59, 74, 398, 437, 440], "challeng": [13, 16], "gil_scoped_releas": [13, 15, 16], "account": 13, "handler": [14, 43], "trap": 14, "examin": 14, "arriv": 14, "bad_alloc": 14, "memoryerror": 14, "domain_error": 14, "invalid_argu": 14, "length_error": 14, "out_of_rang": 14, "indexerror": 14, "range_error": 14, "overflow_error": 14, "overflowerror": 14, "stop_iter": 14, "index_error": 14, "__getitem__": [14, 62], "__setitem__": 14, "key_error": 14, "keyerror": 14, "value_error": 14, "type_error": 14, "buffer_error": 14, "buffererror": 14, "import_error": 14, "attribute_error": 14, "attributeerror": 14, "bidirect": 14, "further": [14, 15, 26, 42, 43, 56, 77, 434], "cast_error": [14, 19], "insuffici": 14, "register_except": 14, "cppexp": 14, "pyexp": 14, "register_local_except": 14, "pyexc_runtimeerror": 14, "Then": [14, 39, 42, 45, 70, 409], "caught": 14, "pyexc_except": 14, "register_exception_transl": 14, "register_local_exception_transl": 14, "logic": [14, 15, 26, 68, 256, 257, 260, 261, 272, 282, 283], "exception_ptr": 14, "tri": [14, 15, 43], "shot": 14, "rethrow_except": 14, "claus": [14, 31], "pyerr_setstr": 14, "ex": [14, 21, 47], "hypothet": 14, "mycustomexcept": 14, "otherexcept": 14, "mycustomerror": 14, "exc": 14, "chanc": 14, "test_except": 14, "crash": [14, 15, 43], "systemerror": [14, 43], "plan": [14, 42], "deleg": 14, "libc": [14, 41, 42, 43, 77], "libstdc": [14, 41, 43], "behav": [14, 72, 75], "maco": [14, 29, 30, 41, 42, 43, 45, 46], "fvisibl": [14, 16, 43], "hidden": [14, 16, 43], "therefor": [14, 20, 26, 52, 55, 57, 433, 435], "abi": [14, 41, 43, 77], "exercis": 14, "wiki": [14, 30, 42], "influenc": 14, "win": 14, "payload": 14, "textual": [14, 41, 43, 47], "summari": [14, 59, 437], "open": [14, 28, 29, 30, 34, 39, 42, 43, 46, 47, 52, 56, 57, 58, 59, 60, 61, 62, 271, 300, 425, 431, 434, 435, 436, 437, 438, 439, 440], "miss": [14, 39, 41, 43, 75, 440], "txt": [14, 28, 29, 42, 45, 59, 77, 437], "close": [14, 39, 41, 43, 47, 58, 59, 60, 62, 72, 130, 271, 425, 427, 428, 431, 436, 437, 438], "pyexc_filenotfounderror": 14, "pyexc_permissionerror": 14, "ring": [14, 53], "boromir": 14, "frodo": 14, "ball": 14, "spot": 14, "outlin": 14, "pyexc_typeerror": 14, "demo": [14, 32, 44, 58, 62, 66, 77, 79, 436], "easier": [14, 18, 30, 43], "pyerr_clear": 14, "divid": [14, 47, 146, 402, 403], "raise_from": 14, "destructor": [14, 15], "abort": 14, "immedi": [14, 15, 26, 75, 77], "__del__": 14, "log": [14, 26, 39, 41, 42, 43, 44, 51, 56, 58, 59, 62, 69, 73, 79, 251, 434, 436, 437], "hook": [14, 59, 62, 324, 325, 437], "trigger": [14, 26, 41], "audit": 14, "nonthrowing_func": 14, "ea": 14, "magic": 14, "third_parti": [14, 48, 51], "proceed": 15, "free": [15, 21, 26, 27, 30, 33, 42, 43, 61, 439], "member": [15, 16, 21, 26, 41, 43, 45, 62, 64, 73, 74], "charg": [15, 27], "resourc": [15, 46, 59, 437], "tricki": [15, 16], "right": [15, 18, 21, 26, 27, 30, 33, 40, 41, 42, 47, 52, 74, 75], "get_data": 15, "_data": 15, "kaboom": 15, "usabl": 15, "ownership": [15, 21, 42], "collector": 15, "delet": [15, 18, 41, 43, 44], "impli": [15, 21, 27, 33], "subtl": 15, "silent": [15, 19, 59, 437], "take_ownership": 15, "reach": [15, 52, 400], "decoupl": 15, "destin": [15, 61, 439], "warn": [15, 41, 42, 43, 55, 56, 57, 58, 59, 60, 79, 433, 434, 435, 436, 437, 438], "def_properti": 15, "automatic_refer": 15, "probabl": [15, 49], "getdata": 15, "setdata": 15, "technic": [15, 26, 30], "ters": 15, "debug": [15, 16, 29, 41, 43, 47, 50, 52, 55, 56, 57, 58, 60, 62, 67, 68, 75, 78, 433, 434, 435, 436, 438], "worth": [15, 26], "spend": 15, "aspect": 15, "seen": [15, 30, 55, 56, 139, 433, 434], "clarifi": 15, "identifi": [15, 21, 47, 59, 68, 437, 440], "relationship": [15, 16], "elabor": 15, "elimin": [15, 41, 43], "inconsist": [15, 21, 41, 43], "certain": [15, 16, 18, 34, 41, 47, 425], "nurs": 15, "patient": 15, "kept": [15, 45], "arbitrarili": 15, "noth": [15, 21], "weak": [15, 16], "incorrect": [15, 29, 43], "sai": [15, 19, 30], "activ": [15, 51, 60, 62, 66, 70, 77, 90, 91, 146, 156, 188, 197, 207, 229, 231, 240, 252, 253, 256, 260, 267, 272, 275, 285, 288, 289, 376, 379, 382, 425, 428, 438], "review": [15, 19, 63, 76, 78], "ident": [15, 20, 22, 43, 60, 62, 69, 438], "presum": 15, "analog": 15, "with_custodian_and_ward": 15, "with_custodian_and_ward_postcal": 15, "call_guard": [15, 16, 20], "pseudocod": 15, "scope_guard": 15, "forward": [15, 29, 41, 60, 70, 75, 438], "lock": [15, 32], "t3": [15, 16, 26], "test_call_polici": 15, "print_dict": 15, "kei": [15, 16, 19, 42, 52, 55, 57, 59, 62, 70, 80, 409, 433, 435, 437], "bar": [15, 16], "test_kwargs_and_default": 15, "keyword_arg": 15, "default_arg": 15, "noteworthi": 15, "myfunct": 15, "sometyp": 15, "prior": [15, 47], "preview": [15, 29], "0x101b7b080": 15, "nonetyp": 15, "human": 15, "readabl": [15, 19], "arg_v": 15, "rememb": [15, 74], "unnam": 15, "kw_onli": 15, "rel": [15, 23, 29], "convent": [15, 43], "pow": [15, 26, 62, 69, 72], "pos_onli": 15, "undesir": [15, 16], "obtain": [15, 18, 19, 27, 59, 80, 437], "floats_onli": 15, "floats_pref": 15, "succe": [15, 19, 30], "cours": [15, 16, 26], "var": [15, 62, 69, 75], "shorthand": 15, "empti": [15, 29, 41, 43, 44, 47, 61, 62, 68, 69, 75, 272, 439, 440], "unspecifi": 15, "prepend": [15, 16, 272], "practic": [15, 66], "ones": [15, 19, 42, 43, 62, 69, 75], "priorit": 15, "setint": 15, "setstr": 15, "pybind11_declare_holder_typ": [16, 21], "pybind11_override_": 16, "preprocessor": [16, 44, 282, 283], "concept": [16, 41, 55, 433], "myreturntyp": 16, "t4": [16, 26], "five": [16, 30, 42], "pybind11_typ": 16, "returntyp": 16, "classtyp": 16, "held": [16, 26], "releas": [16, 28, 30, 32, 33, 41, 42, 43, 45, 77, 272], "my_funct": 16, "parallel": [16, 28, 29, 30, 59, 75, 79, 406, 407, 408, 437], "great": [16, 18], "taken": [16, 51, 287], "appear": [16, 43, 47, 52, 282, 283], "reacquir": 16, "realiz": [16, 21], "trampolin": 16, "simplifi": [16, 26, 29, 41, 42, 43], "bug": [16, 42, 43, 62], "highli": [16, 46, 77], "recommend": [16, 26, 43, 44, 45, 55, 70, 77, 433, 440], "consult": 16, "checklist": 16, "lazi": [16, 26, 59, 437], "intention": 16, "commonli": 16, "overlook": 16, "complic": [16, 18, 26], "carefulli": 16, "particularli": [16, 18], "troublesom": 16, "weird": 16, "unexpect": [16, 75], "circumst": 16, "supplement": 16, "test_sequences_and_iter": 16, "queri": [16, 30, 42, 57, 62, 75, 409, 435], "precaut": 16, "recal": 16, "wherea": [16, 26], "somewher": [16, 19], "anymor": 16, "autom": [16, 51, 71], "lookup": [16, 41, 43], "cyclic": 16, "symbol": [16, 41, 43, 52], "visibl": [16, 43], "command": [16, 29, 31, 39, 42, 43, 45, 47, 51, 52, 65, 79, 84, 86, 90, 91, 93, 101, 103, 107, 108, 115, 116, 117, 118, 119, 120, 122, 131, 135, 145, 146, 151, 153, 154, 156, 158, 159, 161, 163, 165, 166, 168, 169, 171, 175, 188, 190, 191, 192, 193, 195, 197, 199, 208, 211, 213, 216, 220, 221, 222, 223, 224, 227, 229, 231, 233, 237, 242, 243, 247, 250, 252, 253, 256, 258, 260, 267, 269, 284, 285, 288, 289, 291, 292, 294, 295, 302, 304, 310, 311, 317, 322, 326, 327, 328, 331, 332, 344, 345, 346, 347, 352, 353, 355, 357, 358, 359, 360, 365, 371, 372, 373, 374, 376, 379, 381, 382, 384, 386, 387, 389, 390, 395, 396, 401, 412, 414, 415, 416, 419, 420, 440], "interfer": 16, "pybind11_export": 16, "capsul": [16, 19], "reinterpret_cast": 16, "mydata": 16, "get_shared_data": 16, "set_shared_data": 16, "behind": [16, 47], "cleanup": 16, "cleanup_callback": 16, "add_object": 16, "_cleanup": 16, "stash": 16, "baseclass": 16, "standpoint": 16, "prematur": 16, "weakref": 16, "dec_ref": 16, "exit": [16, 39], "atexit": 16, "beauti": [16, 42, 43], "varieti": [16, 18, 53, 71, 75], "python_exampl": 16, "repositori": [16, 29, 42, 43, 45, 48, 63], "gotcha": [16, 17], "tab": [16, 46, 47, 61, 439], "break": [16, 43, 44], "pars": [16, 29, 43, 44, 47], "multi": [16, 26, 42, 53, 55, 62, 80, 102, 149, 417, 425, 433], "indent": [16, 20], "mydelimit": 16, "exclud": 16, "suppress": [16, 41], "disable_function_signatur": 16, "disable_enum_members_docstr": 16, "disable_user_defined_docstr": 16, "enum_": 16, "affect": [16, 26, 43, 79], "goe": [16, 21, 50], "restor": [16, 41, 58, 60, 436, 438], "unwant": 16, "www": [16, 30, 31, 32, 41, 42, 43, 45, 77], "arg0": [16, 74], "circumv": 16, "pyfoo": 16, "pybar": 16, "resort": 17, "compound": 17, "keyword": [17, 20, 26, 29, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 182, 183, 188, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 272, 274, 276, 279, 280, 281, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 401, 402, 403, 404, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422], "unpack": [17, 20, 29], "ellipsi": [17, 75], "ostream": [17, 41, 42, 43, 44], "extrem": [18, 43], "exchang": 18, "plugin": [18, 59, 437], "represent": [18, 26, 41, 43, 47, 62, 75, 365], "simplist": 18, "col": 18, "m_row": 18, "m_col": 18, "m_data": 18, "matric": [18, 25, 26, 31, 41], "matrix_inst": 18, "buffer_protocol": 18, "def_buff": 18, "buffer_info": 18, "sizeof": [18, 43, 80], "format_descriptor": 18, "descriptor": [18, 20, 41], "record": 18, "demand": 18, "mirror": [18, 61, 439], "items": 18, "ndim": 18, "shape": [18, 55, 56, 57, 60, 61, 62, 68, 70, 74, 75, 79, 131, 139, 155, 180, 181, 186, 194, 240, 272, 295, 298, 302, 303, 304, 335, 336, 337, 338, 396, 404, 409, 416, 423, 433, 434, 435, 438, 439], "configur": [18, 29, 31, 41, 42, 43, 45, 53, 58, 62, 65, 66, 71, 74, 84, 86, 88, 92, 94, 96, 102, 103, 105, 108, 109, 112, 115, 116, 117, 118, 119, 120, 121, 122, 131, 135, 137, 141, 143, 145, 147, 151, 153, 154, 158, 159, 161, 163, 165, 166, 169, 175, 177, 178, 182, 185, 190, 191, 193, 194, 195, 199, 208, 209, 211, 213, 219, 220, 221, 222, 223, 224, 227, 233, 235, 237, 238, 240, 242, 243, 245, 247, 250, 258, 259, 262, 263, 269, 270, 272, 276, 280, 281, 284, 286, 291, 293, 294, 296, 297, 301, 309, 310, 313, 315, 322, 326, 327, 328, 331, 332, 333, 335, 344, 346, 348, 352, 353, 355, 357, 358, 360, 362, 364, 365, 369, 372, 374, 380, 384, 385, 387, 389, 391, 398, 412, 419, 421, 425, 427, 428, 436], "safeti": [18, 20, 41, 42, 46], "rowmajorbit": 18, "info": [18, 26, 50, 52, 55, 56, 57, 58, 59, 60, 61, 433, 434, 435, 436, 437, 438, 439], "test_buff": 18, "restrict": [18, 26, 27, 42, 43, 74], "satisfi": [18, 41, 59, 61, 437, 439], "array_t": [18, 19], "guarante": [18, 26, 42, 43], "pack": [18, 29, 68, 414, 416], "furthermor": 18, "column": [18, 26, 59, 79, 80, 437], "fortran": 18, "c_style": 18, "f_style": 18, "forcecast": 18, "axi": [18, 26, 31, 39, 75, 337], "writabl": 18, "offset_at": 18, "offset": [18, 26, 43, 47], "squeez": [18, 55, 56, 57, 58, 60, 400, 433, 434, 435, 436, 438], "ax": 18, "resiz": [18, 26, 41], "index_at": 18, "pybind11_numpy_dtyp": 18, "field": [18, 29, 44, 47, 79], "z": [18, 30, 41, 42, 43, 44, 45, 47, 61, 74, 75, 79, 439], "arithmet": [18, 75], "substructur": 18, "unsupport": [18, 43, 53], "violat": [18, 41], "invari": 18, "my_func": 18, "vectorized_func": 18, "loop": [18, 30], "crunch": 18, "tight": 18, "replic": [18, 20, 26, 75], "int64": 18, "int32": [18, 58, 115, 116, 117, 118, 119, 120, 436], "float32": [18, 19, 55, 60, 70, 74, 79, 80, 433, 438, 440], "pod": 18, "add_arrai": 18, "input1": 18, "input2": 18, "buf1": 18, "buf2": 18, "buf3": 18, "ptr1": 18, "ptr2": 18, "ptr3": 18, "idx": 18, "test_numpy_vector": 18, "uncheck": 18, "proxi": [18, 19, 41, 42, 43], "mutable_uncheck": 18, "sum_3d": 18, "sum": [18, 26, 62, 69, 75, 171, 227, 284], "k": [18, 26, 56, 75, 272, 307, 401, 406, 407, 408, 434], "increment_3d": 18, "Will": [18, 400], "arr_t": 18, "arr": [18, 19], "less": [18, 26, 41, 43, 47, 68, 75, 77, 79, 231, 232, 267, 268, 440], "optimiz": 18, "loss": [18, 62, 227, 284], "drop": [18, 30, 41, 43, 79], "mutable_data": 18, "total": [18, 26, 41, 43, 75, 79], "product": [18, 26, 272, 406, 407, 408], "nbyte": 18, "test_numpy_arrai": 18, "multidimension": [18, 26], "middl": 18, "tensor": [18, 26, 57, 58, 60, 61, 62, 66, 67, 68, 70, 73, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 427, 435, 436, 438, 439], "accessor": [18, 26], "concret": [18, 26, 68], "memoryview": 18, "2x4": 18, "get_memoryview2d": 18, "from_buff": 18, "from_memori": 18, "get_memoryview1d": 18, "bool_": 19, "float_": 19, "Be": [19, 425], "dictionari": [19, 70], "bring": [19, 41, 47, 52], "spam": 19, "egg": 19, "tup": 19, "simplenamespac": 19, "delattr": 19, "getattr": 19, "setattr": 19, "stand": 19, "ins": 19, "environ": [19, 24, 26, 30, 38, 39, 45, 51, 57, 58, 59, 61, 65, 66, 75, 76, 77, 435, 436, 437, 439, 440], "decim": [19, 41, 43, 47, 307, 340], "__version__": 19, "pi": 19, "14159": 19, "our": [19, 29, 30, 33, 55, 62, 65, 66, 67, 71, 77, 78, 80, 433], "makedir": 19, "result_pi": 19, "1234": [19, 41, 43, 55, 433], "some_inst": 19, "\u03c0": 19, "exp_pi": 19, "unbound": 19, "decimal_exp": 19, "accord": [19, 26, 42, 43, 47, 272, 304, 335], "pep448": 19, "kwargs1": 19, "kwargs2": 19, "test_pytyp": 19, "subtyp": 19, "curdir_ab": 19, "abspath": 19, "curdir": 19, "home": [19, 29, 41, 42, 55, 56, 57, 58, 59, 60, 61, 433, 434, 435, 436, 437, 438, 439], "repr": 19, "rich": [19, 42, 59, 437], "env": [19, 39, 58, 59, 60, 61, 436, 437, 438, 439], "my_wrapp": 19, "tempt": 19, "best": [19, 30, 42, 55, 70, 433], "wors": 19, "stdout": [20, 41, 42, 440], "sep": 20, "flush": [20, 41], "cerr": 20, "plai": 20, "stderr": 20, "feasibl": 20, "noisi": 20, "noisy_func": 20, "scoped_ostream_redirect": 20, "call_noisy_func": 20, "NOT": [20, 27, 33, 55, 56, 57, 58, 60, 75, 433, 434, 435, 436, 438], "race": 20, "overflow": [20, 41, 42, 43, 46], "protect": [20, 43], "mutex": 20, "helpappreci": 20, "background": 20, "pr": [20, 51, 78], "2982": [20, 41], "2995": [20, 41], "jupyt": [20, 59, 76, 425, 437], "notebook": [20, 59, 61, 76, 425, 437, 439], "scoped_estream_redirect": 20, "call_noisy_funct": 20, "add_ostream_redirect": 20, "ostream_redirect": 20, "noisy_funct": 20, "fprintf": [20, 41, 42, 43, 44], "dup2": 20, "__main__": [20, 59, 72, 437], "isol": 20, "my_vari": 20, "disk": [20, 440], "delimit": [20, 41], "get_answ": 20, "bye": 20, "eval_expr": 20, "eval_single_stat": 20, "eval_stat": 20, "shortcut": 20, "create_exampl": 21, "word": [21, 26, 47, 153], "illeg": 21, "do_something_with_exampl": 21, "denot": [21, 31, 75, 216], "switch": [21, 32, 41, 43, 44, 47, 62, 365], "codebas": [21, 42, 43, 46, 77], "stumbl": 21, "guess": 21, "child": 21, "make_shar": 21, "get_child": 21, "hint": [21, 34, 425], "claim": [21, 27, 28, 29, 33], "twice": [21, 79], "enable_shared_from_thi": 21, "cpprefer": [21, 42, 43, 44], "commun": [21, 29, 39, 40, 42, 44, 45, 53, 62], "smartptr": 21, "placehold": [21, 62], "feel": 21, "risk": 21, "believ": 21, "sole": 21, "owner": [21, 40], "holder_help": 21, "getpoint": 21, "test_smart_ptr": 21, "instal": [22, 29, 30, 34, 38, 39, 41, 43, 45, 51, 59, 61, 62, 65, 71, 77, 79, 425, 437, 439], "config": [22, 29, 41, 43, 55, 57, 58, 59, 60, 62, 70, 77, 85, 87, 89, 90, 91, 93, 95, 97, 98, 99, 101, 104, 106, 107, 110, 111, 113, 114, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 136, 138, 142, 144, 146, 148, 152, 153, 154, 156, 160, 162, 164, 167, 168, 170, 171, 174, 176, 179, 183, 188, 192, 197, 200, 201, 202, 203, 204, 205, 206, 207, 210, 212, 214, 215, 216, 217, 218, 227, 229, 230, 231, 234, 236, 239, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 260, 264, 265, 266, 267, 274, 275, 279, 284, 285, 287, 288, 289, 292, 295, 302, 304, 305, 306, 307, 308, 311, 314, 316, 317, 318, 319, 320, 323, 329, 330, 334, 336, 340, 341, 342, 343, 345, 347, 349, 350, 354, 356, 359, 361, 363, 366, 367, 368, 370, 371, 373, 375, 376, 377, 379, 381, 382, 388, 390, 392, 393, 394, 395, 396, 401, 402, 403, 404, 405, 409, 410, 411, 413, 414, 415, 416, 420, 422, 425, 427, 433, 435, 436, 437, 438, 440], "sfpi": 23, "folder": [24, 31, 39, 48, 50, 51, 59, 66, 71, 76, 79, 437], "taskflow": [24, 30, 31], "benchmark": [24, 31, 41, 42, 43, 46], "solver": 25, "algorithm": [25, 30, 41, 42, 43, 75, 417], "tuxfamili": 25, "eigen_tensor": 26, "toc": [26, 46], "data_typ": [26, 57, 74, 435], "rank": [26, 62, 74, 80, 87, 91, 93, 94, 95, 96, 97, 104, 106, 107, 110, 111, 113, 114, 123, 124, 132, 138, 142, 144, 146, 160, 162, 164, 165, 166, 167, 169, 170, 174, 179, 183, 200, 205, 210, 212, 230, 235, 236, 244, 246, 248, 251, 254, 255, 264, 270, 274, 279, 285, 292, 316, 329, 334, 345, 347, 350, 354, 356, 359, 361, 363, 367, 370, 375, 377, 379, 381, 388, 392, 394, 400, 413, 419, 420, 422], "size0": 26, "size1": 26, "24": [26, 41, 42, 43, 47, 59, 61, 437, 439], "t_3d": 26, "size_arrai": 26, "t_2d": 26, "tensorfixeds": 26, "fixeds": 26, "enough": [26, 41, 46], "onto": [26, 29], "heap": 26, "t_4x3": 26, "tensormap": 26, "128": [26, 39, 43, 240, 272, 440], "t_4d": 26, "t_12": 26, "12": [26, 32, 41, 42, 43, 44, 47, 55, 56, 57, 59, 60, 61, 62, 70, 77, 196, 228, 339, 433, 434, 435, 437, 438, 439], "tensorref": 26, "index0": 26, "index1": 26, "l": [26, 39, 41, 43, 44, 47], "0f": [26, 30, 43, 273, 277, 278, 378, 383, 418], "random": [26, 30, 42, 62, 72, 425, 427, 431], "tensorlayout": 26, "colmajor": 26, "moment": [26, 44, 75], "col_major": 26, "row_major": [26, 55, 56, 60, 72, 74, 75, 79, 91, 93, 101, 110, 114, 123, 132, 139, 146, 174, 183, 210, 230, 254, 255, 258, 274, 279, 285, 347, 356, 377, 379, 381, 395, 396, 413, 414, 416, 422, 433, 434, 438], "swap_layout": 26, "col_major_result": 26, "swap": [26, 272], "eigen_assert": 26, "preserv": [26, 41, 43, 44], "shuffl": 26, "vast": 26, "geometri": 26, "elementwis": 26, "wise": [26, 75, 84, 86, 103, 108, 115, 116, 117, 118, 119, 120, 122, 135, 151, 158, 159, 161, 163, 165, 166, 169, 175, 190, 191, 193, 195, 199, 208, 211, 220, 221, 222, 223, 224, 233, 237, 242, 243, 247, 250, 258, 269, 291, 294, 310, 317, 322, 326, 327, 328, 331, 332, 344, 346, 352, 353, 355, 357, 358, 360, 365, 372, 374, 384, 387, 389, 412], "tensorcwisebinaryop": 26, "scalar_sum": 26, "Of": 26, "3f": 26, "approxim": [26, 114, 159, 161, 165, 191, 192, 344], "tree": [26, 31, 42, 43, 45, 48, 425], "tensorcwiseunaryop": 26, "scalar_mul": 26, "intuit": [26, 55, 67, 433], "delai": 26, "unfortun": 26, "space": [26, 34, 42, 47, 75, 80], "reus": [26, 43, 44, 68], "2f": [26, 41, 42, 43, 44, 47], "t5": [26, 59, 437], "control": [26, 30, 41, 42, 43, 44, 45, 55, 66, 75, 433], "4x4x2": 26, "simiarli": 26, "composit": [26, 30, 44, 68], "ahead": [26, 57, 435], "insert": [26, 41, 43, 44, 47, 52, 55, 433], "materi": [26, 45], "huge": 26, "broadcast": [26, 90, 91, 146, 156, 188, 197, 229, 231, 240, 252, 253, 256, 260, 267, 272, 285, 288, 289, 337, 376, 379, 382, 440], "maximum": [26, 47, 55, 56, 57, 58, 62, 69, 75, 101, 127, 207, 274, 433, 434, 435, 436], "depth_dim": 26, "dims2d": 26, "bcast": 26, "beta": [26, 75, 365, 366], "greatli": 26, "speed": [26, 41, 42, 43, 56, 67, 434], "alias": [26, 34, 42, 75], "increment": 26, "bogu": 26, "th": [26, 47], "individu": [26, 30, 41, 47], "themselv": [26, 78, 80], "fly": 26, "at_0": 26, "subset": [26, 41, 43, 46, 80], "faster": [26, 30, 41, 42, 43, 46, 57, 79, 435], "save": [26, 29, 31, 59, 61, 437, 439], "contract": [26, 27, 33], "convolut": [26, 60, 75, 438], "cpu": [26, 30, 32, 43, 59, 61, 62, 65, 72, 73, 74, 75, 79, 437, 439], "gpu": [26, 30, 32, 61, 439], "choos": [26, 29, 77], "sse": 26, "avx": 26, "fma": 26, "ongo": [26, 71], "tune": [26, 78], "arm": [26, 43], "30": [26, 41, 43, 44, 45, 46, 47, 59, 65, 437], "40": [26, 41, 43, 59, 437], "defaultdevic": 26, "threadpooldevic": 26, "gpudevic": 26, "my_devic": 26, "pool": [26, 62, 75, 194, 275], "50": [26, 42, 43, 58, 436], "dot_product_dim": 26, "act": [26, 33], "setconst": 26, "pseudo": 26, "metadata": [26, 59, 61, 437, 439], "numdimens": 26, "constant": [26, 43, 68, 75], "dim": [26, 53, 57, 61, 62, 73, 74, 75, 80, 101, 131, 132, 139, 190, 195, 216, 273, 275, 277, 278, 304, 313, 314, 326, 337, 364, 371, 378, 383, 384, 401, 409, 418, 435, 439], "dim1": 26, "tensorreslicingop": 26, "defer": 26, "idiom": 26, "equal": [26, 75, 156, 157, 188, 189, 231, 232, 289, 290, 440], "numrow": 26, "numcol": 26, "accommod": [26, 42], "val": [26, 50], "chain": [26, 31], "yolo": 26, "setzero": 26, "fill": [26, 29, 41, 42, 43, 44, 47, 75, 79, 171, 173, 174, 335], "setvalu": 26, "deepli": 26, "1000": [26, 41, 60, 61, 79, 438, 439], "setrandom": 26, "680375": 26, "59688": 26, "329554": 26, "10794": 26, "211234": 26, "823295": 26, "536459": 26, "0452059": 26, "566198": 26, "604897": 26, "444451": 26, "257742": 26, "myrandomgener": 26, "uniformrandomgener": 26, "tensorfunctor": 26, "element_loc": 26, "denseindex": 26, "unus": [26, 41, 44], "randomli": 26, "packet_trait": 26, "packetop": 26, "packet_loc": 26, "packet": 26, "normalrandomgener": 26, "numindic": 26, "firstindex": 26, "indextyp": 26, "otherindic": 26, "moreov": 26, "a_data": 26, "45f": 26, "45": [26, 43, 59, 437], "lazili": 26, "subtract": [26, 62, 65, 69, 346, 347, 379, 409, 440], "68038": 26, "5662": 26, "82329": 26, "788766": 26, "395103": 26, "unari": [26, 62, 68, 318], "sqrt": [26, 62, 69, 75], "root": [26, 29, 45, 48, 66, 373, 402, 403], "rsqrt": [26, 62, 69, 345], "invers": [26, 87, 89], "exponenti": [26, 168], "logarithm": [26, 249], "ab": [26, 62, 69, 85], "expon": [26, 43, 47, 72, 310, 311, 342, 343], "conjunt": 26, "lift": 26, "cubic": 26, "27": [26, 30, 41, 43, 59, 61, 77, 437, 439], "125": [26, 43], "cwisemax": 26, "threshold": [26, 55, 56, 57, 58, 62, 69, 365, 366, 394, 433, 434, 435, 436], "todo": [26, 52, 56, 434], "cwisemin": 26, "unaryexpr": 26, "customunaryop": 26, "otherderiv": 26, "quotient": 26, "mimimum": 26, "thenderiv": 26, "thentensor": 26, "elsederiv": 26, "elsetensor": 26, "ternari": [26, 62], "indexpair": 26, "product_dim": 26, "transposed_product_dim": 26, "atbt": 26, "coordin": [26, 80], "double_contraction_product_dim": 26, "adoublecontracteda": 26, "fewer": [26, 75], "predefin": 26, "reductor": 26, "tensortyp": 26, "13": [26, 42, 43, 55, 56, 57, 59, 61, 62, 433, 434, 435, 437, 439], "19": [26, 41, 42, 43, 46, 47, 57, 59, 61, 435, 437, 439], "21": [26, 41, 43, 59, 61, 437, 439], "22": [26, 41, 43, 47, 59, 437], "23": [26, 41, 42, 43, 59, 437], "276": [26, 43], "new_dim": 26, "largest": [26, 75, 401], "smallest": [26, 75, 401], "prod": [26, 62, 69, 139, 314], "circuit": 26, "ineffici": 26, "sumreduc": 26, "scan": [26, 43], "summat": 26, "prefix": [26, 29, 43, 44, 47, 282, 283], "dd": 26, "cumsum": 26, "consecut": [26, 80], "cumprod": 26, "convolv": [26, 75], "kernel": [26, 30, 35, 36, 37, 52, 53, 56, 68, 75, 77, 79, 240, 272, 275, 364, 434], "formula": [26, 125, 152, 178, 201, 234, 266, 366, 368], "output_dim_s": 26, "input_dim_s": 26, "kernel_dim_s": 26, "shortest": [26, 41, 43], "datalayout": 26, "ptrdiff_t": 26, "verify_is_approx": 26, "geometr": 26, "pad": [26, 41, 42, 47, 55, 60, 62, 69, 72, 73, 74, 75, 80, 129, 153, 173, 180, 275, 303, 396, 398, 415, 433, 438], "three_dim": 26, "merg": [26, 27, 39, 43, 65, 78], "one_dim": 26, "100": [26, 30, 41, 42, 43, 47, 58, 59, 436, 437], "200": [26, 43], "300": 26, "400": [26, 43], "500": [26, 43], "rewritten": [26, 70], "two_dim": 26, "reorder": 26, "permut": [26, 57, 60, 62, 69, 409, 435, 438], "accordingli": [26, 29], "formul": 26, "rewrit": [26, 62], "ceil": [26, 62, 69, 73, 75, 123], "input_dimens": 26, "600": [26, 59, 437], "700": 26, "800": [26, 43, 55, 56, 57, 58, 433, 434, 435, 436], "900": 26, "1100": 26, "90": [26, 42, 43, 59, 60, 437, 438], "startindic": 26, "extent": 26, "sub": [26, 43, 66, 67, 75], "chip": [26, 50, 53], "subtensor": 26, "row_3": 26, "col_2": 26, "reversedimens": 26, "concaten": [26, 41, 75, 131, 132, 404, 409], "paddingdimens": 26, "make_pair": 26, "extract_patch": 26, "patchdim": 26, "patch_dim": 26, "patch": [26, 28, 40, 272], "six": [26, 59, 437], "2x2": [26, 39, 80], "extract_image_patch": 26, "patch_row": 26, "patch_col": 26, "row_strid": 26, "col_strid": 26, "paddingtyp": 26, "padding_typ": 26, "imag": [26, 30, 31, 34, 41, 42, 43, 52, 61, 62, 69, 71, 75, 79, 80, 217, 305, 439], "1st": 26, "channel": [26, 50, 64, 75, 79, 149, 172, 173, 194, 417], "2nd": 26, "3rd": 26, "4th": 26, "nth": 26, "video": 26, "batch": [26, 65, 74, 75, 79, 149, 172, 173, 216, 240, 272, 407, 408], "bulk": 26, "depth": [26, 59, 437], "tensor_row_major": 26, "twod_patch": 26, "twod_patch_row_major": 26, "divis": [26, 47, 74, 75, 80, 317], "0d": 26, "250": [26, 41, 43, 60, 61, 438, 439], "cxx11": 26, "indexlist": 26, "compliant": 26, "eigen_static_assert": 26, "packets": 26, "you_made_a_programming_mistak": 26, "copyright": [27, 33], "2012": [27, 41, 43, 44], "victor": [27, 42], "zverovich": [27, 42, 43], "permiss": [27, 31, 42, 46, 64], "herebi": 27, "grant": 27, "person": 27, "publish": [27, 29, 33, 45], "sublicens": 27, "sell": [27, 33], "whom": 27, "furnish": 27, "notic": [27, 44, 52], "shall": [27, 33], "substanti": [27, 41], "THE": [27, 33], "AS": [27, 33, 43], "warranti": [27, 33], "OF": [27, 33], "OR": [27, 33, 75, 260, 261], "BUT": [27, 33], "TO": [27, 33], "merchant": [27, 33], "fit": [27, 33, 337], "FOR": [27, 33], "AND": [27, 33, 75, 256, 257], "noninfring": [27, 33], "IN": [27, 33], "NO": [27, 33], "author": [27, 33, 42, 71], "BE": [27, 33], "liabl": [27, 33], "damag": [27, 33], "liabil": [27, 33], "action": [27, 30, 33, 42, 43, 55, 433], "tort": [27, 33], "connect": [27, 33, 39, 75], "WITH": [27, 33], "licens": [27, 28, 30, 40, 42, 43, 46, 68, 440], "machin": [27, 39, 42, 61, 72, 74, 75, 79, 425, 439], "form": [27, 33, 43, 44, 47, 149, 417], "redistribut": 27, "2020": [28, 41, 42, 43, 44, 59, 437], "stabl": [28, 45, 67], "img": [28, 30, 41, 42, 46], "shield": [28, 42], "badg": [28, 30, 42], "green": [28, 41, 44], "svg": [28, 30, 31, 34, 42, 46, 60, 61, 282, 438, 439, 440], "tbb": [28, 31], "v2020": 28, "apach": [28, 41, 68, 440], "apache_2": 28, "multicor": [28, 68, 395, 396, 414, 416], "compos": [28, 30, 75, 194], "futur": [28, 30, 33, 40, 41, 52, 53], "proof": 28, "scalabl": [28, 29, 42], "release_not": 28, "2018": [28, 30, 41, 43], "u5": 28, "2018_u5": 28, "packag": [28, 41, 43, 45, 58, 59, 61, 77, 436, 437, 439], "parallelstl": 28, "high": [28, 42, 47, 53, 126, 128, 172, 173, 440], "compon": [28, 29, 43, 44, 46, 47, 59, 437], "en": [28, 42, 43, 44, 45], "asset": [28, 32, 41, 42, 43, 77], "suggest": [28, 38, 43, 51, 65], "topic": [28, 52], "forum": [28, 29], "contribut": [28, 42, 62, 64, 76, 77], "pull": [28, 30, 40, 41, 43, 45, 77, 78], "mail": [28, 29], "submit": [28, 30, 40, 42, 78], "engin": [28, 30, 42], "team": [28, 42, 45], "contact": [28, 63], "mailto": [28, 30, 42], "inteltbbdevelop": [28, 29], "brand": [28, 29], "u7": 29, "tbb_root": 29, "iso": [29, 47], "promot": [29, 75], "task": [29, 30, 31, 42], "emploi": 29, "flexibl": [29, 75], "net": [29, 42, 43], "far": [29, 49, 50, 52], "offici": [29, 64], "site": [29, 39, 58, 59, 61, 436, 437, 439], "interest": [29, 33, 42], "hope": [29, 42], "feedback": [29, 30], "pre": [29, 43, 46, 47, 59, 62, 68, 77, 325, 425, 426, 428, 437], "01org": 29, "download": [29, 32, 45, 58, 59, 62, 77, 425, 426, 436, 437], "clone": [29, 30, 42, 45, 55, 56, 57, 58, 62, 69, 77, 213, 409, 425, 426, 433, 434, 435, 436], "git": [29, 30, 42, 45, 59, 62, 77, 282, 283, 425, 426, 437], "four": [29, 30, 47, 75], "tbb_dir": 29, "cmake_prefix_path": 29, "tbb_get": 29, "config_dir": 29, "tbb_build": 29, "source_cod": 29, "slight": 29, "precondit": 29, "higher": [29, 34, 77, 79, 80, 365], "demo_tbb_cmak": 29, "oss": [29, 42, 43], "gettingstart": 29, "cmakelist": [29, 45], "fatal_error": 29, "cxx": [29, 41, 45, 49], "search": [29, 42, 43, 62], "tbb_imported_target": 29, "button": 29, "brows": 29, "push": [29, 39, 41, 51], "sln": 29, "mkdir": [29, 31, 45, 49], "cd": [29, 31, 39, 42, 45, 49, 51, 59, 77, 79, 437], "cpf": 29, "make_arg": 29, "tbb_cpf": 29, "tbb_preview": 29, "prepar": [29, 59, 66, 71, 437], "makefil": [29, 38, 42, 45], "dtbb_root": 29, "tbbmalloc": 29, "tbbmalloc_proxi": 29, "tbb_find_release_onli": 29, "simultan": [29, 78], "linkag": [29, 41, 42, 43], "tbb_found": 29, "tbb_": 29, "_found": 29, "tbb_version": 29, "tbb_interface_vers": 29, "tbbconfigvers": 29, "tbb_install_config": 29, "install_dir": 29, "system_nam": 29, "darwin": 29, "tbb_version_fil": 29, "version_fil": 29, "lib_rel_path": 29, "inc_rel_path": 29, "lib_path": 29, "inc_path": 29, "overwrit": 29, "tbb_config_instal": 29, "maintain": [29, 38, 42, 43, 65, 78], "tbb_stddef": 29, "lib": [29, 39, 42, 45, 58, 59, 61, 62, 66, 73, 436, 437, 439], "bin_rel_path": 29, "dll": [29, 43], "bin": [29, 39, 47, 49, 59, 66, 77, 437], "dinstall_dir": 29, "dsystem_nam": 29, "dtbb_version_fil": 29, "bin_path": 29, "usr": [29, 39], "dlib_path": 29, "dinc_path": 29, "release_tag": 29, "save_to": 29, "notfound": 29, "unsuccess": 29, "2017_u6": 29, "cmake_current_binary_dir": 29, "tbb_download": 29, "cmake_system_nam": 29, "tbb_make_config": 29, "custom_make_argu": 29, "redefin": 29, "tbb_build_dir": 29, "tbb_build_prefix": 29, "logo": [29, 30], "trademark": 29, "corpor": 29, "subsidiari": 29, "countri": 29, "align": [30, 41, 42, 43, 44, 47, 74, 75, 79], "width": [30, 41, 42, 43, 44, 47, 53, 75, 79, 129, 139, 172, 173, 194, 272, 275, 396, 398, 404], "taskflow_logo": 30, "png": [30, 31, 32, 34, 41, 42, 43, 52, 61, 439], "linux": [30, 42, 43, 45, 46, 49, 59, 437], "travi": 30, "branch": [30, 44, 78], "master": [30, 34, 42, 43, 45], "ubuntu": [30, 38, 43, 45, 49, 55, 56, 57, 58, 59, 60, 61, 77, 433, 434, 435, 436, 437, 438, 439], "workflow": [30, 42, 45], "3aubuntu": 30, "3amaco": [30, 42], "3awindow": [30, 42], "tfprof": 30, "cite": [30, 42], "tpd": 30, "tpds22": 30, "quickli": 30, "heterogen": 30, "framework": [30, 31, 42], "workload": [30, 76], "decomposit": 30, "strategi": [30, 42, 59, 74, 75, 79, 80, 139, 272, 437], "incorpor": [30, 71], "irregular": 30, "togeth": [30, 43, 75], "steal": 30, "schedul": [30, 71], "multithread": 30, "subflow": 30, "static_graph": 30, "dynamic_graph": 30, "rapid": 30, "flow": [30, 31, 38, 77, 79], "decis": 30, "difficult": 30, "modular": 30, "reusabl": 30, "acceler": [30, 56, 59, 62, 73, 74, 75, 395, 396, 414, 416, 434, 437], "har": 30, "collabor": 30, "offload": 30, "cudaflow": 30, "profil": [30, 32, 39, 50, 51, 62, 65, 73, 213, 351, 425, 440], "commit": [30, 59, 71, 437], "trustworthi": 30, "academ": 30, "industri": 30, "research": [30, 42, 61, 439], "tag_us": 30, "cleanest": 30, "ve": 30, "damien": 30, "hock": 30, "corelium": 30, "inc": [30, 68, 440], "coreliuminc": 30, "eleg": 30, "glen": 30, "fraser": 30, "totalge": 30, "me": [30, 42, 47], "hayabusa": 30, "learn": [30, 42, 46, 56, 59, 76, 80, 434, 437], "throughput": [30, 65], "hour": [30, 41, 47], "jean": 30, "micha\u00ebl": 30, "kdab": 30, "ossia": 30, "poster": 30, "award": 30, "confer": 30, "prize": 30, "competit": 30, "acm": 30, "multimedia": 30, "2019": [30, 41, 43, 59, 61, 437, 439], "tsung": 30, "wei": 30, "huang": 30, "mm19": 30, "ossc": 30, "jpg": [30, 43], "ieee": [30, 42, 43], "paper": [30, 41, 75], "tpds21": 30, "finish": [30, 59, 75, 79, 437], "live": [30, 48, 52], "explor": [30, 42, 45, 62], "godbolt": [30, 41, 42, 43, 44, 45, 46], "j8hx3xnnx": 30, "tf": [30, 31], "executor": 30, "emplac": 30, "taskan": 30, "taskbn": 30, "taskcn": 30, "taskdn": 30, "wait": [30, 75, 79, 386], "wrangl": 30, "bash": [30, 31, 39, 52, 59, 437], "o2": [30, 43], "pthread": [30, 43], "taska": 30, "taskc": 30, "taskb": 30, "taskd": 30, "web": [30, 62], "doxygen": [30, 45, 77], "tf_enable_profil": 30, "json": [30, 41, 46, 47, 59, 437, 440], "worker": [30, 57, 58, 74, 398, 435, 436], "span": 30, "172": 30, "186": [30, 43], "0_0": 30, "187": [30, 43], "189": [30, 43], "0_1": 30, "93": [30, 43, 59, 60, 437, 438], "164": [30, 43, 59, 437], "2_0": 30, "170": [30, 43], "179": [30, 43], "2_1": 30, "past": 30, "diagram": [30, 39], "dot": [30, 272, 406, 407, 408], "graphviz": [30, 59, 77, 437], "center": [30, 47, 75], "empow": 30, "launch": [30, 75, 425], "leverag": [30, 75, 272], "spawn": 30, "b1": 30, "b2": 30, "b3": 30, "subflow_join": 30, "cond": 30, "rand": [30, 55, 58, 60, 153, 337, 433, 436, 438, 440], "__global__": 30, "saxpi": 30, "alpha": [30, 34, 92, 93, 95, 97, 124, 125, 146, 151, 152, 285, 349, 380, 381], "dx": [30, 43], "dy": 30, "blockidx": 30, "blockdim": 30, "threadidx": 30, "cf": 30, "cudatask": 30, "h2d_x": 30, "hx": 30, "h2d_y": 30, "hy": 30, "d2h_x": 30, "d2h_y": 30, "255": [30, 43, 60, 438], "256": [30, 43, 60, 61, 438, 439], "saxpy_1_cudaflow": 30, "f1": 30, "f2": 30, "f1a": 30, "f1an": 30, "f1b": 30, "f1bn": 30, "f2a": 30, "f2an": 30, "f2b": 30, "f2bn": 30, "f2c": 30, "f2cn": 30, "f1_module_task": 30, "composed_of": 30, "async": [30, 59, 437], "1n": 30, "silent_async": 30, "returnn": 30, "asynctask": 30, "silent_dependent_async": 30, "printf": [30, 41, 42, 43, 44, 46, 47], "bn": 30, "cn": 30, "dn": 30, "wait_for_al": 30, "criteria": 30, "met": 30, "run_onc": 30, "run_n": 30, "run_until": 30, "counter": 30, "sort": [30, 401], "task1": 30, "for_each": 30, "task2": 30, "task3": 30, "cuda1": 30, "dfirst": 30, "dlast": 30, "__device__": 30, "cuda2": 30, "cuda3": 30, "pipelin": [30, 71, 79], "token": [30, 59, 153, 226, 405, 407, 437], "stage": 30, "pl": [30, 32], "num_parallel_lin": 30, "pipe": [30, 43], "pipetyp": 30, "pipeflow": 30, "pf": 30, "zu": 30, "gnu": [30, 42, 43], "v8": 30, "v6": [30, 43], "v19": 30, "appleclang": 30, "xode": 30, "v12": 30, "toolkit": [30, 59, 437], "v11": 30, "dpc": 30, "v13": 30, "sycl20": 30, "mac": [30, 49, 55, 56, 57, 58, 62, 69, 433, 434, 435, 436], "websit": 30, "newest": 30, "cookbook": 30, "watch": [30, 32, 59, 437], "talk": 30, "youtub": [30, 32], "cppcon20": 30, "tech": [30, 42], "muc": 30, "u8mc_wggwvi": 30, "thumbnail": 30, "publis": 30, "2021": [30, 41], "dian": 30, "lun": 30, "lin": 30, "chun": 30, "xun": 30, "yibo": 30, "quot": [30, 43, 47], "transact": [30, 42], "vol": 30, "33": [30, 41, 56, 59, 74, 434, 437], "pp": 30, "1303": 30, "1320": [30, 43], "june": 30, "2022": [30, 41], "appreci": 30, "contributor": [30, 42, 45, 46, 68], "organ": [30, 71, 80, 129, 398], "sponsor": [30, 32], "utah": 30, "ec": [30, 47], "nsf": 30, "darpa": 30, "numfocu": 30, "mit": [30, 42, 43, 46], "insight": 30, "puls": 30, "mx15hup5dsm": 30, "gov": 30, "uiuc": 30, "illinoi": 30, "edu": [30, 42, 43], "csl": 30, "uofu": 30, "paym": 30, "paypal": 30, "twhuang": 30, "email": [30, 42, 59, 437], "twh760812": 30, "gmail": [30, 42], "cppcon": [30, 32], "cppcon2018": 30, "openmp": 31, "flowgraph": 31, "tf_build_benchmark": 31, "dtf_build_benchmark": 31, "ON": [31, 41], "successfulli": [31, 59, 61, 71, 425, 437, 439], "traver": 31, "graph_travers": 31, "travers": [31, 139], "acycl": 31, "wavefront": 31, "grid": [31, 39, 52, 70, 80, 240, 272, 406, 407, 408], "linear_chain": 31, "binary_tre": 31, "matrix_multipl": 31, "mnist": 31, "train": [31, 62, 75, 425, 426], "neural": 31, "classfier": 31, "dataset": [31, 42, 59, 437], "averag": [31, 59, 75, 79, 194, 437], "plot": 31, "chmod": [31, 77], "755": 31, "omp": 31, "ten": [31, 41, 46], "growth": [31, 43], "millisecond": [31, 41], "spec": [31, 43, 47, 75, 139], "openmpsu99": 31, "threadingbuildingblock": 31, "traci": 32, "wolfpld": 32, "nanosecond": [32, 42, 79], "remot": [32, 43, 415], "telemetri": 32, "hybrid": 32, "sampl": [32, 62, 75, 425, 426], "game": [32, 42], "lua": 32, "internet": 32, "rust": 32, "nagisa": 32, "rust_tracy_cli": 32, "zig": 32, "nektro": 32, "clibequilibrium": 32, "csharp": 32, "ocaml": 32, "imandra": 32, "ai": [32, 55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "odin": 32, "oskarnp": 32, "graphic": 32, "opengl": 32, "vulkan": 32, "direct3d": 32, "opencl": 32, "screenshot": [32, 43], "x64": [32, 34], "7z": 32, "changelog": [32, 41, 43], "nereid": 32, "profiler2": 32, "profiler3": 32, "introduct": 32, "marco": 32, "slomp": 32, "2023": [32, 41, 42, 59, 61, 68, 437, 439], "youtu": 32, "ghxk3bk5f2u": 32, "37": [32, 59, 437], "v0": 32, "fb5b46lbapc": 32, "3sxpdpdh2uo": 32, "eakgkao8b9o": 32, "p6e7qlmmztq": 32, "ujkrfgriuoo": 32, "_hu7vw00mz4": 32, "30wprphttag": 32, "unencumb": 33, "domain": 33, "anyon": 33, "commerci": 33, "jurisdict": 33, "recogn": [33, 44], "law": 33, "detriment": 33, "heir": 33, "successor": 33, "overt": 33, "relinquish": 33, "perpetu": 33, "unlicens": 33, "imgui_freetyp": 34, "atlas": 34, "freetyp": 34, "stb_truetyp": 34, "raster": 34, "br": 34, "vuhdo": 34, "mikesart": 34, "ocornut": 34, "yourself": [34, 44], "vcpkg": [34, 41, 45], "triplet": 34, "alongsid": 34, "imgui_enable_freetyp": 34, "imconfig": 34, "imgui": 34, "blob": [34, 42, 43, 45, 61, 77, 439], "gamma": [34, 75], "blend": 34, "ft_render_glyph": 34, "freetype2": 34, "ft2": 34, "glyph_retriev": 34, "srgb": 34, "pixel": [34, 42, 75], "shader": 34, "dear": 34, "impact": [34, 71], "tweak": [34, 42], "testb": 34, "toi": 34, "gist": 34, "b3a9ecf13502fd818799a452969649ad": 34, "oversampl": 34, "qualiti": 34, "comparison": [34, 43, 47, 78], "anti": [34, 75], "comparing_font_raster": 34, "githubusercont": [34, 41, 42, 43, 77], "8225057": 34, "107550178": 34, "fef87f00": 34, "6bd0": 34, "11eb": [34, 41, 42, 43], "8d09": 34, "e2edb2f0ccfc": 34, "gif": 34, "color": [34, 41, 42, 43, 44], "glyph": 34, "imguifreetypebuilderflags_loadcolor": 34, "md": [34, 41, 43, 44, 47, 66, 71], "glyphsemoji": 34, "106171241": 34, "9dc4ba80": 34, "6191": 34, "8a69": 34, "ca1467b206d1": 34, "opentyp": 34, "svginot": 34, "adob": 34, "mozilla": 34, "creator": 34, "twemoji": 34, "13rac1": 34, "scfbuild": 34, "lunasvg": 34, "sammycag": 34, "imgui_enable_freetype_lunasvg": 34, "llk": [35, 36, 37], "bh": 35, "tenstorr": [35, 36, 37, 39, 52, 53, 55, 56, 61, 64, 67, 68, 70, 71, 76, 77, 425, 433, 434, 439, 440], "tensix": [35, 36, 37, 39, 79], "blackhol": [35, 77], "grayskul": [36, 38, 39, 57, 58, 65, 68, 70, 77, 102, 281, 340, 412, 425, 426, 429, 430, 435, 436, 440], "wh": [37, 79], "b0": 37, "wormhol": [37, 68, 70, 77, 102, 425, 440], "umd": [38, 39], "sudo": [38, 43, 45, 77, 79], "apt": [38, 43, 45, 77], "libhwloc": [38, 77], "dev": [38, 41, 42, 43, 45, 51, 59, 77, 437], "arch_nam": [38, 39, 57, 58, 77, 435, 436], "wormhole_b0": [38, 77, 115, 116, 117, 118, 119, 120, 122, 175, 264, 317], "libdevic": 38, "ninja": [38, 77], "umd_devic": 38, "umd_test": 38, "submodul": [38, 77, 282, 283], "wheverev": 38, "tt_metal": [38, 50, 51, 59, 68, 75, 77, 79, 437], "libyaml": 38, "libgtest": 38, "libboost": 38, "gtest": 38, "clean": [38, 42], "zebu": 39, "ep1": 39, "hw": [39, 75, 173], "rtl": 39, "board": [39, 52, 64, 77], "fpga": 39, "pc": 39, "tt_emulation_devic": 39, "implemen": 39, "reset": [39, 79], "deassert": 39, "libtt_zebu_wrapp": 39, "tensix_emulation_root": 39, "proj_soc": 39, "mlausin": 39, "emu_buda": 39, "ws_buda_1": 39, "tensix_emulation_target": 39, "tensix_2x2_1dram_bh": 39, "zcui": 39, "dram": [39, 50, 53, 55, 68, 74, 75, 80, 399, 433], "endpoint": 39, "readm": [39, 41, 46, 50, 59, 61, 66, 71, 437, 439], "yyz": [39, 52], "gitlab": [39, 52], "tensix_emul": 39, "setup": [39, 59, 61, 71, 76, 77, 437, 439], "austin": 39, "sw": 39, "au": 39, "rv": 39, "03": [39, 43, 44, 47, 59, 60, 437, 438], "emulation_rocky8": 39, "apptain": 39, "sif": 39, "shell": 39, "tools_soc": 39, "tools_vendor": 39, "lsf": 39, "emu": 39, "bashrc": 39, "apptainer_nam": 39, "echo": 39, "budabackend": 39, "conf": [39, 59, 437], "bsub": 39, "opt": [39, 43, 46], "rh": 39, "toolset": 39, "ld_library_path": 39, "emulation_device_en": 39, "test_emulation_devic": 39, "reserv": [39, 43, 79], "q": [39, 42, 43, 47, 52, 406, 407, 408], "rusag": 39, "ep1_modul": 39, "00": [39, 41, 43, 44, 47, 55, 56, 57, 58, 59, 60, 61, 433, 434, 435, 436, 437, 438, 439], "ep1_m0": 39, "ep1_m1": 39, "ep1_m2": 39, "ep1_m3": 39, "enter": [39, 52], "zebu_physical_loc": 39, "u0": 39, "m0": 39, "m3": 39, "waveform": 39, "postprocess": [39, 68], "viewd": 39, "verdi": 39, "wave": 39, "conv": [39, 60, 149, 438], "vnc": 39, "curent": 39, "endpoin": 39, "noc": 39, "port": [39, 425], "noc0": 39, "noc1": 39, "crossbar": 39, "trafic": 39, "axi2noc": 39, "write_to": 39, "read_from": 39, "drive": 39, "x0": 39, "x1": 39, "y1": 39, "y0": 39, "tt_emu_axi_xtor": 39, "xbar": 39, "xtor": 39, "mem": 39, "loader": [39, 59, 437], "test_pybuda_ram": 39, "j32": 39, "rundir_zebu": 39, "arch": [39, 43], "netlist": 39, "net_bas": 39, "ram": 39, "yaml": 39, "desc": 39, "emulation_1x1_arch": 39, "num": [39, 409], "tee": 39, "adher": 40, "styleguid": 40, "cppguid": 40, "snake_cas": 40, "uppercamelcas": 40, "2024": [41, 55, 56, 57, 58, 59, 60, 61, 433, 434, 435, 436, 437, 438, 439, 440], "07": [41, 43, 44, 55, 56, 57, 58, 60, 433, 434, 435, 436, 438], "05": [41, 43, 61, 65, 75, 439], "inlin": [41, 43, 44, 59, 437], "fmtlib": [41, 42, 43, 45, 46], "4047": 41, "4051": 41, "visit_format_arg": [41, 43], "4043": 41, "nebkat": 41, "sign": [41, 43, 47, 62, 69, 75, 356], "4034": [41, 74], "4050": 41, "tesch1": 41, "phpru": 41, "formatt": [41, 42, 43, 44, 46, 47], "4040": 41, "01": [41, 43, 47, 234], "closer": 41, "25": [41, 42, 43, 59, 61, 79, 398, 437, 439], "tinyformat": [41, 42], "29": [41, 42, 43, 59, 65, 437], "55": [41, 42, 43, 47, 57, 59, 435, 437], "partli": 41, "tu": 41, "anywai": 41, "spent": [41, 79], "type_trait": [41, 44], "roughli": 41, "old": [41, 43], "migrat": [41, 42, 43, 55, 56, 57, 58, 60, 71, 433, 434, 435, 436, 438, 440], "sphinx": [41, 43, 59, 437], "mkdoc": [41, 45], "3990": 41, "3991": 41, "3993": 41, "3994": 41, "3997": 41, "3998": 41, "4004": 41, "4005": 41, "4006": 41, "4013": 41, "4027": 41, "4029": 41, "yujincheng08": 41, "matt77hia": 41, "fmt_import_std": 41, "3921": 41, "3928": 41, "range_format": 41, "range_format_kind": 41, "compiled_str": 41, "3970": [41, 74], "3999": 41, "stdio": [41, 42], "percent": [41, 46], "2x": 41, "stackoverflow": [41, 42], "78457454": 41, "471164": 41, "wider": 41, "isocpp": 41, "p3107r5": 41, "perf": [41, 46, 55, 56, 57, 58, 59, 60, 62, 433, 434, 435, 436, 437, 438], "1500": [41, 42], "81": [41, 59, 437], "8496899": 41, "63": [41, 59, 74, 437], "61": [41, 59, 437], "11524151": 41, "51": [41, 43, 58, 65, 436], "13846580": 41, "format_to": [41, 42, 43, 44], "3805": 41, "cyrn8dwy8": 41, "volkswagen": 41, "eleph": 41, "truncat": [41, 75, 102, 413], "thephd": 41, "msvc": [41, 43, 46], "par": 41, "mojibak": 41, "fmt_unicod": 41, "3834": 41, "dominicpoeschko": [41, 43], "1467": 41, "3886": 41, "3892": 41, "3900": 41, "3978": 41, "basic_str": [41, 44], "trait": [41, 43], "3938": 41, "3943": 41, "dieram3": 41, "dai": [41, 42, 43, 44, 47], "month": [41, 43, 44, 47], "year": [41, 43, 44, 47], "year_month_dai": 41, "3758": 41, "3772": 41, "3906": 41, "3913": 41, "fg": [41, 42, 43, 44], "306": 41, "alt": [41, 42, 52], "576385": [41, 42, 43], "6e395f8b": 41, "451a": 41, "4cf7": 41, "bccc": 41, "ee92ca0dec65": 41, "zivshek": 41, "3794": 41, "3814": 41, "js324": 41, "glibc": [41, 43], "strftime": [41, 43, 44], "week": [41, 47], "3976": 41, "zaheenj": 41, "3811": 41, "3812": 41, "min": [41, 43, 61, 62, 69, 127, 206, 207, 331, 332, 394, 439], "3282": 41, "3857": 41, "3863": 41, "debug_str": 41, "3973": 41, "4024": 41, "adl": 41, "join": [41, 43, 44, 59, 64, 437], "3813": 41, "3824": 41, "bbolli": [41, 43], "3798": 41, "3752": 41, "3800": 41, "3955": 41, "tcbrindl": 41, "arghnew": 41, "3802": 41, "3946": 41, "3839": 41, "3964": 41, "3974": 41, "__float128": 41, "3494": 41, "3539": 41, "isnan": [41, 43, 62, 69], "nan": [41, 47, 59, 437], "3948": 41, "3951": 41, "alexdewar": 41, "allocator_trait": [41, 43], "3804": 41, "despit": [41, 46], "partial": [41, 43], "4000": 41, "4001": 41, "iterator_buff": 41, "3808": 41, "waywardmonkei": [41, 43], "enforc": [41, 43], "3447": 41, "basic_format_arg": [41, 44], "basic_string_view": [41, 43, 44], "3846": 41, "dall": 41, "group_digit": [41, 44], "neg": [41, 47, 62, 69, 75, 292], "3891": 41, "3901": 41, "id": [41, 42, 43, 44, 47, 50, 79, 84, 86, 90, 91, 93, 101, 103, 107, 108, 115, 116, 117, 118, 119, 120, 122, 131, 135, 145, 146, 151, 153, 154, 156, 158, 159, 161, 163, 165, 166, 168, 169, 171, 175, 188, 190, 191, 192, 193, 195, 197, 199, 208, 211, 213, 216, 220, 221, 222, 223, 224, 227, 229, 231, 233, 237, 242, 243, 247, 250, 252, 253, 256, 258, 260, 267, 269, 284, 285, 288, 289, 291, 292, 294, 295, 302, 304, 310, 311, 317, 322, 326, 327, 328, 331, 332, 344, 345, 346, 347, 352, 353, 355, 357, 358, 359, 360, 365, 371, 372, 373, 374, 376, 379, 381, 382, 384, 387, 389, 390, 395, 396, 401, 412, 414, 415, 416, 419, 420], "3945": 41, "marlenecota": 41, "3817": 41, "format_arg_stor": [41, 43], "3833": 41, "ivafana": 41, "rhel": [41, 43], "devtoolset": 41, "3858": 41, "3859": 41, "g199209": 41, "rtti": 41, "3821": 41, "3963": 41, "edo9300": 41, "3775": 41, "3784": 41, "3788": 41, "3789": 41, "3793": 41, "3818": 41, "3820": 41, "3822": 41, "3843": 41, "3890": 41, "3894": 41, "3895": 41, "3905": 41, "3942": 41, "4008": 41, "zencatalyst": 41, "wolletd": 41, "tupascho": 41, "dobiasd": 41, "frank": 41, "weinberg": 41, "tchaikov": [41, 43], "3878": 41, "3883": 41, "3897": 41, "3979": 41, "3980": 41, "3988": 41, "4010": 41, "4012": 41, "4038": 41, "vgorrx": 41, "back_insert_iter": [41, 43], "3795": 41, "3797": 41, "bazel": [41, 48], "3792": 41, "3801": 41, "3962": 41, "3965": 41, "vertexwahn": 41, "3777": 41, "3783": 41, "3847": 41, "3907": 41, "xtachyon": 41, "3685": 41, "3769": 41, "3796": 41, "3803": 41, "3806": 41, "3807": 41, "3809": 41, "3810": 41, "3830": 41, "3832": 41, "3835": 41, "3844": 41, "3854": 41, "3856": 41, "3865": 41, "3866": 41, "3880": 41, "3881": 41, "3884": 41, "3898": 41, "3899": 41, "3909": 41, "3917": 41, "3923": 41, "3924": 41, "3925": 41, "3930": 41, "3931": 41, "3933": 41, "3935": 41, "3937": 41, "3967": 41, "3968": [41, 74], "3972": 41, "3983": 41, "3992": 41, "3995": 41, "4009": 41, "4023": 41, "hmbj": 41, "res2k": 41, "baardi": 41, "yakra": 41, "prlw1": 41, "mtillmann0": 41, "shifftc": 41, "eepp": 41, "jimmi": 41, "park": 41, "christiangebhardt": 41, "04": [41, 42, 43, 47, 61, 77, 439], "3785": 41, "3786": 41, "saraedum": 41, "3643": 41, "3732": 41, "intelfx": 41, "suffix": [41, 47], "minut": [41, 47], "3662": 41, "3664": 41, "9khmnq9ba": 41, "42d": 41, "richardk2n": 41, "3725": 41, "3727": 41, "cschreib": 41, "source_loc": [41, 44], "3730": 41, "yajfkjhhr": 41, "app": [41, 42, 43, 440], "felix642": 41, "bitset": [41, 44], "3660": 41, "bdeageyx": 41, "101010": [41, 47], "muggenhor": 41, "nested_formatt": [41, 44], "subobject": [41, 44], "format_context": [41, 43, 44], "ctx": [41, 43, 44], "write_pad": [41, 44], "3715": 41, "3729": 41, "format_a": [41, 44], "3739": 41, "3284": 41, "3684": 41, "unsaf": [41, 43], "3625": 41, "dangl": 41, "emphasi": [41, 42, 43], "bold": [41, 42, 43], "3706": 41, "3726": 41, "3734": 41, "unloc": 41, "ostream_formatt": [41, 44], "rest": [41, 45, 173], "3460": 41, "3693": 41, "3750": 41, "regress": [41, 43, 71], "3674": 41, "synchron": [41, 386, 440], "consol": [41, 46, 79], "3668": 41, "3688": 41, "3689": 41, "roman": 41, "koshelev": 41, "dimztimz": 41, "format_error": [41, 43, 47], "3626": 41, "3627": 41, "3650": 41, "format_int": 41, "4031": [41, 74], "4032": [41, 74], "dixlorenz": [41, 43], "constev": [41, 44], "3757": 41, "3631": 41, "3636": 41, "glebm": 41, "3679": 41, "3701": 41, "3702": 41, "3749": 41, "jcar87": 41, "pklima": 41, "3607": 41, "3610": 41, "3624": 41, "3630": 41, "3634": 41, "3638": 41, "3645": 41, "3646": 41, "3647": 41, "3652": 41, "3654": 41, "3663": 41, "3670": 41, "3680": 41, "3694": 41, "3695": 41, "3699": 41, "3705": 41, "3710": 41, "3712": 41, "3713": 41, "3714": 41, "3716": 41, "3723": 41, "3738": 41, "3740": 41, "3741": 41, "3743": 41, "3745": 41, "3747": 41, "3748": 41, "3751": 41, "3754": 41, "3755": 41, "3760": 41, "3762": 41, "3763": 41, "3764": 41, "3774": 41, "3779": 41, "danakj": 41, "vinayyadav3016": 41, "cyyev": 41, "qimiko": 41, "saschasc": 41, "gsjaardema": [41, 43], "lazka": 41, "zhaojun": 41, "liu": 41, "carlsmedstad": 41, "hotwatermorn": [41, 43], "cptfracassa": 41, "kuguma": 41, "peterjohnson": 41, "h1x4dev": 41, "asantoni": 41, "eltociear": 41, "msimberg": 41, "2086": 41, "3637": 41, "3642": 41, "3653": 41, "3655": 41, "3661": 41, "3673": 41, "3677": 41, "3737": 41, "3742": 41, "3744": 41, "idzm": 41, "perlun": 41, "joycebrum": 41, "fennewald": 41, "reinhardt1053": 41, "georgel": 41, "3615": 41, "3622": 41, "3623": 41, "3666": 41, "3696": 41, "3697": 41, "3759": 41, "3782": 41, "08": [41, 42, 43, 47, 59, 437], "28": [41, 43, 59, 61, 80, 437, 439], "atom": [41, 43, 44], "atomic_flag": [41, 44], "3574": 41, "3594": 41, "wangzw": 41, "alexguteniev": 41, "3584": 41, "3587": 41, "3597": 41, "3605": 41, "mathewbensoncod": 41, "3575": 41, "formatted_s": [41, 43, 44], "3591": 41, "elbeno": 41, "no_unique_address": 41, "3599": 41, "lukester1975": 41, "legaci": [41, 44], "gbk": 41, "3598": 41, "yuhuantin": 41, "openssf": 41, "scorecard": 41, "analysi": [41, 42, 79], "3530": 41, "3571": 41, "3592": 41, "3593": 41, "3602": 41, "format_to_n": [41, 43, 44], "3133": 41, "3484": 41, "bm_format_to": 41, "78": 41, "8881746": 41, "bm_format_to_n": 41, "568": 41, "1232089": 41, "54": [41, 42, 43, 57, 59, 435, 437], "12727944": 41, "133": [41, 58, 59, 436, 437], "5257795": 41, "basic_memory_buff": [41, 43, 44], "3485": 41, "minti": 41, "meeo": 41, "3567": 41, "3570": 41, "zyb79pvn8": 41, "adaptor": 41, "flat_set": 41, "3556": 41, "3561": 41, "5chmidti": 41, "3430": 41, "patlkli": 41, "3432": 41, "timsong": 41, "3526": 41, "make_format_arg": [41, 43, 44], "unformatt": [41, 43], "3478": 41, "brevzin": [41, 43], "3448": 41, "3450": 41, "florimond": 41, "collett": 41, "3564": 41, "3337": 41, "3433": 41, "3434": 41, "remnant": 41, "grisu": [41, 43], "dragonbox": [41, 42, 43], "throw_format_error": 41, "3551": 41, "mjerabek": 41, "fmt_throw": 41, "3418": 41, "3439": 41, "exot": [41, 43, 44], "3457": 41, "3476": 41, "gix": 41, "unescap": 41, "basic_printf_parse_context": 41, "3468": 41, "vxworks7": 41, "3467": 41, "wenshan1": 41, "3174": 41, "3423": 41, "3454": 41, "3458": 41, "3461": 41, "3487": 41, "3515": 41, "rlalik": 41, "mikecrow": [41, 43], "3449": 41, "3451": 41, "3452": 41, "3453": 41, "3459": 41, "3481": 41, "3486": 41, "3489": 41, "3496": 41, "3517": 41, "3523": 41, "3563": 41, "petrmanek": 41, "setoy": 41, "abouvi": 41, "3408": 41, "3424": 41, "3444": 41, "3446": 41, "3475": 41, "3482": 41, "3492": 41, "3493": 41, "3508": 41, "3509": 41, "3533": 41, "3542": 41, "3543": 41, "3540": 41, "3544": 41, "3548": 41, "3549": 41, "3550": 41, "3552": 41, "adesitt": 41, "tobischlut": 41, "kierancl": 41, "alexeedm": 41, "jurihock": 41, "ozomahtli": 41, "razaqq": 41, "09": [41, 43, 59, 60, 437, 438], "3262": 41, "2750": 41, "3269": 41, "3276": 41, "33922675": 41, "211956670": 41, "84891a09": 41, "6867": 41, "47d9": 41, "82fc": 41, "3230da7abe0f": 41, "red": [41, 43, 44, 52], "fmt_use_full_cache_dragonbox": [41, 43], "blue": [41, 42, 44, 52], "jk": [41, 42, 43], "jeon": [41, 42, 43], "snprintf": [41, 43], "hex": [41, 47], "3179": 41, "3203": 41, "3263": 41, "3272": 41, "shawnzhong": 41, "3134": 41, "3254": 41, "3386": 41, "3387": 41, "3388": 41, "3392": 41, "3397": 41, "3399": 41, "3400": 41, "laitingsheng": 41, "orvid": 41, "daniela": [41, 43], "vitaut": [41, 42], "dfmt_modul": 41, "b7rqhq5kh": 41, "floaty_mc_floatfac": 41, "primit": [41, 68], "odr": 41, "3237": 41, "3260": 41, "3275": 41, "rkp6mgz6c": 41, "subsecond": 41, "2207": 41, "3117": 41, "3115": 41, "3143": 41, "3144": 41, "3349": 41, "45738ogeo": 41, "234567": 41, "1234567": [41, 43], "patrickroock": 41, "3148": 41, "sappyjoi": 41, "utc_tim": 41, "3098": 41, "3110": 41, "utc": [41, 47], "3199": 41, "3230": 41, "ned14": 41, "ez": [41, 47], "oz": [41, 47], "3220": 41, "3222": 41, "3219": 41, "3232": 41, "3261": 41, "f7bcznb3w": 41, "from_time_t": 41, "59": 41, "750000000": 41, "2959": 41, "3271": 41, "2977": 41, "3012": 41, "3062": 41, "3076": 41, "3119": 41, "8xowgs9e4": 41, "_m_range_check": 41, "__n": 41, "zach2good": 41, "error_cod": [41, 44], "3125": 41, "priority_queu": 41, "3215": 41, "3279": 41, "74h1xy9qk": 41, "1367": 41, "3303": 41, "tom": 41, "huntington": 41, "valueless": 41, "3347": 41, "theomegacarrot": 41, "3177": 41, "noncopy": 41, "3158": 41, "3286": 41, "3290": 41, "3319": 41, "3321": 41, "3322": 41, "3331": 41, "cloyc": 41, "3105": 41, "3214": 41, "rbrich": 41, "3236": 41, "3248": 41, "3234": 41, "3293": 41, "fros1er": 41, "unifi": [41, 75], "3416": 41, "digit": [41, 43, 47], "facet": 41, "1861": 41, "loc": [41, 43], "format_facet": 41, "de_ch": 41, "3084": 41, "3087": 41, "gerboengel": 41, "fmt_deprecated_ostream": 41, "ub": 41, "3241": 41, "3244": 41, "starts_with": 41, "fallback": [41, 43, 62, 72, 73, 78], "3080": 41, "basic_format_str": [41, 44], "3111": 41, "huangqinjin": 41, "println": [41, 44], "3267": 41, "renam": [41, 43], "fmt_export": 41, "fmt_lib_export": 41, "3108": 41, "3169": 41, "3243": 41, "3404": 41, "4002": 41, "cleroth": 41, "3118": 41, "3120": 41, "3188": 41, "3189": 41, "3198": 41, "3205": 41, "3207": 41, "3210": 41, "3240": 41, "3256": 41, "3264": 41, "3299": 41, "3302": 41, "3312": 41, "3317": 41, "3328": 41, "3333": 41, "3369": 41, "3373": 41, "3395": 41, "3406": 41, "3411": 41, "davidkorczynski": 41, "christhrash": 41, "francoiscaroug": 41, "kennyweiss": 41, "luzpaz": 41, "codeinr": 41, "mixail": 41, "kevinhwang": 41, "colon": [41, 47], "3086": 41, "oxidas": 41, "is_constant_evalu": 41, "3247": 41, "3281": 41, "volatil": [41, 52], "3068": 41, "3057": 41, "3066": 41, "3072": 41, "3082": 41, "3091": 41, "3092": 41, "3093": 41, "3095": 41, "3096": 41, "3097": 41, "3128": 41, "3129": 41, "3137": 41, "3139": 41, "3140": 41, "3142": 41, "3149": 41, "3150": 41, "3154": 41, "3163": 41, "3178": 41, "3184": 41, "3196": 41, "3204": 41, "3206": 41, "3208": 41, "3213": 41, "3216": 41, "3224": 41, "3226": 41, "3228": 41, "3229": 41, "3259": 41, "3274": 41, "3287": 41, "3288": 41, "3292": 41, "3295": 41, "3296": 41, "3298": 41, "3325": 41, "3326": 41, "3334": 41, "3342": 41, "3343": 41, "3351": 41, "3352": 41, "3362": 41, "3365": 41, "3366": 41, "3374": 41, "3377": 41, "3378": 41, "3381": 41, "3398": 41, "3413": 41, "3415": 41, "newbieorang": 41, "enginelesscc": 41, "asmalonei": 41, "hazardyknusperkek": [41, 43], "sergiud": 41, "youw": 41, "thesmurph": 41, "czudziakm": 41, "chronoxor": [41, 43], "russelltg": 41, "tmartin": 41, "gh": 41, "louiswin": 41, "mogemimi": 41, "3026": 41, "1mw5rmdf8": 41, "_cf": [41, 44], "marksantaniello": 41, "3038": 41, "3044": 41, "3056": 41, "skeeto": 41, "2994": 41, "3001": 41, "3025": 41, "3041": 41, "2981": 41, "2983": 41, "rokqgdj8c": 41, "3030": 41, "3050": 41, "strega": 41, "nil": [41, 43], "exclus": [41, 47, 302], "2968": 41, "2974": 41, "dani": 41, "hub": [41, 59, 61, 437, 439], "3055": 41, "2984": 41, "3010": 41, "2966": 41, "3009": 41, "3020": 41, "3037": 41, "mwinterb": [41, 43], "jceleri": [41, 43], "remiburtin": 41, "2991": 41, "3004": 41, "3007": 41, "3040": 41, "hwhsu1231": 41, "2969": 41, "2971": 41, "2975": 41, "2985": 41, "2988": 41, "2989": 41, "3000": 41, "3006": 41, "3014": 41, "3015": 41, "3021": 41, "3023": 41, "3024": 41, "3029": 41, "3043": 41, "3052": 41, "3053": 41, "3054": 41, "friederich": 41, "olupton": 41, "bernhardmgrub": 41, "fp": 41, "g37pteg3b": 41, "compile_time_dtoa": 41, "fmt_compil": [41, 43, 44], "2713": 41, "discoveri": 41, "5sec5qmsf": 41, "5g3346g1f": 41, "this_thread": 41, "get_id": 41, "unscop": 41, "2941": 41, "kg9z6cq68": 41, "jehelset": 41, "2865": 41, "2902": 41, "2917": 41, "2918": 41, "o44dmexeb": 41, "j1azbyf3": 41, "2793": 41, "vwgw7v5m6": 41, "went": 41, "175071215": 41, "12809244": 41, "dab0": 41, "96d8": 41, "7cd911c964d5": 41, "rbrugo": 41, "2681": 41, "2701": 41, "2673": 41, "xd3gj38cf": 41, "0xa": [41, 47], "0x14": [41, 47], "0x1e": [41, 47], "escap": [41, 47], "2904": 41, "2807": 41, "2787": 41, "2944": 41, "brukerjwd": 41, "2939": 41, "2940": 41, "2719": 41, "2720": 41, "2816": 41, "2817": 41, "2819": 41, "make_args_check": [41, 43], "2760": 41, "_format": 41, "arg_join": 41, "unsign": [41, 43, 44], "fileno": 41, "buffered_fil": 41, "to_string_view": [41, 43], "fopen": [41, 43], "s_iwgrp": 41, "s_iwoth": 41, "2733": 41, "arogg": 41, "2842": 41, "2843": 41, "2888": 41, "2830": 41, "__int128_t": [41, 43], "2773": 41, "cheri": 41, "2932": 41, "davidchisnal": 41, "2706": 41, "2712": 41, "2789": 41, "2803": 41, "2805": 41, "2815": 41, "2924": 41, "pokechu22": 41, "rtobar": 41, "anoond": 41, "leha": 41, "bot": 41, "2766": 41, "2772": 41, "2836": 41, "2852": 41, "2907": 41, "2913": 41, "2914": 41, "kambala": 41, "decapit": 41, "mattiasljungstrom": 41, "kieselnb": 41, "nathannaveen": 41, "2408": 41, "2507": 41, "2697": 41, "2715": 41, "2717": 41, "2722": 41, "2724": 41, "2725": 41, "2726": [41, 43], "2728": 41, "2732": 41, "2738": 41, "2742": 41, "2744": 41, "2745": 41, "2746": 41, "2754": 41, "2755": 41, "2757": 41, "2758": 41, "2761": 41, "2762": 41, "2763": 41, "2765": 41, "2769": 41, "2770": 41, "2771": 41, "2777": 41, "2779": 41, "2782": 41, "2783": 41, "2794": 41, "2796": 41, "2797": 41, "2801": 41, "2802": 41, "2808": 41, "2818": 41, "2829": 41, "2835": 41, "2848": 41, "2860": 41, "2861": 41, "2882": 41, "2886": 41, "2891": 41, "2892": 41, "2895": 41, "2896": 41, "2903": 41, "2906": 41, "2908": 41, "2909": 41, "2920": 41, "2922": 41, "2927": 41, "2929": 41, "2936": 41, "2937": 41, "2938": 41, "2951": 41, "2954": 41, "2957": 41, "2958": 41, "2960": 41, "matrackif": 41, "tobi823": 41, "volnov": 41, "vasilipupkin256": 41, "federico": [41, 43], "busato": [41, 43], "barcharcraz": 41, "dalbori": 41, "seanm": 41, "frithrah": 41, "agga": 41, "madmaxoft": 41, "jurajx": 41, "06": [41, 42, 43, 61, 75, 439], "2695": 41, "2696": 41, "2698": 41, "2699": 41, "xvitali": [41, 43], "mingw": [41, 43], "2691": 41, "2692": 41, "rbberger": 41, "02": [41, 43, 58, 59, 436, 437], "2500": 41, "2537": 41, "2541": 41, "2544": 41, "2550": 41, "2551": 41, "2576": 41, "2577": 41, "2586": 41, "2591": 41, "2594": 41, "2602": 41, "2617": 41, "2628": 41, "2633": 41, "2670": 41, "2671": 41, "fmtformatter_z": 41, "261": [41, 43], "26": [41, 42, 43, 59, 437], "fmtformattercompile_z": 41, "246": [41, 60, 438], "fmtformatter_i": 41, "263": [41, 43], "fmtformattercompile_i": 41, "244": [41, 43], "toughengin": 41, "2623": 41, "es7vwtet": 41, "234": [41, 43, 47], "2587": 41, "2588": 41, "tm": [41, 44, 47], "2564": 41, "group": [41, 43, 60, 75, 438], "txgxg9poq": 41, "dollar": 41, "1000000": [41, 44], "000": [41, 42, 43, 44], "faint": 41, "conceal": 41, "blink": 41, "2394": 41, "147710227": 41, "c68f5317": 41, "f8fa": 41, "42c3": 41, "9123": 41, "7c4ba3c398cb": 41, "mp4": 41, "benit8": 41, "man": 41, "2426": 41, "2470": 41, "alexezed": [41, 43], "udl": [41, 43], "2640": 41, "2649": 41, "ohgbbvonv": 41, "rkvm1vkf3": 41, "naan": 41, "aan": 41, "2674": 41, "sekjoy9w5": 41, "2549": 41, "accident": 41, "1841": 41, "2646": 41, "nodiscard": 41, "2612": 41, "0x8000": [41, 43], "0000": [41, 43, 47, 55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "diagnost": 41, "2598": 41, "2609": 41, "2610": 41, "2489": 41, "2477": 41, "2498": 41, "2499": 41, "2616": 41, "2509": 41, "2639": 41, "2641": 41, "mkurdej": [41, 43], "qualif": 41, "2642": 41, "2643": 41, "2462": 41, "2463": 41, "owent": 41, "2565": 41, "output_fil": [41, 42, 43], "rw": 41, "2530": 41, "2435": 41, "2615": 41, "2559": 41, "2406": 41, "2446": 41, "2493": 41, "2513": 41, "2515": 41, "2522": 41, "2562": 41, "2575": 41, "2606": 41, "2620": 41, "2676": 41, "sobolevn": 41, "unepierr": 41, "zhsj": 41, "ericcurtin": 41, "lounarok": 41, "fuzzer": [41, 49], "2461": 41, "2469": 41, "pauldreik": [41, 43], "fmt_system_head": 41, "2644": 41, "2651": 41, "2505": 41, "2516": 41, "2437": 41, "2558": 41, "2648": 41, "2650": 41, "2663": 41, "2677": 41, "2353": 41, "2356": 41, "2399": 41, "2414": 41, "2427": 41, "2432": 41, "2442": 41, "2434": 41, "2439": 41, "2447": 41, "2450": 41, "2455": 41, "2465": 41, "2472": 41, "2474": 41, "2476": 41, "2478": 41, "2479": 41, "2481": 41, "2482": 41, "2483": 41, "2490": 41, "2491": 41, "2510": 41, "2518": 41, "2528": 41, "2529": 41, "2539": 41, "2540": 41, "2545": 41, "2555": 41, "2557": 41, "2570": 41, "2573": 41, "2582": 41, "2605": 41, "2611": 41, "2647": 41, "2627": 41, "2630": 41, "2635": 41, "2638": 41, "2653": 41, "2654": 41, "2661": 41, "2664": 41, "2684": 41, "cdacamar": 41, "trebledj": 41, "bodomartin": 41, "cquammen": 41, "white238": 41, "mmarkeloff": 41, "palacaz": 41, "mborn": 41, "adi": 41, "spyridon97": 41, "oliverle": 41, "joshessman": 41, "llnl": 41, "akohlmei": [41, 43], "timkalu": 41, "acretock": 41, "andrewcorrigan": 41, "lucpelleti": 41, "2374": 41, "2402": 41, "2377": 41, "2396": 41, "2403": 41, "dead": 41, "2398": 41, "javierhonduco": 41, "2351": 41, "2359": 41, "2365": 41, "2368": 41, "2370": 41, "2376": 41, "2381": 41, "2382": 41, "2386": 41, "2389": 41, "2395": 41, "2397": 41, "2400": 41, "2401": 41, "2407": 41, "zx2c4": 41, "aidansun05": 41, "joemmett": 41, "erengi": 41, "smxcohgjz": 41, "am": [41, 42, 46, 47], "2044": 41, "2056": 41, "2072": 41, "2075": 41, "2078": 41, "2129": 41, "2326": 41, "mxx9d89jm": 41, "compile_time_itoa": 41, "notabl": [41, 42, 43], "hexadecim": [41, 42, 43, 47], "7x": 41, "1944": 41, "fmtcompileold": 41, "43302898": 41, "43278267": 41, "273123": 41, "37035861": 41, "9223372036854775807": 41, "35243000": 41, "fmtcompilenew": 41, "99": [41, 43, 59, 77, 437], "360523686": 41, "279865664": 41, "72": 41, "71": [41, 43], "190230315": 41, "130711631": 41, "to_char": [41, 42, 43], "tochar": 41, "41": [41, 56, 59, 434, 437], "160196630": 41, "98": [41, 42, 43, 59, 437], "140735201": 41, "95784130": 41, "77": [41, 59, 437], "75": [41, 43], "75872534": 41, "lower": [41, 47, 77, 213, 406], "fraction": [41, 47], "2043": 41, "2242": 41, "hell": [41, 42], "my_typ": 41, "formatcontext": [41, 43, 44], "2243": 41, "2281": 41, "2280": 41, "2304": 41, "2235": 41, "2240": 41, "2260": 41, "2282": 41, "2283": 41, "2288": 41, "2298": 41, "2306": 41, "2307": 41, "2309": 41, "2318": 41, "2324": 41, "2332": 41, "2340": 41, "2301": 41, "preprocess": [41, 62, 68, 102, 282, 283, 425, 430], "slightli": 41, "1998": 41, "1953": 41, "kitegi": 41, "1981": 41, "2040": 41, "2050": 41, "2262": 41, "cstddef": 41, "kamibo": 41, "2319": 41, "2345": 41, "sunmy2019": 41, "ru_ru": [41, 43], "mondai": [41, 47], "weekdai": [41, 43, 47], "mon": 41, "\u043f\u043d": 41, "2337": 41, "2349": 41, "2350": 41, "xchar": [41, 44], "undocu": [41, 43], "vformat_to": [41, 44], "2327": 41, "2208": 41, "tp": 41, "fr_fr": [41, 43], "2lf": 41, "infin": [41, 42, 47, 75], "2305": 41, "2310": 41, "liedtk": 41, "hexfloat": 41, "2308": 41, "2317": 41, "posix": [41, 42, 43, 44], "format_to_n_context": 41, "format_to_n_arg": 41, "make_format_to_n_arg": 41, "format_arg": [41, 43, 44], "fmt_deprecated_include_xchar": 41, "2133": 41, "2094": 41, "2109": 41, "powercoderlol": 41, "2131": 41, "2141": 41, "2161": 41, "2042": 41, "2036": 41, "2033": 41, "2091": 41, "\u4f60\u597d": [41, 42, 43], "\u4e16\u754c": [41, 42, 43], "119840373": 41, "cea3ca80": 41, "beb9": 41, "91e0": 41, "54266c48e181": 41, "out1": 41, "zaphod": 41, "out2": 41, "ford": 41, "wronli": 41, "2197": 41, "2198": 41, "vtta": 41, "system_error": [41, 44], "2266": 41, "windows_error": [41, 43, 44], "categori": [41, 68], "system_categori": 41, "2274": 41, "2275": 41, "2269": 41, "2270": 41, "2273": 41, "speech": 41, "synthesi": 41, "2206": 41, "2300": 41, "voxmea": 41, "max_siz": 41, "1960": 41, "2236": 41, "crbrz": 41, "output_iter": 41, "2156": 41, "2158": 41, "2195": 41, "2204": 41, "randomnetcat": 41, "1982": 41, "1984": [41, 74], "2016": [41, 43, 74], "2164": 41, "rimathia": [41, 43], "moiwi": [41, 43], "char_trait": [41, 44], "2246": 41, "2257": 41, "nul": 41, "2080": [41, 74], "2097": 41, "2238": 41, "2244": 41, "yumeyao": 41, "2096": 41, "2145": [41, 74], "nobodyxu": 41, "fmt_master_project": 41, "2098": 41, "2100": 41, "randomizedthink": 41, "2026": 41, "2122": 41, "luncliff": [41, 43], "iban": 41, "1947": 41, "1959": 41, "1963": 41, "1965": 41, "1966": 41, "1974": 41, "1975": 41, "1990": 41, "2000": 41, "2001": 41, "2002": 41, "2004": [41, 47], "2006": 41, "2009": 41, "2010": [41, 47], "2038": 41, "2039": 41, "2047": [41, 74], "2053": 41, "2059": 41, "2065": 41, "2067": 41, "2068": 41, "2073": 41, "2103": 41, "2105": 41, "2106": 41, "2107": 41, "2116": 41, "2117": 41, "2118": 41, "2119": 41, "2127": 41, "2128": 41, "2140": 41, "2142": 41, "2143": 41, "2144": [41, 74], "2147": 41, "2148": 41, "2149": 41, "2152": 41, "2160": 41, "2170": 41, "2175": [41, 74], "2176": 41, "2177": 41, "2178": 41, "2179": 41, "2180": 41, "2181": 41, "2183": 41, "2184": 41, "2185": 41, "2186": 41, "2187": 41, "2190": 41, "2192": 41, "2194": 41, "2205": 41, "2210": 41, "2211": 41, "2215": 41, "2216": 41, "2218": 41, "2220": 41, "2228": 41, "2229": 41, "2230": 41, "2233": 41, "2239": 41, "2248": 41, "2252": 41, "2253": 41, "2255": 41, "2261": 41, "2278": 41, "2284": 41, "2287": 41, "2289": 41, "2290": 41, "2293": 41, "2295": 41, "2296": 41, "2297": 41, "2311": 41, "2313": 41, "2315": 41, "2320": 41, "2321": 41, "2323": 41, "2328": 41, "2329": 41, "2333": 41, "2338": 41, "2341": 41, "darkluke": [41, 43], "fagg": 41, "killerbot242": 41, "jgopel": 41, "yeswalru": 41, "finkman": 41, "dkavoli": [41, 43], "concatim": 41, "summivox": 41, "yneo": 41, "hb": 41, "toojai": 41, "brainy0207": 41, "vadz": 41, "imsherlock": 41, "yafshar": 41, "billydonahu": [41, 43], "jstaahl": 41, "denchat": [41, 43], "ilyakurdyukov": 41, "ilmai": 41, "jessydl": 41, "sven": 41, "herrmann": 41, "jmela": 41, "twoixter": 41, "upsj": 41, "1986": 41, "2051": 41, "2057": 41, "2081": [41, 74], "2084": 41, "2312": 41, "imba": [41, 43], "tjd": [41, 43], "0x416c69": 41, "mordant": 41, "1969": 41, "1991": 41, "2110": 41, "2114": 41, "2196": 41, "2217": 41, "2247": 41, "2256": 41, "2336": 41, "2346": 41, "156254208": 42, "f5b743a9": 42, "88cf": 42, "439d": 42, "b0c0": 42, "923d53e8d551": 42, "3alinux": 42, "fuzz": [42, 43, 49], "googleapi": 42, "chromium": 42, "0acolspec": 42, "20type": 42, "20compon": 42, "20statu": 42, "20proj": 42, "20report": 42, "20owner": 42, "0asummari": 42, "proj": 42, "3dfmt": 42, "securityscorecard": 42, "viewer": 42, "uri": 42, "donat": 42, "fund": 42, "victim": 42, "war": 42, "ukrain": 42, "stopputin": 42, "cheat": 42, "sheet": 42, "hackingcpp": 42, "8mx1ew73v": 42, "stdtype": [42, 44], "754": [42, 43], "trip": [42, 43], "hundr": [42, 46], "million": 42, "revisit": [42, 43], "inl": [42, 45], "bloat": [42, 43, 46], "reliabl": [42, 43, 78], "colspec": 42, "20summari": 42, "eas": 42, "rst": [42, 43, 78], "wextra": 42, "pedant": 42, "fmt_header_onli": [42, 43], "tevcjh": 42, "ok8h33": 42, "yn7txe": 42, "happi": 42, "c31exdy3w": 42, "31": [42, 59, 61, 72, 74, 116, 119, 437, 439], "557195597": 42, "mxm1yqje7": 42, "panic": 42, "crimson": [42, 43], "floral_whit": [42, 43], "bg": [42, 43, 44], "slate_grai": [42, 43], "underlin": [42, 43], "ol\u00e1": [42, 43], "mundo": [42, 43], "steel_blu": [42, 43], "ital": [42, 43], "0a576385": [42, 43], "2a93c904": [42, 43], "d6fa": [42, 43], "4aa6": [42, 43], "b453": [42, 43], "2618e1c327d7": [42, 43], "91": [42, 59, 437], "49": [42, 55, 59, 61, 433, 437, 439], "74": [42, 43, 59, 437], "80": [42, 77], "folli": [42, 43], "87": 42, "fastest": [42, 65], "tinyformat_test": 42, "o3": 42, "dndebug": 42, "dspeed_test": 42, "dhave_format": 42, "10f": 42, "04d": 42, "cc": [42, 43, 44, 45], "30x": [42, 43], "ostringstream": [42, 43], "sprintf": [42, 43, 44, 46], "ieee754": 42, "dtoa": [42, 43], "ryu": 42, "ulfjack": 42, "95684665": [42, 43], "11719600": [42, 43], "0ba8": [42, 43], "8e5b": [42, 43], "972ff4e49428": [42, 43], "unknown_mac64_clang12": 42, "bench": 42, "nontrivi": 42, "simul": 42, "medium": 42, "sonoma": 42, "kib": 42, "84": [42, 43, 59, 437], "83652df": 42, "161": [42, 43], "136": [42, 43, 55, 56, 57, 58, 433, 434, 435, 436], "530": 42, "317": [42, 43, 59, 437], "92": [42, 43, 59, 437], "68": [42, 59, 437], "89": [42, 43], "85": [42, 59, 437], "204": [42, 43], "36": [42, 43, 59, 437], "831": 42, "462": [42, 59, 437], "libfmt": [42, 43, 45], "resid": [42, 44], "tidi": 42, "v18": 42, "occurr": 42, "play0ad": [42, 43], "ampl": 42, "mp": 42, "mathemat": 42, "foundationdb": [42, 46], "aseprit": 42, "sprite": 42, "editor": 42, "art": 42, "aviobook": 42, "aero": 42, "comprehens": 42, "aircraft": 42, "blizzard": 42, "battl": 42, "onlin": [42, 43, 45], "celestia": 42, "3d": [42, 53], "ceph": 42, "ccach": 42, "clickhous": 42, "analyt": 42, "databas": 42, "contour": 42, "cuauv": 42, "cornel": 42, "univers": 42, "autonom": 42, "underwat": 42, "vehicl": 42, "drake": 42, "toolbox": 42, "nonlinear": 42, "envoi": 42, "lyft": 42, "l7": 42, "bu": 42, "fivem": 42, "gta": 42, "fmtlog": 42, "mengrao": 42, "latenc": 42, "facebook": 42, "gemrb": 42, "biowar": 42, "grand": 42, "mountain": 42, "adventur": 42, "steampow": 42, "1247360": 42, "grand_mountain_adventur": 42, "ski": 42, "snowboard": 42, "harpywar": 42, "pvpgn": 42, "player": 42, "kbengin": 42, "mmog": 42, "keypirinha": 42, "launcher": 42, "kodi": 42, "tv": 42, "formerli": 42, "xbmc": 42, "theater": 42, "knuth": 42, "kth": 42, "cash": 42, "bitcoin": 42, "node": 42, "libunicod": 42, "mariadb": 42, "verona": 42, "mongodb": [42, 46], "smasher": 42, "ducki": 42, "mongo_smash": 42, "openspac": 42, "openspaceproject": 42, "astrovisu": 42, "penultima": [42, 43], "pol": [42, 43], "polserv": [42, 43], "mmo": 42, "ultima": 42, "client": [42, 43, 59, 437], "pytorch": [42, 46, 59, 62, 65, 67, 73, 75, 101, 272, 302, 371, 401, 406, 409, 425, 426, 437], "quasardb": 42, "quill": 42, "odygrd": 42, "qkw": 42, "ravijanjam": [42, 43], "navig": [42, 46, 76], "redi": 42, "cerberu": 42, "hunantv": 42, "cluster": [42, 44, 52, 53], "redpanda": 42, "10x": [42, 43], "kafka": 42, "mission": 42, "rpclib": 42, "msgpack": [42, 59, 437], "rpc": 42, "salesforc": 42, "cloud": [42, 43, 64], "busi": 42, "intellig": 42, "scylla": 42, "scylladb": 42, "cassandra": 42, "nosql": 42, "seastar": 42, "hardwar": [42, 55, 64, 67, 68, 70, 71, 76, 80, 433, 440], "spdlog": 42, "gabim": [42, 43], "stellar": 42, "touch": 42, "surgeri": 42, "touchsurgeri": 42, "trinitycor": 42, "mmorpg": 42, "userv": 42, "driver": [42, 55, 56, 57, 58, 59, 60, 77, 433, 434, 435, 436, 437, 438], "motiv": 42, "plenti": 42, "fastformat": 42, "seriou": 42, "didn": 42, "pretti": 42, "readili": 42, "drawback": 42, "mitig": 42, "__attribute__": 42, "onlinedoc": 42, "i18n": 42, "wikipedia": 42, "internationalization_and_loc": 42, "c99": 42, "setprecis": 42, "23456": 42, "matthew": 42, "wilson": 42, "chevron": 42, "awkward": 42, "slower": 42, "octal": [42, 43, 47], "stlsoft": 42, "spirit": 42, "karma": [42, 43], "suffer": 42, "verbatim": 42, "foundat": 42, "peopl": 42, "incorrectli": 42, "secur": 42, "disclos": 42, "advisori": 42, "volunt": 42, "basi": [42, 70], "exposur": 42, "1996": 43, "2029": 43, "2011": 43, "reintroduc": 43, "2014": 43, "1976": 43, "1961": 43, "fmt_arm_abi_compat": 43, "1919": 43, "sfina": 43, "1957": 43, "lto": 43, "1955": [43, 47], "__builtin_clz": 43, "1968": 43, "tohamm": 43, "1964": 43, "optocloud": 43, "grisu3": 43, "tuft": 43, "nr": 43, "cs257": 43, "archiv": [43, 45], "florian": 43, "loitsch": 43, "1882": 43, "1887": 43, "1894": 43, "ry\u016b": 43, "better": [43, 44, 75], "unsynchron": 43, "nstcg8": 43, "1819": 43, "1837": 43, "c4m6fh": 43, "adamburgess": 43, "1784": 43, "1786": 43, "jp63tv": 43, "v3": [43, 45], "filter": 43, "string_liter": 43, "bb": 43, "ccc": 43, "accc": 43, "tonyelewi": 43, "memory_buff": 43, "1806": 43, "buf": [43, 44], "5vncz3": 43, "asm": 43, "_z1fpc": 43, "movb": 43, "120": [43, 59, 79, 437], "rdi": 43, "xorl": 43, "edx": 43, "cmpl": 43, "_zn3fmt2v76detail10basic_dataive23zero_or_powers_of_10_32": 43, "rip": 43, "movl": 43, "eax": 43, "seta": 43, "dl": 43, "subl": 43, "movzwl": 43, "_zn3fmt2v76detail10basic_dataive6digits": 43, "cltq": 43, "addq": 43, "rax": 43, "movw": 43, "ret": 43, "mov": 43, "1809": 43, "how_about_no": 43, "goxm4": 43, "1438": 43, "static_assert": 43, "v7": 43, "udt": [43, 44, 46], "pef9qr": 43, "vlog": [43, 44], "vprint": 43, "my_log": [43, 44], "__file__": [43, 44], "__line__": [43, 44], "fmt_string": [43, 44], "__va_args__": [43, 44], "squishi": [43, 44], "dphwvj": 43, "9406564584124654e": 43, "324": [43, 60, 438], "9406564584124654417656879286822137236505980261432476442558568250067550727020875186529983636163599237979656469544571773092665671035593979639877479601078187812630071319031140452784581716784898210368871863605699873072305000638740915356498438731247339727316961514003171538539807412623856559117102665855668676818703956031062493194527159149245532930545654440112748012970999954193198940908041656332452475714786901472678015935523861155013480352649347201937902681071074917033322268447533357208324319360923829e": 43, "spjy1k": 43, "1764": 43, "1767": 43, "1869": 43, "93h86q": 43, "kurkin": 43, "text_styl": [43, 44], "1593": 43, "1842": 43, "1843": 43, "91153r": 43, "back_insert": [43, 44], "naio": 43, "emit": 43, "1797": 43, "bhdcw9": 43, "2g": 43, "1893": 43, "1943": 43, "00e": 43, "34": [43, 58, 59, 60, 436, 437, 438], "0e": 43, "1873": 43, "1917": 43, "1815": 43, "1829": 43, "fcntl": 43, "1847": 43, "1848": 43, "wiser": 43, "1766": 43, "1822": 43, "1927": 43, "1870": 43, "1932": 43, "fmt_always_inlin": 43, "1878": 43, "1900": [43, 47], "bernd5": 43, "1890": 43, "1772": 43, "1775": 43, "1792": 43, "1838": 43, "1888": 43, "1918": 43, "1939": 43, "leolchat": 43, "pepsiman": 43, "klaim": 43, "francesco": 43, "st": 43, "udnaan": 43, "fmt_reduce_int_instanti": 43, "constrain": [43, 46], "1778": 43, "1781": 43, "kammc": 43, "fmt_use_inline_namespac": 43, "1945": 43, "1760": 43, "1770": 43, "1779": 43, "1783": 43, "1823": 43, "dvetutnev": 43, "tambri": 43, "medith": 43, "martinwuehr": 43, "1790": 43, "1802": 43, "1808": 43, "1810": 43, "1811": 43, "1812": 43, "1814": 43, "1816": 43, "1817": 43, "1818": 43, "1825": 43, "1836": 43, "1855": 43, "1856": 43, "1860": 43, "1877": 43, "1879": 43, "1880": 43, "1896": 43, "1897": 43, "1898": 43, "1904": 43, "1908": 43, "1911": 43, "1912": 43, "1928": 43, "1929": 43, "1935": 43, "1937": 43, "1942": 43, "1949": 43, "theqwertiest": 43, "n16h7hunt3r": 43, "othereum": 43, "alexanderlanin": 43, "gcerretani": 43, "noizefloor": 43, "rglarix": 43, "heckad": 43, "marcdirven": 43, "bartsiwek": 43, "numeric_limit": 43, "1787": 43, "1796": 43, "1800": 43, "kingcom": 43, "1782": 43, "1801": 43, "1725": 43, "mangl": 43, "1753": 43, "1757": 43, "shrank": 43, "368k": 43, "100k": 43, "str1": 43, "str2": 43, "str3": 43, "str4": 43, "str5": 43, "1685": 43, "1452": 43, "o0": 43, "311": 43, "303": 43, "53": [43, 59, 437], "601": 43, "301": [43, 59, 437], "alex3d": 43, "ncfep_": 43, "lc0": 43, "lc1": 43, "rsp": 43, "edi": 43, "flat": 43, "esi": 43, "movab": 43, "rdx": 43, "4611686018427387905": 43, "lea": 43, "rcx": 43, "qword": 43, "dword": 43, "xor": [43, 75], "asciz": 43, "1614": 43, "invalid_format": 43, "fmt_constexpr_decl": 43, "569": 43, "checker": 43, "context_": 43, "on_error": 43, "num_args_": 43, "sentinel": [43, 44], "1689": 43, "zstring_sentinel": 43, "zstring": 43, "h_e_l_l_o": 43, "dynamic_format_arg_stor": [43, 44], "1655": 43, "1663": 43, "1674": 43, "1677": 43, "vsolontsov": 43, "1652": 43, "1624": 43, "fmt_deprecated_n_specifi": 43, "fmt_deprecated_numeric_align": 43, "fmt_string_alia": 43, "char_typ": 43, "value_typ": 43, "convert_to_int": 43, "parse_context": 43, "format_parse_context": [43, 44], "fmt_deprecated_include_o": 43, "fmt_deprecated_perc": 43, "writer": 43, "1538": 43, "fmt_use_intern": 43, "1595": 43, "1682": 43, "1683": 43, "1687": 43, "1699": 43, "copyfmt": 43, "1666": 43, "fmt_o": 43, "1654": 43, "1656": 43, "kwesolowski": 43, "fuzzing_build_mode_unsafe_for_product": 43, "fmt_fuzz": 43, "interf": 43, "1650": 43, "asraa": 43, "emscripten": 43, "1636": 43, "1637": 43, "arthursonzogni": 43, "704": 43, "1643": 43, "1660": 43, "1681": 43, "1691": 43, "1706": 43, "1714": 43, "1721": 43, "1739": 43, "1740": 43, "1741": 43, "1751": 43, "senior7515": 43, "lsr0": 43, "puetzk": 43, "fpelliccioni": 43, "alexei": 43, "kuzmenko": 43, "jelli": 43, "claremacra": 43, "jiapengwen": 43, "milovidov": 43, "1603": 43, "1657": 43, "1702": 43, "1728": 43, "scramsbi": 43, "jtojnar": 43, "orivej": 43, "flagard": 43, "1616": 43, "1620": 43, "1622": 43, "1625": 43, "1627": 43, "1628": 43, "1629": 43, "1631": 43, "1633": 43, "1649": 43, "1658": 43, "1661": 43, "1667": 43, "1668": 43, "1669": 43, "1692": 43, "1696": 43, "1697": 43, "1707": 43, "1712": 43, "1716": 43, "1722": 43, "1724": 43, "1729": 43, "1738": 43, "1742": 43, "1743": 43, "1744": 43, "1747": 43, "1750": 43, "johnor": 43, "invex": 43, "peterbell10": 43, "daixtros": 43, "petrutlucian94": 43, "neargy": 43, "ambitslix": 43, "erthink": 43, "1662": 43, "1015": 43, "1476": 43, "1498": 43, "type_ident": 43, "deduct": 43, "tim": 43, "song": 43, "1109": 43, "\u043f\u0440\u044b\u0432\u0456\u0442\u0430\u043d\u043d\u0435": 43, "\u0441\u0432\u0435\u0442": 43, "1170": 43, "1584": 43, "1591": 43, "rapotkinnik": 43, "1588": 43, "1506": 43, "1533": 43, "zeffi": 43, "1553": 43, "fmt_use_float": 43, "fmt_use_doubl": 43, "fmt_use_long_doubl": 43, "1590": 43, "albaguirr": 43, "1589": 43, "parser": 43, "1560": 43, "ikarusdevelop": 43, "1469": 43, "1475": 43, "1576": 43, "refnum": 43, "1481": 43, "1523": 43, "jackboosi": 43, "1535": 43, "milianw": 43, "1264": 43, "1460": 43, "1534": 43, "1536": 43, "1545": 43, "1546": 43, "1566": 43, "1582": 43, "1597": 43, "1598": 43, "jwillik": 43, "stac47": 43, "1433": 43, "1461": 43, "1470": 43, "1480": 43, "1485": 43, "1492": 43, "1493": 43, "1504": 43, "1505": 43, "1512": 43, "1515": 43, "1516": 43, "1518": 43, "1519": 43, "1520": 43, "1521": 43, "1522": 43, "1524": 43, "1530": 43, "1531": 43, "1532": 43, "1539": 43, "1547": 43, "1548": 43, "1554": 43, "1567": 43, "1568": 43, "1569": 43, "1571": 43, "1573": 43, "1575": 43, "1581": 43, "1583": 43, "1586": 43, "1587": 43, "1594": 43, "1596": 43, "1604": 43, "1606": 43, "1607": 43, "1609": 43, "marti4d": 43, "ipherian": 43, "parkertomato": 43, "torsten48": 43, "lefticu": 43, "ryusakki": 43, "adnsv": 43, "fghzxm": 43, "pramodk": 43, "spirrwel": 43, "1471": 43, "1451": 43, "denizevr": 43, "fmt_cuda_test": 43, "1440": 43, "1443": 43, "1445": 43, "1446": 43, "1450": 43, "egorpugin": 43, "cmath": 43, "m_pi": 43, "141592653589793": 43, "speedup": 43, "346": 43, "00x": 43, "ostrstream": 43, "195": 43, "13x": 43, "995": [43, 56, 434], "35x": 43, "doubleconv": 43, "59x": 43, "88": [43, 61, 362, 439], "24x": 43, "69767160": 43, "cdaca400": 43, "112f": 43, "11ea": 43, "9fc5": 43, "347c9f83caad": 43, "1336": 43, "1353": 43, "1360": 43, "1361": 43, "1f": 43, "10000000149011612": 43, "1376": 43, "1417": 43, "1287": 43, "max": [43, 59, 61, 62, 69, 75, 127, 206, 207, 275, 331, 394, 415, 437, 439], "170141183460469231731687303715884105727": 43, "interleav": [43, 53, 74, 75, 80, 337, 399, 409], "1351": 43, "tankijong": 43, "1322": 43, "1330": 43, "jeremyong": 43, "1406": 43, "dlaugt": 43, "1393": 43, "1394": 43, "skrdaniel": 43, "1421": 43, "mystr": 43, "1286": 43, "agmt": 43, "1424": 43, "basic_format_parse_context": [43, 44], "basic_parse_context": 43, "1389": 43, "1390": 43, "tajtiattila": 43, "conda": [43, 45], "forg": [43, 45], "feedstock": [43, 45], "1410": 43, "tdegeu": 43, "1285": 43, "1317": 43, "risa2000": 43, "1276": 43, "1291": 43, "1296": 43, "1315": 43, "1332": 43, "1337": 43, "1395": 43, "1418": 43, "jackoalan": 43, "1358": 43, "1407": 43, "dpacbach": 43, "1292": 43, "sanit": 43, "1377": 43, "1273": 43, "1278": 43, "1280": [43, 75], "1281": 43, "1288": 43, "1290": 43, "1301": 43, "1305": 43, "1306": 43, "1309": 43, "1312": 43, "1313": 43, "1316": 43, "1319": 43, "1326": 43, "1328": 43, "1344": 43, "1345": 43, "1347": 43, "1349": 43, "1354": 43, "1362": 43, "1366": 43, "1364": 43, "1370": 43, "1371": 43, "1385": 43, "1388": 43, "1397": 43, "1414": 43, "1416": 43, "1422": 43, "1427": 43, "1431": 43, "hhb": 43, "neheb": 43, "vedranmilet": 43, "leonklingel": 43, "kent": [43, 78], "5a4b24613ba16cc689977c3b5bd8274a3ba1dd1f": 43, "fmt_use_grisu": 43, "unknown_mac64_clang10": 43, "54883977": 43, "9fe8c000": 43, "4e28": 43, "11e9": 43, "8bde": 43, "272d122e7c52": 43, "eel": 43, "draft": 43, "basic_format_context": 43, "1199": 43, "952": [43, 55, 57, 433, 435], "618": 43, "1169": 43, "1171": 43, "benefici": [43, 44], "stryku": 43, "percentag": 43, "1060": 43, "1069": 43, "1071": 43, "gawain": 43, "bolton": 43, "1004": 43, "1012": 43, "1019": 43, "12345": 43, "howard": 43, "hinnant": 43, "vformat": [43, 44], "993": [43, 56, 434], "994": [43, 56, 434], "print_color": 43, "1121": 43, "sighingnow": 43, "1098": 43, "1099": 43, "1022": 43, "eliaskosunen": 43, "buffer_context": 43, "basic_writ": 43, "wwriter": 43, "misus": 43, "refactor": 43, "fputw": 43, "_setmod": 43, "1229": 43, "1243": 43, "1254": 43, "sylveon": 43, "uintptr_t": 43, "ibm": 43, "1059": 43, "sublim": 43, "2b": 43, "1037": 43, "kronuz": 43, "fmt_enforce_compile_str": [43, 44], "1231": 43, "cmake_build_typ": 43, "subproject": [43, 45], "1081": 43, "1039": 43, "1078": 43, "1091": 43, "1103": 43, "1177": 43, "jasonszang": 43, "olafh": 43, "lecetem": 43, "1049": 43, "1051": 43, "1083": 43, "1113": 43, "1114": 43, "1146": 43, "1180": 43, "1250": 43, "1252": 43, "1265": 43, "mikelui": 43, "foonathan": 43, "jwake": 43, "kaisb": 43, "sdebionn": 43, "1123": 43, "infinit": 43, "1268": 43, "1056": 43, "1058": 43, "abolz": 43, "1064": 43, "1188": 43, "1062": 43, "1134": 43, "1147": 43, "1148": 43, "misplac": 43, "1173": 43, "1072": 43, "1129": 43, "1153": 43, "1155": 43, "1210": 43, "1222": 43, "alabuzhev": 43, "discov": 43, "1124": 43, "1127": 43, "1132": [43, 58, 436], "1135": 43, "1136": 43, "1141": 43, "1142": 43, "1178": 43, "1179": 43, "1194": 43, "freebsd": 43, "hurd": 43, "1043": 43, "jackyf": 43, "998": 43, "1006": 43, "1008": 43, "1011": 43, "1025": 43, "1027": 43, "1028": 43, "1029": 43, "1030": 43, "1031": 43, "1054": 43, "1063": 43, "1068": 43, "1074": 43, "1075": 43, "1079": 43, "1086": 43, "1088": 43, "1089": 43, "1094": 43, "1101": 43, "1102": 43, "1105": 43, "1107": 43, "1115": 43, "1117": 43, "1118": 43, "1120": 43, "1139": 43, "1140": 43, "1143": 43, "1144": 43, "1150": 43, "1151": 43, "1152": 43, "1154": 43, "1156": 43, "1159": 43, "1175": 43, "1181": 43, "1186": 43, "1187": 43, "1191": 43, "1197": 43, "1200": 43, "1203": 43, "1205": 43, "1206": 43, "1213": 43, "1214": 43, "1217": 43, "1228": 43, "1230": 43, "1232": 43, "1235": 43, "1236": 43, "1240": 43, "morinmorin": 43, "ricco19": 43, "remyabel": 43, "rcane": 43, "mocab": 43, "cjdb": 43, "daandemey": 43, "starkmapp": 43, "chrono_liter": [43, 44], "100m": [43, 44], "3h": [43, 44], "15min": [43, 44], "strikethrough": 43, "961": 43, "967": 43, "973": 43, "rgb": 43, "rakete1111": 43, "968": 43, "974": [43, 61, 439], "terminal_color": 43, "stopn": 43, "vari": 43, "50405925": 43, "dbfc7e00": 43, "0770": 43, "9b85": 43, "333fab0af9ac": 43, "parameter": [43, 44], "880": 43, "881": 43, "883": 43, "885": 43, "897": 43, "920": [43, 55, 433], "my_n": 43, "my_str": 43, "898": 43, "924": [43, 55, 57, 433, 435], "xziar": 43, "867": 43, "628": 43, "891": 43, "_u": 43, "numpunct": 43, "do_thousands_sep": 43, "567": [43, 47], "921": [43, 55, 57, 433, 435], "make_printf_arg": 43, "make_wprintf_arg": 43, "934": [43, 55, 57, 433, 435], "tnovotni": 43, "wparse_context": 43, "wformat_parse_context": 43, "basic_fixed_buff": 43, "supersed": 43, "873": 43, "902": 43, "superfunc": 43, "878": 43, "877": 43, "901": 43, "906": [43, 55, 433], "979": [43, 61, 439], "kookjr": 43, "darkdimiu": 43, "hecticseren": 43, "pkgconfig": 43, "consum": 43, "meson": [43, 45], "916": 43, "colemicken": 43, "909": [43, 55, 57, 433, 435], "926": [43, 55, 57, 433, 435], "937": [43, 55, 433], "953": [43, 55, 57, 433, 435], "959": [43, 55, 433], "andreasschoenl": 43, "zefz": 43, "914": [43, 55, 57, 433, 435], "895": 43, "913": 43, "905": [43, 55, 433], "882": 43, "886": 43, "933": 43, "941": [43, 55, 57, 433, 435], "931": [43, 55, 57, 433, 435], "943": [43, 55, 57, 433, 435], "954": [43, 55, 57, 433, 435], "956": 43, "962": 43, "965": 43, "977": 43, "983": 43, "989": [43, 56, 57, 434, 435], "luthaf": 43, "stevenhov": 43, "christinaa": 43, "lgritz": 43, "liuping1997": 43, "870": 43, "865": 43, "868": 43, "hhggit": 43, "872": 43, "875": 43, "candygumdrop": 43, "wmemory_buff": 43, "874": [43, 58, 436], "5x": 43, "22x": 43, "39": [43, 55, 56, 57, 58, 59, 60, 61, 153, 433, 434, 435, 436, 437, 438, 439], "58": [43, 47, 59, 437], "35": [43, 59, 437], "66x": 43, "stringstream": 43, "73": 43, "collis": [43, 44, 61, 439], "783": 43, "fmt_deprecated_color": 43, "stringpiec": 43, "preliminari": 43, "_t": 43, "814": 43, "819": 43, "mikepopoloski": 43, "newlib": 43, "nano": 43, "839": 43, "teajai": 43, "fr": 43, "801": 43, "810": 43, "qi": 43, "806": 43, "808": 43, "807": 43, "804": 43, "809": 43, "811": 43, "822": 43, "827": 43, "830": 43, "838": 43, "843": 43, "844": 43, "851": 43, "852": 43, "854": 43, "henryiii": 43, "eliasdal": 43, "fmt_extended_color": 43, "vprint_color": 43, "762": 43, "767": 43, "766": 43, "776": 43, "vformat_to_n": 43, "764": 43, "769": 43, "is_rang": 43, "is_tuple_lik": 43, "751": 43, "759": 43, "drrlvn": 43, "fmt_pedant": 43, "736": 43, "2013": 43, "793": 43, "795": 43, "on_align": 43, "750": 43, "756": 43, "778": 43, "768": [43, 60, 438], "742": 43, "748": 43, "752": 43, "770": 43, "775": 43, "779": 43, "780": 43, "790": 43, "792": 43, "dark": 43, "passeng": 43, "fmt_variadic_": 43, "propos": [43, 62, 78], "p0645r2": 43, "wg21": 43, "p0645": 43, "rncy9q": 43, "v5": 43, "relax": 43, "fourti": 43, "2jq1dv": 43, "_cppv2n3fmt11format_to_ne8outputitnst6size_te11string_viewdprk4arg": 43, "298": 43, "_cppv2n3fmt14formatted_sizee11string_viewdprk4arg": 43, "_cppv2n3fmt16make_format_argsedprk4arg": 43, "vreport_error": 43, "report_error": 43, "687": 43, "694": 43, "distinguish": 43, "format_str": [43, 44], "735": 43, "712": 43, "time_t": [43, 44], "localtim": [43, 44], "724": 43, "607": 43, "virgiliofornazin": 43, "favor": 43, "606": 43, "515": 43, "614": 43, "617": 43, "661": 43, "680": 43, "ibel": 43, "mihaitodor": 43, "johnthagen": 43, "postfix": 43, "636": [43, 58, 436], "397": [43, 58, 436], "irrelev": 43, "qmake": 43, "pro": 43, "641": 43, "cowo78": 43, "gradl": 43, "649": 43, "fmt_cppformat": 43, "char_width": 43, "616": 43, "aroig": 43, "brace": [43, 44, 47], "638": [43, 59, 437], "sourcelink_suffix": 43, "497": 43, "gingg": 43, "626": 43, "640": 43, "656": 43, "679": 43, "681": [43, 59, 437], "705": 43, "715": 43, "717": [43, 60, 438], "720": 43, "723": 43, "726": 43, "730": 43, "739": 43, "larsgullik": 43, "christianparpart": 43, "653": 43, "67371": 43, "682": [43, 60, 438], "fno": 43, "655": 43, "chenxiaolong": 43, "remove_prefix": 43, "tighter": 43, "648": 43, "poorli": 43, "644": 43, "wostream": 43, "650": 43, "openbsd": 43, "660": 43, "hubslav": 43, "732": 43, "dankm": 43, "mismatch": 43, "664": 43, "734": 43, "668": 43, "675": 43, "utf8": 43, "676": 43, "vgalka": 43, "sl": 43, "689": 43, "686": 43, "696": 43, "sebkoenig": 43, "narrow": [43, 46], "690": 43, "729": 43, "725": 43, "738": 43, "sv1990": 43, "to_wstr": [43, 44], "559": 43, "571": 43, "578": 43, "thelostt": 43, "581": 43, "crusad": 43, "mike": [43, 45], "547": 43, "rollbear": 43, "563": 43, "yelnats321": 43, "condition": 43, "583": 43, "fmt_variadic_const": 43, "591": 43, "ludekvodicka": 43, "bugfix": 43, "bad": 43, "segfault": 43, "551": 43, "ill": 43, "542": 43, "580": 43, "xylosp": 43, "605": 43, "602": 43, "545": 43, "582": 43, "573": 43, "609": 43, "553": 43, "noreturn": 43, "549": [43, 59, 437], "555": [43, 58, 436], "alexanderbock": 43, "yumetodo": 43, "vaderi": 43, "jpcima": 43, "manu343726": 43, "gnuinstalldir": 43, "610": 43, "536": 43, "556": 43, "evgen231": 43, "cppformat": 43, "527": 43, "maddinat0r": 43, "326": 43, "441": 43, "glebov": 43, "andrei": 43, "453": 43, "490": 43, "476": 43, "339": [43, 58, 436], "340": [43, 58, 436], "mojobrendan": 43, "manyleg": 43, "spacemoos": 43, "360": [43, 58, 61, 436, 439], "335": 43, "331": 43, "basiccontainerwrit": 43, "450": 43, "polyvertex": 43, "466": 43, "60": [43, 59, 437], "olivier80": 43, "444": [43, 59, 437], "439": 43, "format_system_error": [43, 44], "323": 43, "526": 43, "gmtime": [43, 44], "396": [43, 58, 436], "codicodi": 43, "namedarg": 43, "arglist": 43, "389": 43, "390": [43, 58, 436], "formatbuf": 43, "493": 43, "effzeh": 43, "480": 43, "491": 43, "stringwrit": 43, "357": [43, 58, 436], "494": 43, "499": [43, 60, 438], "483": 43, "485": 43, "482": 43, "475": 43, "473": 43, "414": 43, "zhaohuaxishi": 43, "pkesten": 43, "dschmidt": 43, "0x414c": 43, "511": 43, "513": 43, "354": [43, 58, 436], "418": 43, "419": 43, "420": 43, "bjoernthiel": 43, "nioshd": 43, "logicalknight": 43, "393": [43, 58, 436], "pwm1234": 43, "fmt_version": 43, "411": 43, "fmt_null": 43, "409": 43, "format_float": 43, "413": 43, "507": 43, "signbit": [43, 62, 69], "423": 43, "425": 43, "intrins": 43, "cli": [43, 79], "457": 43, "calumr": 43, "android": [43, 45], "458": [43, 59, 437], "gachapen": 43, "lean": 43, "503": 43, "quentin01": 43, "455": 43, "ericwf": 43, "505": [43, 59, 437], "469": 43, "502": 43, "richardeakin": 43, "433": 43, "403": 43, "410": 43, "510": 43, "chenhayat": 43, "trozen": 43, "codegen": 43, "519": 43, "479": 43, "thousand": [43, 47], "353": 43, "373": [43, 58, 59, 436, 437], "367": [43, 58, 436], "318": 43, "385": [43, 58, 436], "361": 43, "nmoehrl": 43, "327": 43, "345": 43, "381": [43, 58, 436], "358": [43, 58, 436], "388": 43, "355": [43, 58, 436], "350": 43, "348": 43, "402": 43, "405": 43, "dpantel": 43, "hghwng": 43, "arvedarv": 43, "janhellwig": 43, "320": [43, 75, 139], "333": 43, "347": 43, "362": [43, 58, 436], "smellman": 43, "307": 43, "283": 43, "year_": 43, "month_": 43, "day_": 43, "235": 43, "305": 43, "setlocal": 43, "lc_all": 43, "en_u": [43, 44, 47], "265": 43, "lld": 43, "231": 43, "312": 43, "dean0x7d": 43, "speth": 43, "243": 43, "249": [43, 60, 438], "4831417": 43, "11614060": 43, "b9e826d2": 43, "9c36": 43, "11e5": 43, "8666": 43, "d4131bf503ef": 43, "11614080": 43, "6ac903cc": 43, "9c37": 43, "8165": 43, "26df6efae364": 43, "313": 43, "239": 43, "248": [43, 60, 438], "252": [43, 59, 60, 437, 438], "258": [43, 60, 438], "260": 43, "309": 43, "readmecrit": 43, "jwilk": 43, "259": 43, "274": 43, "277": 43, "286": 43, "291": 43, "296": 43, "308": [43, 59, 437], "pweiskirch": 43, "280": 43, "285": 43, "273": 43, "271": 43, "newnon": 43, "argmap": 43, "262": [43, 60, 438], "251": [43, 60, 438], "nickhutchinson": 43, "245": 43, "macdem": 43, "304": 43, "googletest": 43, "268": [43, 60, 438], "octoploid": 43, "biicod": 43, "discontinu": 43, "fmt_cmake_dir": 43, "299": 43, "267": 43, "fmt_doc": 43, "fmt_instal": 43, "fmt_test": [43, 45], "264": 43, "ndk": [43, 45], "mingw32": 43, "241": 43, "2015": [43, 46, 59, 74, 437], "169": 43, "173": [43, 59, 437], "174": [43, 59, 437], "jambore": 43, "206": 43, "207": [43, 61, 439], "141": [43, 59, 437], "shauren": 43, "168": [43, 60, 438], "232": 43, "223": 43, "217": 43, "226": [43, 59, 437], "201": 43, "140": 43, "basicstringref": 43, "159": 43, "183": [43, 58, 436], "basiccstringref": 43, "185": 43, "197": 43, "198": 43, "msvc2015": 43, "215": [43, 59, 437], "dmkrepo": 43, "fmt_use_windows_h": 43, "171": 43, "alfp": 43, "nominmax": 43, "fmt_win_minmax": 43, "152": [43, 59, 437], "153": 43, "154": 43, "devo2012": 43, "fmt_use_iostream": 43, "205": 43, "208": 43, "jodithetigg": 43, "isinf": [43, 62, 69], "230": 43, "143": 43, "149": [43, 59, 437], "cmake_install_prefix": 43, "178": 43, "debian": [43, 45, 49], "stretch": 43, "sid": 43, "launchpad": 43, "155": 43, "libcppformat1": 43, "fedora": 43, "admin": 43, "fedoraproject": 43, "pkgdb": 43, "dave": 43, "johansen": 43, "homebrew": [43, 45], "brew": [43, 45], "sh": [43, 45, 49, 59, 65, 66, 71, 77, 79, 437], "157": 43, "ortho": 43, "anatolii": 43, "bulukin": 43, "thedocument": 43, "pip": [43, 59, 61, 77, 437, 439], "209": 43, "xentec": 43, "160": 43, "162": [43, 59, 437], "165": [43, 59, 437], "210": [43, 61, 439], "syohex": 43, "177": 43, "131": 43, "139": [43, 59, 437], "129": [43, 59, 437], "130": 43, "132": [43, 59, 437], "cstamford": 43, "144": [43, 58, 436], "msvc2012": 43, "148": 43, "anonym": 43, "192": 43, "msvc2010": 43, "188": [43, 59, 437], "95": [43, 74], "96": [43, 59, 74, 437, 440], "114": 43, "135": 43, "142": 43, "145": 43, "146": 43, "158": 43, "163": [43, 59, 437], "175": 43, "190": 43, "191": 43, "194": [43, 59, 437], "196": 43, "216": [43, 59, 437], "218": 43, "220": 43, "229": 43, "233": 43, "236": 43, "281": 43, "289": 43, "seanmiddleditch": 43, "carterli": 43, "fmatthew5876": 43, "levskiweng": 43, "rpopescu": 43, "cubicool": 43, "jkfly": 43, "inguin": 43, "jopie64": 43, "mostli": 43, "ppc64": 43, "ppc64le": 43, "s390x": 43, "suno": 43, "i386": 43, "138": 43, "180": 43, "202": [43, 59, 437], "225": 43, "hat": 43, "bugzilla": 43, "1260297": 43, "redhat": 43, "show_bug": 43, "cgi": 43, "crtdbg": 43, "_crtdbg_map_alloc": 43, "211": 43, "212": 43, "zc": 43, "214": 43, "slavanap": 43, "2008": 43, "bcc32": 43, "227": 43, "228": 43, "basicarraywrit": 43, "105": [43, 59, 437], "122": 43, "arraywrit": 43, "115": 43, "116": [43, 59, 437], "118": [43, 59, 437], "121": [43, 52, 59, 437], "objectx": 43, "119": 43, "trenthouliston": 43, "104": [43, 47], "mariadeanton": 43, "franramirez688": 43, "sdk": [43, 45], "107": 43, "windowserror": 43, "110": [43, 59, 437], "111": [43, 47], "112": 43, "117": 43, "basicwrit": 43, "109": [43, 59, 437], "124": 43, "94": [43, 59, 437], "103": [43, 59, 437], "79": 43, "86": [43, 59, 437], "carpet": 43, "car": 43, "procedur": 43, "fmt_share": 43, "build_shared_lib": [43, 45], "memorywrit": 43, "69": 43, "titl": [43, 62], "glsl": 43, "glgetstr": 43, "gl_version": 43, "magnitud": [43, 47, 57, 435], "mobil": 43, "bootstrap": [43, 45], "theme": [43, 59, 437], "ryan": 43, "roemer": 43, "4792130": 43, "cd256436": 43, "5de3": 43, "11e4": 43, "9a62": 43, "c077d0c2b003": 43, "4792131": 43, "cd29896c": 43, "8f59": 43, "cac952942bf0": 43, "elaps": 43, "0x": [43, 47], "02x": 43, "appveyor": 43, "feed": 43, "fmt_variad": 43, "bypass": 43, "prone": 43, "understood": 43, "hopefulli": 43, "lowercas": 43, "capitalizedword": 43, "progress": [43, 61, 66, 439], "0x1": 43, "5p": 43, "sink": 43, "noaction": 43, "nullsink": 43, "filesink": 43, "colorwrit": 43, "ansiterminalsink": 43, "shouldn": [43, 213], "throwsystemerror": 43, "filenam": [43, 61, 79, 439], "errno": [43, 44], "fmt_": 44, "surround": [44, 47], "outputit": 44, "format_to_n_result": 44, "nvme4arz8": 44, "kevin_namespaci": 44, "film": 44, "house_of_card": 44, "american_beauti": 44, "se7en": 44, "whole": 44, "enable_if_t": 44, "is_base_of_v": 44, "erasur": [44, 46], "footprint": [44, 46], "b9pbasvzc": 44, "assumpt": [44, 61, 439], "custom_memory_buff": 44, "inline_buffer_s": 44, "custom_alloc": 44, "custom_str": 44, "occasion": 44, "op": [44, 52, 59, 62, 68, 73, 75, 78, 79, 81, 101, 139, 154, 190, 195, 326, 364, 384, 406, 407, 408, 437, 440], "monost": 44, "__cpp_lib_vari": 44, "feature_test": 44, "bottleneck": 44, "color_typ": 44, "builder": 44, "pub": 44, "opengroup": 44, "onlinepub": 44, "009695399": 44, "is_char": 44, "wstring_view": 44, "wformat_context": 44, "nearli": 44, "graphem": 44, "hasn": 44, "p7h6cd6o3": 45, "fetchcont": 45, "fetchcontent_declar": 45, "git_repositori": 45, "git_tag": 45, "e69e5f977d458f2650bb346dadf2ad30c5320281": 45, "fetchcontent_makeavail": 45, "unix": 45, "dbuild_shared_lib": 45, "cmake_position_independent_cod": 45, "dcmake_position_independent_cod": 45, "nl": [45, 77], "dimitri": 45, "mkdocstr": 45, "pymdown": 45, "build2": 45, "cppget": 45, "unreleas": 45, "manifest": 45, "role": 45, "prerequisit": [45, 62], "pkg": [45, 77], "buildfil": 45, "mylib": 45, "bdep": 45, "wrapdb": 45, "mesonbuild": 45, "fmt_dep": 45, "get_vari": 45, "my_build_target": 45, "default_opt": 45, "default_librari": 45, "fmt_header_only_dep": 45, "mk": 45, "hide": 46, "div": [46, 62, 69, 178, 333], "h2": 46, "inspir": 46, "vulner": 46, "href": [46, 47], "anywher": 46, "ov": [46, 47, 61, 439], "\u0441\u043b\u0430\u0432\u0430": 46, "\u0443\u043a\u0440\u0430\u0457\u043d\u0456": 46, "irrespect": [46, 313], "codepag": 46, "libari": 46, "gap": 46, "tzu4kf": 46, "blender": 46, "curli": 47, "unchang": 47, "grammar": 47, "replacement_field": 47, "arg_id": 47, "format_spec": 47, "chrono_format_spec": 47, "id_start": 47, "id_continu": 47, "formal": [47, 64], "mini": [47, 62, 73], "thou": 47, "shalt": 47, "lt": [47, 55, 56, 57, 58, 59, 60, 61, 62, 69, 433, 434, 435, 436, 437, 438, 439], "presenc": 47, "signal": [47, 59, 75, 194, 437], "absent": 47, "tr": 47, "td": 47, "nonneg": 47, "minu": 47, "0b": 47, "upper": [47, 80, 406], "000000120": 47, "inf": [47, 65, 286, 406], "gt": [47, 55, 56, 57, 58, 59, 60, 61, 62, 69, 433, 434, 435, 436, 437, 438, 439], "uppercas": 47, "chrono_spec": 47, "conversion_spec": 47, "literal_char": 47, "padding_modifi": 47, "locale_modifi": 47, "chrono_typ": 47, "abbrevi": 47, "sat": 47, "saturdai": 47, "nov": 47, "novemb": 47, "floor": [47, 62, 69, 73, 75, 176, 318, 333], "centuri": 47, "od": 47, "oe": 47, "clock": [47, 79], "oh": 47, "oi": 47, "jan": 47, "001": [47, 56, 434], "om": 47, "pm": 47, "horizont": 47, "ou": 47, "sundai": 47, "ow": 47, "ei": 47, "8601": 47, "0430": 47, "zone": 47, "calendar": 47, "range_format_spec": 47, "range_typ": 47, "range_underlying_spec": 47, "bracket": [47, 80], "mutual": [47, 302], "101": [47, 59, 437], "108": [47, 59, 437], "abra": 47, "cad": 47, "abracadabra": 47, "140000": 47, "oct": 47, "2a": 47, "52": 47, "0x2a": 47, "052": 47, "0b101010": 47, "04x": 47, "0x00": 47, "draw": 47, "tm_year": 47, "tm_mon": 47, "tm_mdai": 47, "tm_hour": 47, "tm_min": 47, "tm_sec": 47, "1234567890": 47, "890": 47, "workspac": 48, "bazelvers": 48, "bzlmod": 48, "central": [48, 55, 433], "registri": 48, "bazelbuild": 48, "bazel_dep": 48, "head": [48, 62, 402, 403, 404, 409, 425], "local_path_overrid": 48, "module_nam": 48, "cxxflag": 49, "fsanit": 49, "dfuzzing_build_mode_unsafe_for_product": 49, "dfmt_safe_duration_cast": 49, "dfmt_fuzz": 49, "dfmt_fuzz_linkmain": 49, "dfmt_fuzz_ldflag": 49, "ubsan_opt": 49, "halt_on_error": 49, "out_chrono": 49, "fuzzer_chrono_dur": 49, "ol": 50, "li": 50, "memset": 50, "l1": [50, 52, 53, 57, 74, 80, 139, 240, 272, 399, 435], "subchannel": 50, "python3": [50, 58, 59, 61, 77, 436, 437, 439], "mem_typ": 50, "chip_id": [50, 52], "start_addr": 50, "post": [51, 62, 79, 324], "get_start": 51, "pythonpath": [51, 61, 66, 77, 439], "tt_metal_hom": [51, 59, 77, 79, 437], "pytest": [51, 59, 65, 66, 70, 71, 79, 437, 440], "svvv": 51, "test_device_profil": 51, "test_device_log": 51, "fro": 51, "golden": [51, 62, 70, 440], "artifact": [51, 59, 437], "popul": [51, 79, 225, 282], "populate_golden": 51, "wipe": 51, "diff": 51, "legitim": 51, "csv": [51, 59, 65, 79, 437], "profile_log_device_": 51, "testnam": 51, "tt_gdb": 52, "breakpoint": 52, "test_run_datacopi": 52, "corecoord": [52, 68, 75], "run_data_copy_multi_til": 52, "2048": [52, 440], "ld": 52, "risc": [52, 79], "debug_mod": 52, "datacopi": 52, "build_kernels_for_riscv": 52, "test_compile_datacopi": 52, "brisc": [52, 79], "hang": [52, 55, 433], "debugg": 52, "dcapalija": 52, "fw": [52, 55, 56, 57, 58, 60, 79, 433, 434, 435, 436, 438], "dma": 52, "label_nam": 52, "riscv": 52, "ncrisc": [52, 79], "trisc": 52, "wherev": [52, 68], "dummi": 52, "dataflow_api": 52, "kernel_main": 52, "dst_addr": 52, "get_arg_v": 52, "dst_noc_x": 52, "dst_noc_i": 52, "num_til": [52, 68], "cb_id_out0": 52, "tile": [52, 53, 55, 56, 59, 74, 75, 79, 80, 87, 91, 93, 94, 95, 96, 97, 104, 106, 110, 111, 113, 114, 123, 124, 132, 138, 142, 144, 146, 160, 162, 164, 165, 166, 167, 169, 170, 173, 174, 183, 200, 205, 210, 212, 235, 236, 244, 246, 248, 251, 254, 255, 258, 264, 270, 274, 279, 285, 292, 303, 316, 329, 345, 347, 350, 354, 356, 359, 361, 363, 367, 370, 375, 377, 379, 381, 388, 392, 394, 395, 396, 406, 407, 408, 413, 414, 415, 416, 419, 420, 422, 433, 434, 437], "ublock": 52, "ublock_size_byt": 52, "get_tile_s": 52, "ublock_size_til": 52, "greet": 52, "prompt": [52, 59, 437], "hover": 52, "hit": 52, "grei": 52, "arrow": 52, "press": 52, "grai": 52, "cursor": 52, "trisc0": [52, 79], "notifi": 52, "agrebenisan": 52, "hyperlink": 52, "screen": 52, "536870912": 52, "chose": 52, "movement": [53, 62], "topologi": [53, 77], "deploy": 53, "n300": 53, "t3000": [53, 76, 77], "t7000": 53, "gather": 53, "shard": [53, 62, 139, 240, 272, 399, 409, 415], "bfloat16": [53, 55, 56, 57, 59, 60, 70, 72, 74, 75, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 182, 183, 185, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 410, 411, 412, 413, 414, 416, 419, 420, 421, 422, 433, 434, 435, 437, 438, 440], "bfloat8_b": [53, 57, 70, 74, 79, 80, 91, 93, 94, 96, 97, 106, 110, 114, 132, 142, 146, 165, 166, 167, 169, 170, 210, 212, 230, 235, 236, 254, 255, 270, 274, 279, 285, 292, 316, 345, 347, 350, 354, 361, 375, 377, 379, 381, 388, 392, 419, 422, 435], "height": [53, 75, 79, 80, 129, 139, 172, 173, 194, 272, 275, 396, 398], "tologi": 53, "mesh": [53, 77], "toru": 53, "scatter": [53, 62, 69], "sram": [55, 433], "bfp8": [55, 102, 433], "tile_layout": [55, 56, 57, 60, 67, 70, 80, 91, 93, 94, 96, 97, 110, 114, 129, 132, 146, 154, 210, 230, 235, 236, 254, 255, 270, 274, 279, 285, 337, 347, 377, 379, 381, 398, 401, 419, 422, 433, 434, 435, 438, 440], "from_torchcache_path": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438], "posixpath": [55, 56, 57, 58, 433, 434, 435, 436], "comparison_mode_pcc": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438, 440], "9999": [55, 56, 57, 58, 60, 70, 433, 434, 435, 436, 438, 440], "enable_comparison_mod": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438, 440], "enable_detailed_buffer_report": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438, 440], "enable_detailed_tensor_report": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438, 440], "enable_fast_runtime_mod": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438, 440], "enable_graph_report": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438, 440], "enable_log": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438, 440], "enable_model_cach": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438], "model_cache_path": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438], "report_nam": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438, 440], "root_report_path": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438], "throw_exception_on_fallback": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438], "tmp_dir": [55, 56, 57, 58, 60, 61, 433, 434, 435, 436, 438, 439], "decor": [55, 56, 57, 58, 59, 60, 68, 78, 433, 434, 435, 436, 437, 438], "operation_decor": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438], "758": [55, 56, 57, 58, 433, 434, 435, 436], "logical_xor": [55, 56, 57, 58, 62, 69, 433, 434, 435, 436], "xlogi": [55, 56, 57, 58, 62, 69, 422, 433, 434, 435, 436], "907": [55, 57, 433, 435], "908": [55, 57, 433, 435], "atan2": [55, 56, 57, 58, 62, 69, 110, 433, 434, 435, 436], "hypot": [55, 56, 57, 58, 62, 69, 210, 433, 434, 435, 436], "910": [55, 57, 433, 435], "nextaft": [55, 56, 57, 58, 62, 69, 433, 434, 435, 436], "911": [55, 57, 433, 435], "polyv": [55, 56, 57, 58, 62, 69, 433, 434, 435, 436], "isclos": [55, 56, 57, 58, 62, 69, 433, 434, 435, 436], "all_gath": [55, 56, 57, 58, 433, 434, 435, 436], "915": [55, 57, 433, 435], "pearson_correlation_coeffici": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438], "919": [55, 57, 433, 435], "conv2d": [55, 56, 57, 58, 60, 62, 73, 75, 433, 434, 435, 436, 438], "unsqueeze_to_4d": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438], "922": [55, 57, 433, 435], "923": [55, 57, 433, 435], "to_torch": [55, 56, 57, 58, 60, 62, 68, 69, 70, 74, 433, 434, 435, 436, 438, 440], "to_devic": [55, 56, 57, 58, 60, 62, 69, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 104, 106, 107, 109, 110, 111, 113, 114, 123, 125, 127, 132, 133, 134, 136, 138, 142, 144, 145, 146, 147, 148, 152, 153, 156, 160, 162, 164, 167, 168, 170, 171, 174, 176, 177, 179, 183, 188, 192, 197, 201, 203, 205, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 227, 229, 230, 231, 234, 235, 236, 239, 240, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 260, 262, 263, 265, 266, 267, 270, 272, 274, 276, 279, 280, 284, 285, 287, 288, 289, 292, 293, 295, 301, 304, 305, 306, 308, 309, 311, 314, 316, 318, 319, 320, 323, 329, 330, 334, 336, 341, 343, 345, 347, 348, 350, 354, 356, 359, 361, 363, 364, 366, 368, 370, 373, 375, 376, 377, 379, 380, 381, 382, 388, 390, 392, 394, 398, 399, 413, 419, 420, 421, 422, 433, 434, 435, 436, 438], "925": [55, 57, 433, 435], "from_devic": [55, 56, 57, 58, 59, 60, 62, 69, 433, 434, 435, 436, 437, 438], "allocate_tensor_on_devic": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438], "copy_host_to_device_tensor": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438], "927": [55, 57, 433, 435], "928": [55, 57, 433, 435], "929": [55, 57, 433, 435], "realloc": [55, 56, 57, 58, 60, 62, 69, 433, 434, 435, 436, 438], "load_tensor": [55, 56, 57, 58, 59, 60, 62, 69, 433, 434, 435, 436, 437, 438], "930": [55, 57, 433, 435], "dump_tensor": [55, 56, 57, 58, 60, 62, 69, 433, 434, 435, 436, 438], "as_tensor": [55, 56, 57, 58, 60, 62, 69, 433, 434, 435, 436, 438], "arang": [55, 56, 57, 58, 62, 69, 74, 433, 434, 435, 436], "935": [55, 433], "mse_loss": [55, 56, 57, 58, 62, 69, 433, 434, 435, 436], "936": [55, 57, 58, 433, 435, 436], "l1_loss": [55, 56, 57, 58, 62, 69, 433, 434, 435, 436], "matmul": [55, 56, 57, 58, 59, 62, 69, 240, 425, 433, 434, 435, 436, 437], "938": [55, 57, 433, 435], "942": [55, 57, 433, 435], "addcmul": [55, 56, 57, 58, 62, 69, 97, 433, 434, 435, 436], "addcdiv": [55, 56, 57, 58, 62, 69, 95, 433, 434, 435, 436], "lerp": [55, 56, 57, 58, 62, 69, 236, 433, 434, 435, 436], "948": [55, 57, 433, 435], "logit": [55, 56, 57, 58, 62, 69, 265, 433, 434, 435, 436], "949": [55, 57, 58, 433, 435, 436], "polygamma": [55, 56, 57, 58, 62, 69, 308, 433, 434, 435, 436], "950": [55, 57, 433, 435], "hardshrink": [55, 56, 57, 58, 62, 69, 201, 234, 433, 434, 435, 436], "celu": [55, 56, 57, 58, 62, 69, 125, 433, 434, 435, 436], "951": [55, 57, 58, 433, 435, 436], "softshrink": [55, 56, 57, 58, 62, 69, 368, 433, 434, 435, 436], "clip": [55, 56, 57, 58, 62, 69, 433, 434, 435, 436], "glu": [55, 56, 57, 58, 62, 69, 433, 434, 435, 436], "reglu": [55, 56, 57, 58, 62, 69, 433, 434, 435, 436], "955": [55, 57, 433, 435], "swiglu": [55, 56, 57, 58, 62, 69, 433, 434, 435, 436], "geglu": [55, 56, 57, 58, 62, 69, 433, 434, 435, 436], "958": [55, 57, 433, 435], "960": [55, 57, 58, 433, 435, 436], "torch_tensor": [55, 400, 433], "ttnn_tensor": [55, 400, 433], "98300": [55, 433], "11301": [55, 433], "37592": [55, 433], "64318": [55, 433], "53437": [55, 433], "59434": [55, 433], "69190": [55, 433], "04268": [55, 433], "33346": [55, 433], "20231": [55, 433], "15127": [55, 433], "58303": [55, 433], "00000": [55, 433], "pick": [55, 433], "float16": [55, 433], "80078": [55, 433], "69531": [55, 433], "71484": [55, 433], "33398": [55, 433], "60156": [55, 433], "36523": [55, 433], "73047": [55, 433], "90625": [55, 433], "59766": [55, 433], "83203": [55, 433], "61719": [55, 433], "53516": [55, 433], "nshape": [55, 433], "nlayout": [55, 433], "to_layout": [55, 56, 57, 62, 67, 69, 80, 433, 434, 435], "row_major_layout": [55, 56, 57, 67, 80, 102, 129, 153, 185, 398, 433, 434, 435], "21680": [55, 433], "24316": [55, 433], "19336": [55, 433], "40625": [55, 433], "81641": [55, 433], "50781": [55, 433], "09961": [55, 433], "54688": [55, 433], "70703": [55, 433], "93359": [55, 433], "06787": [55, 433], "75781": [55, 433], "put": [55, 57, 60, 70, 282, 283, 433, 435, 438], "cale": [55, 433], "device_id": [55, 56, 57, 58, 60, 153, 154, 271, 300, 398, 399, 433, 434, 435, 436, 438, 440], "open_devic": [55, 56, 57, 58, 62, 69, 153, 154, 398, 399, 433, 434, 435, 436, 440], "027": [55, 56, 433, 434], "silicondriv": [55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "pci": [55, 56, 57, 58, 59, 60, 72, 433, 434, 435, 436, 437, 438], "040": [55, 433], "init_detect_tt_device_numanod": [55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "numanodeset": [55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "physical_device_id": [55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "pci_bus_id": [55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "041": [55, 433], "bind_area_memory_nodeset": [55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "unabl": [55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "numanod": [55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "membind": [55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "ttsilicondevic": [55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "init_hugepag": [55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "bind_area_to_memory_nodeset": [55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "ch": [55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "hugepag": [55, 56, 57, 58, 59, 60, 77, 433, 434, 435, 436, 437, 438], "893": [55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "082": [55, 433], "ethernet": [55, 56, 57, 58, 60, 433, 434, 435, 436, 438], "clk": [55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "mhz": [55, 56, 57, 58, 59, 60, 433, 434, 435, 436, 437, 438], "manual_se": [55, 56, 57, 60, 61, 70, 433, 434, 435, 438, 439, 440], "torch_input_tensor_a": [55, 433, 440], "torch_input_tensor_b": [55, 433, 440], "input_tensor_a": [55, 85, 90, 91, 92, 93, 94, 95, 96, 97, 107, 109, 110, 114, 132, 145, 146, 147, 156, 177, 179, 188, 192, 197, 209, 210, 216, 219, 229, 230, 231, 235, 236, 240, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 267, 270, 272, 274, 276, 279, 280, 285, 288, 289, 293, 301, 308, 309, 318, 323, 334, 336, 347, 348, 376, 377, 379, 380, 381, 382, 419, 420, 421, 422, 433, 440], "input_tensor_b": [55, 90, 91, 92, 93, 94, 95, 96, 97, 107, 109, 110, 114, 132, 145, 146, 147, 156, 177, 179, 188, 197, 209, 210, 216, 219, 229, 230, 231, 235, 236, 240, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 267, 270, 272, 274, 276, 279, 280, 285, 288, 289, 293, 301, 318, 334, 347, 348, 376, 377, 379, 380, 381, 382, 419, 420, 421, 422, 433, 440], "output_tensor": [55, 60, 68, 75, 84, 86, 90, 91, 93, 101, 103, 108, 115, 116, 117, 118, 119, 120, 122, 131, 135, 145, 146, 151, 153, 154, 156, 158, 159, 161, 163, 165, 166, 169, 175, 188, 190, 191, 192, 193, 195, 197, 199, 208, 211, 213, 220, 221, 222, 223, 224, 227, 229, 231, 233, 237, 242, 243, 247, 250, 252, 253, 256, 258, 260, 267, 269, 284, 285, 288, 289, 291, 294, 310, 317, 322, 326, 327, 328, 331, 332, 344, 345, 346, 347, 352, 353, 355, 357, 358, 360, 365, 371, 372, 374, 376, 379, 381, 382, 384, 387, 389, 401, 412, 419, 420, 433, 438, 440], "obviou": [55, 433], "uint32": [55, 74, 79, 80, 101, 153, 154, 216, 433], "figur": [55, 433], "close_devic": [55, 56, 57, 58, 60, 62, 69, 433, 434, 435, 436, 438, 440], "ttnn": [56, 61, 66, 69, 74, 75, 77, 78, 80, 425, 428, 430, 431, 434, 439], "903": [56, 434], "990": [56, 57, 434, 435], "991": [56, 434], "992": [56, 434], "996": [56, 434], "002": [56, 434], "003": [56, 434], "004": [56, 434], "005": [56, 434], "006": [56, 434], "007": [56, 434], "008": [56, 434], "009": [56, 434], "010": [56, 434], "011": [56, 434], "012": [56, 434], "013": [56, 434], "015": [56, 434], "016": [56, 434], "017": [56, 434], "018": [56, 434], "020": [56, 434], "021": [56, 434], "022": [56, 434], "028": [56, 434], "029": [56, 434], "030": [56, 434], "031": [56, 434], "032": [56, 434], "033": [56, 434], "035": [56, 434], "036": [56, 434], "037": [56, 434], "053": [56, 434], "066": [56, 434], "067": [56, 434], "094": [56, 434], "repeatedli": [56, 434], "enable_program_cach": [56, 57, 434, 435, 440], "1024": [56, 154, 434], "torch_a": [56, 434], "randn": [56, 57, 61, 72, 74, 102, 154, 185, 194, 240, 272, 398, 399, 400, 434, 435, 439], "torch_b": [56, 434], "aslo": [56, 434], "tiliz": [56, 57, 62, 69, 75, 102, 434, 435], "conver": [56, 434], "chunk": [56, 61, 62, 73, 75, 406, 407, 408, 434, 439], "75000": [56, 434], "25000": [56, 434], "50000": [56, 434], "62500": [56, 434], "effeci": [56, 434], "memory_config": [56, 57, 60, 70, 74, 75, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 434, 435, 438, 440], "l1_memory_config": [56, 57, 70, 80, 129, 434, 435, 440], "core_grid": [56, 57, 70, 139, 240, 272, 434, 435], "coregrid": [56, 57, 139, 240, 272, 434, 435], "enjoi": [56, 434], "massiv": [56, 434], "transform": [57, 58, 59, 62, 70, 240, 305, 435, 436, 437], "dispatch_core_typ": [57, 58, 435, 436], "dispatchcoretyp": [57, 58, 435, 436], "eth": [57, 58, 435, 436], "l1_small_siz": [57, 58, 60, 435, 436, 438], "8192": [57, 58, 435, 436], "821": [57, 435], "912": [57, 435], "939": [57, 435], "976": [57, 435], "014": [57, 435], "mul": [57, 75, 190, 195, 326, 384, 435], "softmax": [57, 62, 69, 73, 75, 402, 403, 435], "fashion": [57, 435], "multi_head_attent": [57, 435], "hidden_st": [57, 58, 70, 435, 436], "attention_mask": [57, 402, 403, 435], "query_weight": [57, 435], "query_bia": [57, 435], "key_weight": [57, 435], "key_bia": [57, 435], "value_weight": [57, 435], "value_bia": [57, 435], "output_weight": [57, 435], "output_bia": [57, 435], "num_head": [57, 404, 409, 435], "fallback_reshap": [57, 435], "get_fallback_funct": [57, 435, 440], "batch_siz": [57, 58, 59, 60, 70, 154, 194, 404, 409, 435, 436, 437, 438], "sequence_s": [57, 58, 59, 70, 404, 409, 435, 436, 437], "hidden_s": [57, 58, 70, 409, 435, 436], "head_siz": [57, 402, 403, 404, 409, 435], "attention_scor": [57, 435], "attention_prob": [57, 435], "context_lay": [57, 435], "self_output": [57, 435], "384": [57, 58, 70, 435, 436], "torch_hidden_st": [57, 70, 435], "torch_attention_mask": [57, 58, 435, 436], "torch_query_weight": [57, 435], "torch_query_bia": [57, 435], "torch_key_weight": [57, 435], "torch_key_bia": [57, 435], "torch_value_weight": [57, 435], "torch_value_bia": [57, 435], "torch_output_weight": [57, 435], "torch_output_bia": [57, 435], "ran": [57, 79, 435], "00607705116272": [57, 435], "250946044921875": [57, 435], "fuse": [57, 62, 70, 73, 435], "bia": [57, 60, 70, 75, 114, 196, 228, 240, 435, 438], "optimized_multi_head_attent": [57, 435], "fused_qkv_weight": [57, 435], "fused_qkv_bia": [57, 435], "self_output_weight": [57, 435], "self_output_bia": [57, 435], "num_cores_x": [57, 68, 70, 435], "fused_qkv_output": [57, 435], "split_query_key_value_and_split_head": [57, 62, 69, 435], "attention_softmax_": [57, 62, 69, 435], "context_layer_after_concatenate_head": [57, 435], "concatenate_head": [57, 62, 69, 435], "qkv": [57, 435], "bias": [57, 70, 75, 435], "preprocess_linear_weight": [57, 70, 435], "preprocess_linear_bia": [57, 70, 435], "model_preprocess": [57, 58, 59, 60, 62, 69, 70, 435, 436, 437, 438], "torch_qkv_weight": [57, 435], "torch_qkv_bia": [57, 435], "qkv_weight": [57, 435], "qkv_bia": [57, 435], "optimized_output": [57, 435], "474989175796509": [57, 435], "020017147064208984": [57, 435], "torch_output": [57, 70, 435], "torch_optimized_output": [57, 435], "allclos": [57, 435], "ttnn_config_overrid": [58, 60, 436, 438, 440], "tracer": [58, 60, 61, 62, 67, 425, 436, 438, 439, 440], "47": [58, 59, 436, 437], "184": [58, 436], "356": [58, 436], "359": [58, 436], "366": [58, 436], "368": [58, 436], "369": [58, 436], "370": [58, 436], "371": [58, 436], "372": [58, 436], "374": [58, 436], "375": [58, 102, 185, 436], "378": [58, 436], "379": [58, 436], "380": [58, 59, 436, 437], "383": [58, 436], "391": [58, 436], "392": [58, 436], "394": [58, 436], "395": [58, 436], "398": [58, 436], "399": [58, 436], "set_verbosity_error": [58, 436], "randint": [58, 72, 154, 436], "412": [58, 436], "442": [58, 436], "447": [58, 436], "model_nam": [58, 59, 60, 70, 282, 283, 436, 437, 438], "bert_uncased_l": [58, 436], "4_h": [58, 436], "256_a": [58, 436], "bertconfig": [58, 70, 436], "from_pretrain": [58, 61, 70, 436, 439], "bert": [58, 59, 70, 76, 436, 437], "modeling_bert": [58, 70, 436], "bertselfoutput": [58, 436], "input_tensor": [58, 60, 68, 75, 84, 85, 86, 87, 88, 89, 98, 99, 101, 103, 104, 105, 106, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 148, 149, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 228, 232, 233, 234, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 259, 264, 265, 266, 268, 269, 273, 277, 278, 281, 285, 286, 287, 290, 291, 292, 294, 295, 296, 297, 302, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 401, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 436, 438, 440], "python_env": [58, 59, 61, 66, 77, 436, 437, 439], "huggingface_hub": [58, 59, 436, 437], "file_download": [58, 436], "futurewarn": [58, 436], "resume_download": [58, 436], "resum": [58, 436], "force_download": [58, 436], "ttnn_bert": [58, 70, 436], "ttnn_optimized_bert": [58, 70, 436], "preprocess_model_paramet": [58, 60, 62, 69, 70, 436, 438], "phiyodr": [58, 70, 436], "finetun": [58, 70, 436], "squad2": [58, 70, 436], "num_hidden_lay": [58, 436], "initialize_model": [58, 60, 70, 282, 283, 436, 438], "bertforquestionansw": [58, 436], "custom_preprocessor": [58, 60, 70, 282, 283, 436, 438], "input_id": [58, 436], "vocab_s": [58, 436], "torch_token_type_id": [58, 436], "torch_position_id": [58, 436], "ttnn_bert_input": [58, 436], "preprocess_input": [58, 436], "bert_for_question_answ": [58, 436], "manage_config": [58, 60, 436, 438, 440], "341": [58, 436], "preprocess_model": [58, 59, 60, 62, 69, 436, 437, 438], "_paramet": [58, 60, 436, 438], "343": [58, 436], "634": [58, 436], "weight": [58, 59, 60, 62, 70, 75, 153, 154, 196, 228, 240, 339, 425, 428, 436, 437, 438], "147": [58, 59, 436, 437], "947": [58, 436], "unset": [59, 437], "nuke": [59, 437], "build_script": [59, 79, 437], "build_with_profiler_opt": [59, 79, 437], "jobserv": [59, 437], "unavail": [59, 437], "j1": [59, 437], "backend": [59, 437], "whl": [59, 61, 77, 437, 439], "44": [59, 437], "wheel": [59, 77, 437], "py3": [59, 437], "65": [59, 61, 74, 437, 439], "kb": [59, 437], "edit": [59, 77, 437], "tt_eager": [59, 75, 437], "click": [59, 437], "loguru": [59, 437], "ipywidget": [59, 437], "db": [59, 437], "290ab3a34f2ef0b5a0f89235dc2d40fea83e77de84ed2dc05c": [59, 437], "pyyaml": [59, 61, 437, 439], "cp38": [59, 437], "linux_x86_64": [59, 437], "jupyterlab": [59, 437], "mb": [59, 437], "pyelftool": [59, 437], "py2": [59, 437], "4f": [59, 437], "ed": [59, 437], "863cf4386fe6db3c09333712009ec1c5146a36f3904b469d13": [59, 437], "curtsi": [59, 437], "b7": [59, 437], "0c117d73912c6c2beb1eb0d7d6884f4e79e6e5b5e91eeb34f5": [59, 437], "torchtrail": [59, 437], "manylinux_2_12_x86_64": [59, 437], "manylinux2010_x86_64": [59, 437], "matplotlib": [59, 437], "toolz": [59, 437], "pillow": [59, 61, 437, 439], "manylinux_2_17_x86_64": [59, 437], "manylinux2014_x86_64": [59, 437], "panda": [59, 437], "torch": [59, 61, 62, 67, 68, 72, 74, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 182, 183, 185, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 398, 399, 400, 401, 409, 410, 411, 412, 413, 419, 420, 421, 422, 425, 427, 428, 430, 431, 432, 437, 439], "2bcpu": [59, 437], "199": [59, 437], "dash": [59, 437], "238": [59, 437], "seaborn": [59, 437], "293": [59, 437], "plotli": [59, 437], "traitlet": [59, 437], "widgetsnbextens": [59, 437], "ipython": [59, 60, 61, 437, 438, 439], "798": [59, 437], "widget": [59, 437], "jupyterlab_widget": [59, 437], "comm": [59, 437], "lru": [59, 437], "async_lru": [59, 437], "tomli": [59, 437], "python_vers": [59, 437], "jupyter_serv": [59, 437], "jinja2": [59, 61, 437, 439], "ipykernel": [59, 437], "shim": [59, 437], "notebook_shim": [59, 437], "jupyterlab_serv": [59, 437], "lsp": [59, 437], "jupyter_lsp": [59, 437], "importlib": [59, 61, 437, 439], "importlib_resourc": [59, 437], "importlib_metadata": [59, 437], "jupyter_cor": [59, 437], "tornado": [59, 437], "abi3": [59, 437], "manylinux_2_5_x86_64": [59, 437], "manylinux1_x86_64": [59, 437], "435": [59, 437], "bless": [59, 437], "cwcwidth": [59, 437], "pyrsist": [59, 437], "networkx": [59, 61, 67, 437, 439], "pypars": [59, 437], "kiwisolv": [59, 437], "contourpi": [59, 437], "fonttool": [59, 437], "dateutil": [59, 437], "python_dateutil": [59, 437], "247": [59, 60, 437, 438], "cycler": [59, 437], "pytz": [59, 437], "typing_extens": [59, 437], "dash_html_compon": [59, 437], "dash_tabl": [59, 437], "flask": [59, 437], "dash_core_compon": [59, 437], "pygment": [59, 437], "markdown": [59, 437], "markdown_it_pi": [59, 437], "tenac": [59, 437], "pickleshar": [59, 437], "prompt_toolkit": [59, 437], "386": [59, 437], "stack_data": [59, 437], "backcal": [59, 437], "jedi": [59, 437], "pexpect": [59, 437], "sys_platform": [59, 437], "matplotlib_inlin": [59, 437], "send2trash": [59, 437], "anyio": [59, 437], "jupyter_server_termin": [59, 437], "jupyter_cli": [59, 437], "nbformat": [59, 437], "nbconvert": [59, 437], "257": [59, 60, 437, 438], "jupyter_ev": [59, 437], "websocket": [59, 437], "websocket_cli": [59, 437], "pyzmq": [59, 437], "prometheu": [59, 437], "prometheus_cli": [59, 437], "argon2": [59, 437], "cffi": [59, 437], "argon2_cffi": [59, 437], "terminado": [59, 437], "markupsaf": [59, 61, 437, 439], "asyncio": [59, 437], "nest_asyncio": [59, 437], "psutil": [59, 437], "cp36": [59, 437], "288": [59, 437], "debugpi": [59, 437], "babel": [59, 437], "62": [59, 437], "jsonschema": [59, 437], "json5": [59, 437], "zipp": [59, 61, 437, 439], "platformdir": [59, 437], "wcwidth": [59, 437], "itsdanger": [59, 437], "blinker": [59, 437], "werkzeug": [59, 437], "mdurl": [59, 437], "pure_ev": [59, 437], "asttoken": [59, 437], "parso": [59, 437], "ptyprocess": [59, 437], "exceptiongroup": [59, 437], "idna": [59, 61, 437, 439], "sniffio": [59, 437], "fastjsonschema": [59, 437], "defusedxml": [59, 437], "beautifulsoup4": [59, 437], "jupyterlab_pyg": [59, 437], "pandocfilt": [59, 437], "mistun": [59, 437], "tinycss2": [59, 437], "bleach": [59, 437], "nbclient": [59, 437], "rfc3986": [59, 437], "rfc3986_valid": [59, 437], "logger": [59, 437], "python_json_logg": [59, 437], "rfc3339": [59, 437], "rfc3339_valid": [59, 437], "argon2_cffi_bind": [59, 437], "urllib3": [59, 61, 437, 439], "charset": [59, 61, 437, 439], "charset_norm": [59, 437], "certifi": [59, 61, 437, 439], "jsonschema_specif": [59, 437], "pkgutil": [59, 437], "pkgutil_resolve_nam": [59, 437], "rpd": [59, 437], "rpds_py": [59, 437], "soupsiev": [59, 437], "webencod": [59, 437], "pycpars": [59, 437], "pre_commit": [59, 437], "black": [59, 437], "twine": [59, 437], "yamllint": [59, 437], "docutil": [59, 437], "570": [59, 437], "rtd": [59, 437], "sphinx_rtd_them": [59, 437], "sphinxcontrib": [59, 437], "sphinxcontrib_email": [59, 437], "lxml": [59, 437], "manylinux_2_24_x86_64": [59, 437], "breath": [59, 437], "nbsphinx": [59, 437], "jqueri": [59, 437], "sphinxcontrib_jqueri": [59, 437], "3a": [59, 437], "a8": [59, 437], "3237a93e3a6261bd24edabf3277ca59f64c1710b3d8c7c72a0": [59, 437], "pandoc": [59, 77, 437], "timeout": [59, 437], "pytest_timeout": [59, 437], "6c": [59, 437], "5706d21e6b4dff52e7af12bff9ca126a3f15beb4dff386aa29": [59, 437], "jsbeautifi": [59, 437], "torchvis": [59, 61, 62, 425, 430, 437, 439], "xlsxwriter": [59, 437], "tiktoken": [59, 437], "tqdm": [59, 61, 437, 439], "sentencepiec": [59, 437], "97": [59, 74, 437], "numba": [59, 437], "librosa": [59, 437], "timm": [59, 61, 437, 439], "opencv": [59, 437], "headless": [59, 437], "opencv_python_headless": [59, 437], "cp37": [59, 437], "diffus": [59, 61, 437, 439], "604": [59, 437], "219": [59, 437], "ftfy": [59, 437], "gitpython": [59, 437], "einop": [59, 437], "multiprocess": [59, 437], "70": [59, 437], "py38": [59, 437], "score": [59, 409, 437], "bert_scor": [59, 437], "fsspec": [59, 61, 437, 439], "nodeenv": [59, 437], "cfgv": [59, 437], "virtualenv": [59, 437], "pathspec": [59, 437], "mypi": [59, 437], "mypy_extens": [59, 437], "pyproject_hook": [59, 437], "readme_render": [59, 437], "pkginfo": [59, 437], "toolbelt": [59, 437], "requests_toolbelt": [59, 437], "keyr": [59, 437], "38": [59, 153, 437], "images": [59, 437], "serializinghtml": [59, 437], "sphinxcontrib_serializinghtml": [59, 437], "jsmath": [59, 437], "sphinxcontrib_jsmath": [59, 437], "snowballstemm": [59, 437], "htmlhelp": [59, 437], "sphinxcontrib_htmlhelp": [59, 437], "alabast": [59, 437], "applehelp": [59, 437], "sphinxcontrib_applehelp": [59, 437], "devhelp": [59, 437], "sphinxcontrib_devhelp": [59, 437], "qthelp": [59, 437], "sphinxcontrib_qthelp": [59, 437], "ply": [59, 437], "plumbum": [59, 437], "127": [59, 74, 437], "iniconfig": [59, 437], "pluggi": [59, 437], "0rc8": [59, 437], "editorconfig": [59, 437], "pyarrow": [59, 437], "xxhash": [59, 437], "huggingfac": [59, 61, 437, 439], "330": [59, 437], "aiohttp": [59, 437], "dill": [59, 437], "regex": [59, 61, 437, 439], "777": [59, 437], "filelock": [59, 61, 437, 439], "llvmlite": [59, 437], "0dev0": [59, 437], "soxr": [59, 437], "soundfil": [59, 437], "pooch": [59, 437], "lazy_load": [59, 437], "joblib": [59, 437], "302": [59, 437], "audioread": [59, 437], "scikit_learn": [59, 437], "534": [59, 437], "gitdb": [59, 437], "distlib": [59, 437], "468": [59, 437], "nh3": [59, 437], "secretstorag": [59, 437], "jeepnei": [59, 437], "jaraco": [59, 437], "frozenlist": [59, 437], "240": [59, 60, 437, 438], "async_timeout": [59, 437], "aiosign": [59, 437], "yarl": [59, 437], "multidict": [59, 437], "threadpoolctl": [59, 437], "smmap": [59, 437], "cryptographi": [59, 437], "itertool": [59, 437], "more_itertool": [59, 437], "57": [59, 437], "pyproject": [59, 437], "uninstal": [59, 437], "msg": [59, 437], "profile_thi": [59, 62, 437], "integration_test": [59, 437], "test_perform": [59, 437], "test_t5_for_conditional_gener": [59, 437], "functional_t5": [59, 437], "ttnn_functional_t5": [59, 437], "ops_devic": [59, 437], "cachedir": [59, 437], "pytest_cach": [59, 437], "rootdir": [59, 437], "configfil": [59, 437], "ini": [59, 437], "func_onli": [59, 437], "670": [59, 437], "684": [59, 60, 437, 438], "1202": [59, 437], "llruntim": [59, 437], "watcher": [59, 437], "465": [59, 437], "ttnn_t5": [59, 437], "6ba823894": [59, 437], "484": [59, 437], "487": [59, 437], "489": [59, 437], "721": [59, 437], "359902381896973": [59, 437], "07123565673828": [59, 437], "722": [59, 437], "102": [59, 437], "44269247283137575": [59, 437], "detach": [59, 437], "627": [59, 437], "639": [59, 437], "46": [59, 65, 437], "224": [59, 437], "460": [59, 437], "292": [59, 437], "22393798828125": [59, 437], "322504758834839": [59, 437], "407821983919596": [59, 437], "pd": [59, 437], "glob": [59, 437], "getenv": [59, 437], "get_latest_report": [59, 437], "base_path": [59, 437], "latest_dir": [59, 437], "listdir": [59, 437], "isdir": [59, 437], "getmtim": [59, 437], "latest_profile_report": [59, 437], "df": [59, 437], "read_csv": [59, 437], "resnet": [59, 62, 76, 79, 425, 437], "2024_02_09_01_38_37": [59, 437], "ops_perf_results_resnet_2024_02_09_01_38_37": [59, 437], "math": [59, 79, 90, 139, 156, 157, 188, 189, 197, 198, 229, 231, 232, 252, 253, 256, 257, 260, 261, 267, 268, 288, 289, 290, 376, 382, 437], "fidel": [59, 79, 437], "output_0_w": [59, 437], "output_0_z": [59, 437], "output_0_i": [59, 437], "output_0_x": [59, 437], "output_0_layout": [59, 437], "output_0_data": [59, 437], "output_0_memori": [59, 437], "compileprogram": [59, 437], "load_tensor_ttnn": [59, 437], "python_fallback": [59, 79, 437], "137428381893955": [59, 437], "137428382188762": [59, 437], "294807": [59, 437], "137428382500949": [59, 437], "137428399402163": [59, 437], "16901214": [59, 437], "137428399802068": [59, 437], "137428399873758": [59, 437], "71690": [59, 437], "137428400102635": [59, 437], "137428400351033": [59, 437], "248398": [59, 437], "137428400548071": [59, 437], "137428400792528": [59, 437], "244457": [59, 437], "4391": [59, 437], "reshape_ttnn": [59, 437], "4392": [59, 437], "137450414555424": [59, 437], "137450414599894": [59, 437], "44470": [59, 437], "4393": [59, 437], "137450414740752": [59, 437], "137450414782422": [59, 437], "41670": [59, 437], "tt_dnn_devic": [59, 79, 437], "4394": [59, 437], "bcast_batch": [59, 437], "output_mem_config": [59, 75, 437], "tt_me": [59, 437], "hifi4": [59, 68, 79, 437], "matmulparallelizationstrategi": [59, 437], "multi_cor": [59, 437], "137450414881851": [59, 437], "137450414983440": [59, 437], "101589": [59, 437], "32128": [59, 437], "dev_0_dram_interleav": [59, 437], "4395": [59, 437], "137450415113099": [59, 437], "137450415158748": [59, 437], "45649": [59, 437], "from_device_ttnn": [59, 437], "4396": [59, 437], "137450415235897": [59, 437], "137450453493048": [59, 437], "38257151": [59, 437], "fold_batch_norm2d_into_conv2d": [60, 438], "82": [60, 438], "nullopt": [60, 74, 75, 101, 127, 216, 295, 304, 401, 438], "242": [60, 438], "conv1d": [60, 438], "253": [60, 438], "254": [60, 438], "avg_pool2d": [60, 438], "266": [60, 438], "269": [60, 438], "device_param": [60, 438], "24576": [60, 438], "createdevic": [60, 72, 74, 438], "310": [60, 438], "325": [60, 438], "363": [60, 438], "conv3x3": [60, 438], "in_plan": [60, 438], "out_plan": [60, 438], "dilat": [60, 75, 275, 438], "nn": [60, 67, 68, 70, 74, 77, 282, 283, 425, 426, 429, 430, 438, 440], "3x3": [60, 438], "kernel_s": [60, 75, 438], "torchbasicblock": [60, 438], "expans": [60, 438], "inplan": [60, 438], "plane": [60, 75, 194, 438], "downsampl": [60, 62, 69, 438], "base_width": [60, 438], "norm_lay": [60, 438], "batchnorm2d": [60, 62, 73, 75, 438], "basicblock": [60, 438], "notimplementederror": [60, 438], "conv1": [60, 438], "bn1": [60, 438], "relu": [60, 62, 69, 72, 233, 326, 330, 331, 332, 365, 438], "inplac": [60, 257, 259, 261, 438], "conv2": [60, 438], "bn2": [60, 438], "torch_model": [60, 438], "torch_input_tensor": [60, 337, 438, 440], "state_dict": [60, 61, 438, 439], "create_custom_preprocessor": [60, 438], "ttnn_module_arg": [60, 282, 438], "conv_weight_1": [60, 438], "conv_bias_1": [60, 438], "conv_weight_2": [60, 438], "conv_bias_2": [60, 438], "683": [60, 438], "_initialize_model_and_preprocess_paramet": [60, 438], "449": [60, 438], "718": [60, 438], "model_resnet_block_graph": [60, 438], "conv_param": [60, 438], "input_shap": [60, 154, 438], "act_block_h": [60, 438], "reshard": [60, 438], "height_shard": [60, 438], "out_channel": [60, 75, 438], "shard_layout": [60, 438], "tensormemorylayout": [60, 74, 75, 438], "block_shard": [60, 438], "conv_config": [60, 438], "conv2dconfig": [60, 438], "weights_dtyp": [60, 438], "math_fidel": [60, 68, 438], "mathfidel": [60, 68, 438], "lofi": [60, 79, 438], "fp32_dest_acc_en": [60, 438], "packer_l1_accum_en": [60, 438], "input_channels_align": [60, 438], "deallocate_activ": [60, 438], "act_block_h_overrid": [60, 438], "_out_height": [60, 438], "_out_width": [60, 438], "weight_tensor": [60, 438], "bias_tensor": [60, 438], "in_channel": [60, 75, 438], "input_height": [60, 438], "input_width": [60, 438], "ttnnbasicblock": [60, 438], "to_memory_config": [60, 62, 69, 80, 438], "get_memory_config": [60, 438], "run_model": [60, 282, 438], "ttnn_model": [60, 438], "12638": [60, 438], "walk": [61, 439], "chosen": [61, 79, 439], "colab": [61, 439], "run_dit": [61, 439], "ipynb": [61, 439], "chdir": [61, 439], "upgrad": [61, 439], "save_imag": [61, 439], "create_diffus": [61, 439], "autoencoderkl": [61, 439], "find_model": [61, 439], "front": [61, 79, 439], "dit_xl_2": [61, 62, 425, 439], "pil": [61, 439], "set_grad_en": [61, 439], "is_avail": [61, 439], "322": [61, 439], "safetensor": [61, 439], "sympi": [61, 439], "mpmath": [61, 439], "image_s": [61, 439], "param": [61, 75, 149, 314, 439], "512": [61, 439], "vae_model": [61, 439], "stabilityai": [61, 439], "sd": [61, 439], "vae": [61, 439], "ft": [61, 439], "ema": [61, 439], "mse": [61, 439], "latent_s": [61, 439], "input_s": [61, 439], "pt": [61, 439], "load_state_dict": [61, 439], "seed": [61, 439], "num_sampling_step": [61, 439], "slider": [61, 439], "cfg_scale": [61, 439], "class_label": [61, 439], "387": [61, 439], "417": [61, 439], "279": [61, 439], "samples_per_row": [61, 439], "nois": [61, 439], "len": [61, 439], "classifi": [61, 439], "guidanc": [61, 439], "y_null": [61, 439], "model_kwarg": [61, 439], "p_sample_loop": [61, 439], "forward_with_cfg": [61, 439], "clip_denois": [61, 439], "trace": [61, 62, 67, 425, 430, 432, 439], "18215": [61, 439], "file_nam": [61, 439, 440], "dit_model_graph": [61, 439], "nrow": [61, 439], "value_rang": [61, 439], "987": [61, 439], "show_svg": [61, 439], "attent": [62, 402, 403, 406, 407, 408, 409, 425], "tt_lib": [62, 67, 72, 73, 172, 173], "browser": [62, 425], "with_tile_pad": [62, 80], "manage_devic": [62, 69, 440], "synchronize_devic": [62, 69], "setdefaultdevic": [62, 69, 72, 75], "getdefaultdevic": [62, 69], "format_input_tensor": [62, 69], "format_output_tensor": [62, 69], "pad_to_tile_shap": [62, 69], "create_sharded_memory_config": [62, 69, 80], "zeros_lik": [62, 69], "ones_lik": [62, 69], "full_lik": [62, 69], "pointwis": 62, "aco": [62, 69, 89], "logical_not": [62, 69], "logical_not_": [62, 259], "acosh": [62, 69, 87], "asin": [62, 69, 104], "asinh": [62, 69, 106], "atan": [62, 69, 111], "atanh": [62, 69, 113], "bitwise_and": [62, 69], "bitwise_or": [62, 69], "bitwise_xor": [62, 69], "bitwise_not": [62, 69, 73, 75], "bitwise_left_shift": [62, 69], "bitwise_right_shift": [62, 69], "cbrt": [62, 69], "clamp": [62, 69, 127], "co": [62, 69, 136], "cosh": [62, 69, 138], "deg2rad": [62, 69, 142], "digamma": [62, 69, 144], "elu": [62, 69, 152], "erf": [62, 69, 160], "erfc": [62, 69, 162], "erfinv": [62, 69, 164], "exp2": [62, 69, 167, 170], "expm1": [62, 69], "gelu": [62, 69, 70, 75, 190, 192], "normalize_glob": [62, 69], "hardsigmoid": [62, 69, 203], "hardswish": [62, 69, 205], "hardtanh": [62, 69, 207], "heavisid": [62, 69], "i0": [62, 69, 212], "isfinit": [62, 69], "isneginf": [62, 69], "isposinf": [62, 69], "leaky_relu": [62, 69, 234], "lgamma": [62, 69, 239], "log10": [62, 69, 244], "log1p": [62, 69, 246], "log2": [62, 69, 248], "log_sigmoid": [62, 69], "frac": [62, 69, 75, 183], "mish": [62, 69], "multigammaln": [62, 69, 287], "normalize_hw": [62, 69], "prelu": [62, 69], "relu_max": [62, 69], "relu_min": [62, 69], "relu6": [62, 69, 329], "remaind": [62, 69, 334], "rdiv": [62, 69, 318], "rsub": [62, 69], "selu": [62, 69, 350], "sigmoid": [62, 69, 75, 251, 354], "sigmoid_accur": [62, 69], "silu": [62, 69, 72, 73, 75, 359, 384, 440], "sin": [62, 69, 361], "sinh": [62, 69, 363], "softplu": [62, 69, 366], "softsign": [62, 69, 370], "swish": [62, 69, 75], "tan": [62, 69, 388], "tanh": [62, 69, 114, 192, 390], "rad2deg": [62, 69, 316], "reciproc": [62, 69, 323], "tril": [62, 69], "triu": [62, 69], "tanhshrink": [62, 69, 392], "trunc": [62, 69, 73, 75, 178, 318], "mul_bw": [62, 69], "clamp_bw": [62, 69], "hardtanh_bw": [62, 69], "threshold_bw": [62, 69], "softplus_bw": [62, 69], "div_bw": [62, 69], "rdiv_bw": [62, 69], "bias_gelu_bw": [62, 69], "pow_bw": [62, 69], "exp_bw": [62, 69], "tanh_bw": [62, 69], "sqrt_bw": [62, 69], "assign_bw": [62, 69], "multigammaln_bw": [62, 69], "add_bw": [62, 69], "lgamma_bw": [62, 69], "fill_bw": [62, 69], "hardsigmoid_bw": [62, 69], "cos_bw": [62, 69], "acosh_bw": [62, 69], "acos_bw": [62, 69], "atan_bw": [62, 69], "rad2deg_bw": [62, 69], "sub_bw": [62, 69], "frac_bw": [62, 69], "trunc_bw": [62, 69], "log_sigmoid_bw": [62, 69], "fill_zero_bw": [62, 69], "i0_bw": [62, 69], "tan_bw": [62, 69], "sigmoid_bw": [62, 69], "rsqrt_bw": [62, 69], "neg_bw": [62, 69], "relu_bw": [62, 69], "logit_bw": [62, 69], "hardshrink_bw": [62, 69], "softshrink_bw": [62, 69], "leaky_relu_bw": [62, 69], "elu_bw": [62, 69], "celu_bw": [62, 69], "rpow_bw": [62, 69], "floor_bw": [62, 69], "round_bw": [62, 69], "log_bw": [62, 69], "relu6_bw": [62, 69], "abs_bw": [62, 69], "silu_bw": [62, 69], "selu_bw": [62, 69], "square_bw": [62, 69], "prod_bw": [62, 69], "hardswish_bw": [62, 69], "tanhshrink_bw": [62, 69], "atanh_bw": [62, 69], "asin_bw": [62, 69], "asinh_bw": [62, 69], "sin_bw": [62, 69], "sinh_bw": [62, 69], "log10_bw": [62, 69], "log1p_bw": [62, 69], "erfc_bw": [62, 69], "ceil_bw": [62, 69], "softsign_bw": [62, 69], "cosh_bw": [62, 69], "logiteps_bw": [62, 69], "log2_bw": [62, 69], "sign_bw": [62, 69], "fmod_bw": [62, 69], "remainder_bw": [62, 69], "div_no_nan_bw": [62, 69], "exp2_bw": [62, 69], "expm1_bw": [62, 69], "reciprocal_bw": [62, 69], "digamma_bw": [62, 69], "erfinv_bw": [62, 69], "erf_bw": [62, 69], "deg2rad_bw": [62, 69], "polygamma_bw": [62, 69], "gelu_bw": [62, 69], "repeat_bw": [62, 69], "angl": [62, 69, 99], "is_imag": [62, 69], "is_real": [62, 69], "polar_bw": [62, 69], "imag_bw": [62, 69], "real_bw": [62, 69], "angle_bw": [62, 69], "conj_bw": [62, 69], "conj": [62, 69, 134], "polar": [62, 69, 306], "addalpha": [62, 69, 93], "subalpha": [62, 69, 381], "div_no_nan": [62, 69, 148], "floor_div": [62, 69], "fmod": [62, 69, 179], "logical_and": [62, 69], "logical_and_": [62, 257], "logical_or": [62, 69], "logical_or_": [62, 261], "logical_xor_": [62, 263], "rpow": [62, 69, 343], "ldexp": [62, 69, 230], "logaddexp": [62, 69, 255], "logaddexp2": [62, 69, 254], "squared_differ": [62, 69, 377], "gtz": [62, 69], "ltz": [62, 69], "gez": [62, 69], "lez": [62, 69], "nez": [62, 69], "eqz": [62, 69], "gt_": [62, 198], "lt_": [62, 268], "ge": [62, 69], "ge_": [62, 189], "le": [62, 69], "le_": [62, 232], "eq": [62, 69], "eq_": [62, 157], "ne": [62, 69], "ne_": [62, 290], "atan2_bw": [62, 69], "embedding_bw": [62, 69], "addalpha_bw": [62, 69], "subalpha_bw": [62, 69], "xlogy_bw": [62, 69], "hypot_bw": [62, 69], "ldexp_bw": [62, 69], "logaddexp_bw": [62, 69], "logaddexp2_bw": [62, 69], "squared_difference_bw": [62, 69], "concat_bw": [62, 69], "rsub_bw": [62, 69], "min_bw": [62, 69], "max_bw": [62, 69], "lerp_bw": [62, 69], "addcmul_bw": [62, 69], "addcdiv_bw": [62, 69], "where_bw": [62, 69], "argmax": [62, 69, 75], "topk": [62, 69], "concat": [62, 69, 73, 75, 78, 132], "repeat_interleav": [62, 69, 73, 75], "tilize_with_val_pad": [62, 69], "tilize_with_zero_pad": [62, 396], "fill_rm": [62, 69, 172], "fill_ones_rm": [62, 69], "untilize_with_unpad": [62, 69], "untilize_with_halo_v2": [62, 69], "indexed_fil": [62, 69], "group_norm": [62, 69, 73, 75], "layer_norm": [62, 69, 73, 75], "rms_norm": [62, 69, 228], "attention_softmax": [62, 69], "rotary_embed": [62, 69], "scaled_dot_product_attent": [62, 69], "scaled_dot_product_attention_decod": [62, 69], "scaled_dot_product_attention_decode_gqa": [62, 69], "global_avg_pool2d": [62, 69], "max_pool2d": [62, 69], "vision": 62, "upsampl": [62, 69, 75], "kv": 62, "kv_cach": [62, 69], "fill_cache_for_user_": [62, 69], "update_cache_for_token_": [62, 69], "set_printopt": [62, 69, 440], "register_pre_operation_hook": [62, 69, 440], "register_post_operation_hook": [62, 69, 440], "borrow": [62, 74, 80, 425, 431], "facebookresearch": [62, 425, 426], "dit": [62, 425, 426], "xl": [62, 425, 426], "onboard": 62, "faq": 62, "moreh_softmax": [62, 73, 75], "moreh_softmax_backward": [62, 73, 75], "moreh_softmin": [62, 73, 75], "moreh_softmin_backward": [62, 73, 75], "moreh_logsoftmax": [62, 73, 75], "moreh_logsoftmax_backward": [62, 73, 75], "moreh_groupnorm": [62, 73, 75], "moreh_groupnorm_backward": [62, 73, 75], "moreh_norm": [62, 73, 75], "moreh_norm_backward": [62, 73, 75], "bcastopmath": [62, 73, 75], "bcastopdim": [62, 73, 75], "tensor_slic": [62, 73, 75], "interpol": [62, 73, 75], "groupnorm": [62, 73, 75], "layernorm": [62, 73, 75], "maxpool2d": [62, 73, 75], "adaptiveavgpool2d": [62, 73, 75], "unary_fmod": [62, 73, 75], "binary_fmod": [62, 73, 75], "unary_bitwise_or": [62, 73, 75], "unary_bitwise_and": [62, 73, 75], "unary_bitwise_xor": [62, 73, 75], "binary_bitwise_or": [62, 73, 75], "binary_bitwise_and": [62, 73, 75], "binary_bitwise_xor": [62, 73, 75], "unary_bitwise_left_shift": [62, 73, 75], "unary_bitwise_right_shift": [62, 73, 75], "binary_bitwise_left_shift": [62, 73, 75], "binary_bitwise_right_shift": [62, 73, 75], "torch_argmax": [62, 73, 75], "torch_argmin": [62, 73, 75], "addandnorm": [62, 73, 75], "get_dtyp": [62, 68, 73, 74], "get_layout": [62, 73, 74], "get_legacy_shap": [62, 72, 73, 74], "pad_to_til": [62, 73, 74], "storage_typ": [62, 73, 74], "unpad": [62, 72, 73, 74, 75, 129, 181, 398, 416], "unpad_from_til": [62, 73, 74], "memoryconfig": [62, 73, 75, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424], "odd": [62, 73], "uplift": 62, "troubleshoot": [62, 71], "tip": 62, "gain": 63, "discord": 64, "bounc": 64, "idea": [64, 71], "conduct": 64, "readi": [65, 66, 71, 409], "your_model": 65, "perf_model": 65, "python_api_test": 65, "perf_your_model": 65, "perf_your_model_d": 65, "sec": 65, "vit": 65, "patch16": 65, "0623": 65, "4960": 65, "abovement": 65, "pai": 65, "run_perform": [65, 71], "facilit": 65, "python_env_dir": 66, "create_venv": [66, 77], "pwd": [66, 77], "path_to_test_fil": 66, "test_in_fil": 66, "friendli": [66, 67, 76], "trust": 67, "valuabl": 67, "journei": 67, "optiona": 68, "register_oper": 68, "bind_registered_oper": 68, "attach_golden_funct": 68, "operation_nam": 68, "_device_oper": 68, "program_factory_0": 68, "_program_factori": 68, "example_device_oper": 68, "spdx": [68, 440], "filecopyrighttext": [68, 440], "pragma": 68, "device_oper": 68, "exampledeviceoper": 68, "operation_attributes_t": 68, "some_other_attribut": 68, "tensor_args_t": 68, "io_tensor": 68, "optional_output_tensor": [68, 154], "vector_of_tensor": 68, "tuple_of_tensor": 68, "vector_of_optional_tensor": 68, "some_crazy_tuple_of_tensor": 68, "shape_return_value_t": 68, "tensor_return_value_t": 68, "singlecor": 68, "override_runtime_argu": 68, "shared_variables_t": 68, "kernelhandl": 68, "unary_reader_kernel_id": [68, 75], "unary_writer_kernel_id": [68, 75], "cached_program_t": 68, "cachedprogram": 68, "operation_attribut": 68, "tensor_arg": 68, "tensor_return_valu": 68, "cached_program": 68, "num_cor": 68, "num_cores_i": 68, "program_factory_t": 68, "mandatori": [68, 75], "select_program_factori": 68, "validate_on_program_cache_miss": 68, "validate_on_program_cache_hit": 68, "compute_output_shap": [68, 75], "create_output_tensor": [68, 75], "prim": 68, "queue_id": [68, 84, 86, 90, 91, 93, 101, 103, 107, 108, 115, 116, 117, 118, 119, 120, 122, 131, 135, 145, 146, 151, 153, 154, 156, 158, 159, 161, 163, 165, 166, 168, 169, 171, 175, 188, 190, 191, 192, 193, 195, 197, 199, 208, 211, 213, 216, 220, 221, 222, 223, 224, 227, 229, 231, 233, 237, 242, 243, 247, 250, 252, 253, 256, 258, 260, 267, 269, 284, 285, 288, 289, 291, 292, 294, 295, 302, 304, 310, 311, 317, 322, 326, 327, 328, 331, 332, 344, 345, 346, 347, 352, 353, 355, 357, 358, 359, 360, 365, 371, 372, 373, 374, 376, 379, 381, 382, 384, 386, 387, 389, 390, 395, 396, 401, 412, 414, 415, 416, 419, 420], "hash_t": 68, "compute_program_hash": 68, "create_op_performance_model": 68, "opperformancemodel": 68, "some_condition_based_on_operation_attributes_and_or_tensor_arg": 68, "tensor_attribut": 68, "output_shap": 68, "create_device_tensor": 68, "single_core_program_factori": 68, "work_split": 68, "src_buffer": 68, "dst_buffer": 68, "dataformat": 68, "cb_data_format": 68, "datatype_to_dataformat_convert": 68, "single_tile_s": 68, "tiles": 68, "cb_data_format_output": 68, "single_tile_size_output": 68, "volum": 68, "tile_hw": 68, "compute_with_storage_grid_s": 68, "all_cor": 68, "core_group_1": 68, "core_group_2": 68, "num_tiles_per_core_group_1": 68, "num_tiles_per_core_group_2": 68, "split_work_to_cor": 68, "src0_cb_index": 68, "num_input_til": 68, "circularbufferconfig": 68, "cb_src0_config": 68, "set_page_s": 68, "cb_src0": 68, "createcircularbuff": 68, "output_cb_index": 68, "operand": [68, 75], "num_output_til": 68, "cb_output_config": 68, "cb_output": 68, "src_is_dram": 68, "buffer_typ": [68, 74, 75], "buffertyp": [68, 74, 75], "reader_compile_time_arg": 68, "dst_is_dram": 68, "writer_compile_time_arg": 68, "createkernel": 68, "eltwis": [68, 75, 178, 333], "dataflow": 68, "reader_unary_interleaved_start_id": 68, "readerdatamovementconfig": 68, "writer_unary_interleaved_start_id": 68, "writerdatamovementconfig": 68, "compute_kernel_args_group_1": 68, "per_core_block_cnt": 68, "per_core_block_s": 68, "math_approx_mod": 68, "eltwise_unary_kernel_group_1_id": 68, "eltwise_sfpu": 68, "computeconfig": 68, "compile_arg": 68, "compute_kernel_args_group_2": 68, "eltwise_unary_kernel_group_2_id": 68, "num_tiles_written": 68, "num_tiles_per_cor": 68, "core_coord_in_core_rang": 68, "tt_assert": 68, "setruntimearg": 68, "shared_vari": 68, "runtime_arg": [68, 75], "getruntimearg": [68, 75], "multi_core_program_factori": 68, "compositeexampleoper": 68, "composite_exampl": 68, "another_copi": 68, "_pybind": 68, "example_pybind": 68, "bind_example_oper": 68, "pybind_overload_t": 68, "examples_pybind": 68, "golden_funct": 68, "preprocess_golden_function_input": 68, "ttnn_input_tensor": 68, "postprocess_golden_function_output": 68, "torch_output_tensor": [68, 440], "bertintermedi": 70, "intermediate_s": 70, "tdd": 70, "torch_bert": 70, "utility_funct": 70, "torch_random": 70, "utils_for_test": 70, "assert_with_pcc": 70, "parametr": 70, "test_bert_intermedi": 70, "convert_to_ttnn": [70, 282, 283], "bert_intermedi": 70, "999": 70, "ff1_weight": 70, "ff1_bia": 70, "incredibli": 71, "excit": 71, "exploratori": 71, "freedom": 71, "documen": 71, "credit": 71, "adequ": 71, "pearson": 71, "correl": [71, 75], "pcc": [71, 78], "metric": 71, "meet": 71, "accuraci": 71, "complianc": 71, "earli": 71, "run_device_perf_model": 71, "models_device_performance_bare_met": 71, "servic": 71, "run_perf_models_oth": 71, "run_perf_models_llm_javelin": 71, "run_perf_models_cnn_javelin": 71, "models_performance_bare_met": 71, "run_demos_single_card_n150_test": 71, "run_demos_single_card_n300_test": 71, "run_t3000_demo_test": 71, "test_ttnn_functional_resnet50": 71, "resnet50testinfra": 71, "__name__": 72, "tt_devic": [72, 74, 75], "py_tensor": [72, 74], "tt_tensor": [72, 74, 75], "tolist": [72, 74], "tt_relu_out": 72, "tt_output": [72, 74], "closedevic": 72, "power_fp": 72, "suppli": [72, 74, 75], "lastli": 72, "fallback_op": [72, 75], "py_tensor_exp": 72, "py_relu_out": 72, "py_pow_out": 72, "tt_pow_out": 72, "hood": 72, "tt_silu_out": 72, "tt_exp_out": 72, "ttdnn": 74, "66": 74, "3969": 74, "4033": 74, "4095": 74, "4096": [74, 154], "4097": 74, "4098": 74, "4159": 74, "4160": 74, "4161": 74, "6462": 74, "4223": 74, "8064": 74, "8065": 74, "8066": 74, "8127": 74, "8128": 74, "8129": 74, "8130": 74, "8191": 74, "1985": 74, "2111": 74, "4064": 74, "4065": 74, "fourth": [74, 75], "6111": 74, "6176": 74, "ownedstorag": [74, 75], "borrowedstorag": 74, "devicestorag": [74, 75], "ye": [74, 75, 83, 172, 173, 275], "bfloat4_b": [74, 91, 93, 94, 96, 97, 110, 114, 132, 146, 210, 230, 235, 236, 254, 255, 270, 274, 279, 285, 347, 377, 379, 381, 419, 422], "mem_config": [74, 399], "bank": 74, "_ttnn": [74, 75, 80, 104, 106, 140, 153, 184, 321, 338, 397], "arg1": 74, "arg2": 74, "arg3": 74, "arg4": 74, "divisbl": [74, 75], "arg5": 74, "single_bank": 74, "owned_buffer_for_uint8_t": 74, "owned_buffer_for_uint16_t": 74, "owned_buffer_for_int32_t": 74, "owned_buffer_for_uint32_t": 74, "owned_buffer_for_float32_t": 74, "owned_buffer_for_bfloat16_t": 74, "borrowed_buffer_for_uint8_t": 74, "borrowed_buffer_for_uint16_t": 74, "borrowed_buffer_for_int32_t": 74, "borrowed_buffer_for_uint32_t": 74, "borrowed_buffer_for_float32_t": 74, "borrowed_buffer_for_bfloat16_t": 74, "output_tensor_shap": [74, 302, 396], "input_tensor_shap": 74, "input_tensor_start": [74, 302], "pad_valu": [74, 180, 396], "inp": 74, "tt_tensor_pad": 74, "npad": 74, "bottom": [74, 425], "storagetyp": 74, "memory_layout": [74, 75], "shard_spec": [74, 75], "mesh_devic": 74, "multi_devic": [74, 397], "meshdevic": [74, 397, 398], "target_layout": [74, 75, 180, 181], "output_tensor_end": [74, 416], "output_tensor_start": 74, "tt_tensor_unpad": 74, "nunpad": 74, "eight": 74, "shardspec": 74, "dram_channel": 74, "py_output": 74, "plug": 75, "newoper": 75, "legacyshap": 75, "programwithcallback": 75, "create_program": 75, "some_memb": 75, "optional_input_tensor": 75, "validate_with_output_tensor": 75, "programwithoptionaloutputtensor": 75, "preferred_nam": 75, "parallelization_strategi": 75, "get_parallelization_strategi": 75, "parallelizationstrategyenum": 75, "enqueu": 75, "cq_id": [75, 184], "program_cach": 75, "disable_and_clear": 75, "num_entri": 75, "cachabl": 75, "override_runtime_args_callback": 75, "input_buff": 75, "output_buff": 75, "src_dram_buff": 75, "dst_dram_buff": 75, "tt_metal_logger_typ": [75, 440], "tt_metal_logger_level": [75, 440], "layoutconversiononhost": 75, "eltwiseunari": 75, "op_typ": 75, "unaryoptyp": 75, "_tt": 75, "morehsoftmaxopparallelizationstrategi": 75, "compute_kernel_config": [75, 240, 272, 364, 405], "grayskullcomputekernelconfig": 75, "wormholecomputekernelconfig": 75, "output_grad_tensor": 75, "input_grad_tensor": 75, "morehsoftmaxbackwardopparallelizationstrategi": 75, "backward": [75, 85, 87, 89, 91, 93, 95, 97, 99, 104, 106, 107, 110, 111, 113, 114, 123, 125, 127, 132, 134, 136, 138, 142, 144, 146, 148, 152, 154, 160, 162, 164, 167, 168, 170, 171, 174, 176, 179, 183, 192, 201, 203, 205, 207, 210, 212, 215, 230, 234, 236, 239, 244, 246, 248, 249, 251, 254, 255, 265, 266, 274, 279, 285, 287, 292, 306, 308, 311, 314, 316, 318, 320, 323, 329, 330, 334, 336, 341, 343, 345, 347, 350, 354, 356, 359, 361, 363, 366, 368, 370, 373, 375, 377, 379, 381, 388, 390, 392, 394, 413, 420, 422], "grad": 75, "softmin": 75, "logsoftmax": 75, "num_group": [75, 196], "ep": [75, 264, 266], "999999747378752e": 75, "are_required_output": [75, 91, 93, 146, 285, 347, 379, 381], "rstd": 75, "mean_mem_config": 75, "rstd_mem_config": 75, "output_grad": 75, "input_grad": [75, 168, 171, 292, 311, 359, 373, 390], "gamma_grad": 75, "beta_grad": 75, "input_grad_mem_config": 75, "gamma_grad_mem_config": 75, "beta_grad_mem_config": 75, "keepdim": [75, 273, 277, 278, 378, 383, 418], "fill_valu": [75, 186, 187], "output_layout": 75, "output_on_devic": 75, "1e": [75, 196, 228, 339], "mathrm": [75, 84, 86, 90, 103, 108, 115, 116, 117, 118, 119, 120, 122, 135, 151, 156, 157, 158, 159, 161, 163, 165, 166, 169, 175, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 208, 211, 213, 220, 221, 222, 223, 224, 229, 231, 232, 233, 237, 242, 243, 247, 250, 252, 253, 256, 257, 258, 260, 261, 267, 268, 269, 288, 289, 290, 291, 294, 310, 313, 322, 326, 327, 328, 331, 332, 344, 346, 352, 353, 355, 357, 358, 360, 365, 372, 374, 376, 382, 384, 387, 389, 412], "epsilon": [75, 196, 228, 339], "denomin": [75, 317], "stabil": [75, 78, 365], "normalized_shap": 75, "circular": 75, "scale_factor": [75, 417], "nearest": [75, 396, 417], "align_corn": 75, "recompute_scale_factor": 75, "antialia": 75, "spatial": [75, 149, 194, 417], "bilinear": 75, "bicub": 75, "trilinear": 75, "area": 75, "corner": 75, "recomput": [75, 282], "output_s": 75, "repetit": [75, 335, 337], "sigma": 75, "logist": 75, "x_": 75, "x_i": 75, "sum_j": 75, "x_j": 75, "lie": 75, "padding_mod": 75, "simplest": 75, "c_": 75, "h_": 75, "w_": 75, "n_i": 75, "_j": 75, "sum_": 75, "star": 75, "learnabl": 75, "running_mean": 75, "running_var": 75, "num_batches_track": 75, "num_featur": 75, "momentum": 75, "affin": 75, "track_running_stat": 75, "4d": 75, "covari": 75, "varianc": 75, "num_channel": 75, "lernabl": 75, "elementwise_affin": 75, "return_indic": 75, "ceil_mod": 75, "channels_last": [75, 79], "reshape_2d": 75, "kh": [75, 408], "kw": 75, "c_j": 75, "max_": 75, "ldot": 75, "mod": 75, "dividend": 75, "bitwis": 75, "retain": 75, "argmin": 75, "fusion": 75, "fused_op": 75, "in_featur": 75, "out_featur": 75, "num_dim": 75, "add_and_norm": 75, "ml": 76, "falcon": 76, "7b": 76, "mistral": 76, "llama2": 76, "70b": 76, "dive": 76, "deeper": 76, "firmwar": 77, "purchas": 77, "card": 77, "aib": 77, "kmd": 77, "flash": [77, 407], "smi": 77, "v1": [77, 409], "fw_pack": 77, "v80": 77, "8ubuntu1": 77, "venv": 77, "1ubuntu1": 77, "wget": 77, "setup_hugepag": 77, "infra": 77, "machine_setup": 77, "first_pass": 77, "reboot": [77, 79], "foreach": 77, "fetch": 77, "build_met": 77, "architectur": [77, 426, 429, 430, 440], "ie": 77, "wheel_fil": 77, "libtbb": 77, "libcapston": 77, "driven": 78, "beck": 78, "label": [78, 80], "brief": 78, "4730": 78, "sweep": 78, "verifi": 78, "codeown": 78, "test_perf_resnet": 79, "test_perf_bare_met": 79, "0185": 79, "shorter": 79, "tt_smi": 79, "tensix_reset": 79, "skew": 79, "timer": 79, "analyz": 79, "fixtur": 79, "ttl": 79, "dumpdeviceprofil": 79, "eighth": 79, "tt_dnn_cpu": 79, "hifi2": 79, "hifi3": 79, "stamp": 79, "end_t": 79, "start_t": 79, "earliest": 79, "core_frequ": 79, "trisc1": 79, "trisc2": 79, "cb": 79, "cb_wait_front": 79, "cb_reserve_back": 79, "datamov": 79, "input_0_memori": 79, "dev_0_dram": 79, "dec_0_l1": 79, "tgz": 79, "timestamp": 79, "32x32": 80, "4x4": 80, "uint16": [80, 401], "owned_host_storag": 80, "borrowed_host_storag": 80, "device_storag": 80, "ideal": 80, "compress": 80, "128x128": 80, "orient": [80, 139], "unshard": 80, "dram_memory_config": [80, 100, 129, 240, 272, 409], "physic": 80, "pybind11_object": 80, "complextensor": [84, 85, 91, 98, 99, 133, 134, 145, 146, 214, 215, 217, 218, 285, 305, 306, 319, 320, 322, 323, 379], "_tensor": [84, 86, 103, 108, 115, 116, 117, 118, 119, 120, 122, 135, 151, 158, 159, 161, 163, 165, 166, 169, 175, 190, 191, 193, 194, 195, 199, 208, 211, 213, 220, 221, 222, 223, 224, 233, 237, 242, 243, 247, 250, 258, 269, 291, 294, 310, 313, 322, 326, 327, 328, 331, 332, 344, 346, 352, 353, 355, 357, 358, 360, 365, 372, 374, 384, 387, 389, 412], "_i": [84, 86, 90, 103, 108, 115, 116, 117, 118, 119, 120, 122, 135, 151, 156, 157, 158, 159, 161, 163, 165, 166, 169, 175, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 208, 211, 213, 220, 221, 222, 223, 224, 229, 231, 232, 233, 237, 242, 243, 247, 250, 252, 253, 256, 257, 258, 260, 261, 267, 268, 269, 288, 289, 290, 291, 294, 310, 313, 322, 326, 327, 328, 331, 332, 344, 346, 352, 353, 355, 357, 358, 360, 365, 372, 374, 376, 382, 384, 387, 389, 412], "prealloc": [84, 86, 90, 91, 93, 101, 103, 108, 115, 116, 117, 118, 119, 120, 122, 131, 135, 145, 146, 151, 156, 158, 159, 161, 163, 165, 166, 168, 169, 171, 175, 188, 190, 191, 192, 193, 195, 197, 199, 208, 211, 213, 220, 221, 222, 223, 224, 229, 231, 233, 237, 242, 243, 247, 250, 252, 253, 256, 258, 260, 267, 269, 285, 288, 289, 291, 292, 294, 310, 311, 317, 322, 326, 327, 328, 331, 332, 344, 345, 346, 347, 352, 353, 355, 357, 358, 359, 360, 365, 372, 373, 374, 376, 379, 381, 382, 384, 387, 389, 390, 401, 412, 419, 420], "uint8": [84, 86, 90, 91, 93, 101, 103, 107, 108, 115, 116, 117, 118, 119, 120, 122, 131, 135, 145, 146, 151, 156, 158, 159, 161, 163, 165, 166, 168, 169, 171, 175, 188, 190, 191, 192, 193, 195, 197, 199, 208, 211, 213, 220, 221, 222, 223, 224, 229, 231, 233, 237, 242, 243, 247, 250, 252, 253, 256, 258, 260, 267, 269, 285, 288, 289, 291, 292, 294, 302, 310, 311, 317, 322, 326, 327, 328, 331, 332, 344, 345, 346, 347, 352, 353, 355, 357, 358, 359, 360, 365, 371, 372, 373, 374, 376, 379, 381, 382, 384, 387, 389, 390, 401, 412, 419, 420], "grad_tensor": [85, 87, 89, 91, 93, 95, 97, 99, 104, 106, 107, 110, 111, 113, 114, 123, 125, 127, 132, 134, 136, 138, 142, 144, 146, 148, 152, 154, 160, 162, 164, 167, 168, 170, 171, 174, 176, 179, 183, 192, 201, 203, 205, 207, 210, 212, 215, 230, 234, 236, 239, 244, 246, 248, 249, 251, 254, 255, 265, 266, 274, 279, 285, 287, 292, 306, 308, 311, 314, 316, 318, 320, 323, 329, 330, 334, 336, 341, 343, 345, 347, 350, 354, 356, 359, 361, 363, 366, 368, 370, 373, 375, 377, 379, 381, 388, 390, 392, 394, 413, 420, 422], "hyperbol": [87, 390], "cosin": [87, 89, 405], "tensor1": [90, 91, 92, 93, 94, 95, 96, 97, 107, 109, 110, 131, 132, 145, 146, 147, 156, 157, 168, 171, 177, 178, 179, 188, 189, 197, 198, 209, 210, 216, 219, 229, 230, 231, 232, 235, 236, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 267, 268, 270, 272, 274, 276, 279, 280, 285, 288, 289, 290, 292, 293, 301, 309, 311, 333, 334, 347, 348, 359, 373, 376, 377, 379, 380, 381, 382, 390, 419, 420, 421, 422], "tensor2": [90, 91, 92, 93, 94, 95, 96, 97, 107, 109, 110, 131, 132, 145, 146, 147, 156, 157, 177, 178, 179, 188, 189, 197, 198, 209, 210, 216, 219, 229, 230, 231, 232, 235, 236, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 267, 268, 270, 272, 274, 276, 279, 280, 285, 288, 289, 290, 293, 301, 333, 334, 347, 348, 376, 377, 379, 380, 381, 382, 419, 420, 421, 422], "gradient": [91, 93, 146, 154, 285, 347, 379, 381], "input_tensor_c": [94, 95, 96, 97, 235, 236, 270, 419, 420], "tensor3": [94, 95, 96, 97, 235, 236, 270, 419, 420], "function_arg": [100, 131, 149, 150, 155, 172, 173, 186, 187, 228, 241, 275, 298, 299, 406, 407, 408, 415, 417, 423, 424], "function_kwarg": [100, 131, 149, 150, 155, 172, 173, 186, 187, 228, 241, 275, 298, 299, 406, 407, 408, 415, 417, 423, 424], "currenli": 101, "flatten": 101, "cache_file_nam": 102, "mesh_mapp": 102, "tensortomesh": 102, "use_device_til": 102, "toggl": 102, "mantissa": 102, "bfp": 102, "rte": 102, "bfp4": 102, "30469": [102, 185], "714844": [102, 185], "761719": [102, 185], "53125": [102, 185], "652344": [102, 185], "bias_gelu": 114, "shift_bit": [116, 119], "2147483647": 117, "datayp": 129, "conjug": 133, "corerang": 139, "shardstrategi": 139, "shardorient": 139, "halo": [139, 415], "use_height_and_width_as_shard_shap": 139, "overlap": 139, "accurate_mod": 145, "round_mod": [145, 146, 317, 318], "downsample_param": 149, "inxput_tensor": 153, "padding_idx": 153, "embeddings_typ": 153, "embeddingstyp": 153, "106445": 153, "988281": 153, "59375": 153, "212891": 153, "964844": 153, "199219": 153, "996094": 153, "78362e": 153, "89785e": 153, "04479e": 153, "25815e": 153, "71833e": 153, "59995e": 153, "60398e": 153, "83671e": 153, "22242e": 153, "88263e": 153, "35917e": 153, "49994e": 153, "output_gradient_tensor": 154, "vocabulari": 154, "seq_len": [154, 405], "embedding_dim": 154, "num_embed": 154, "3200": 154, "input_index": 154, "weights_shap": 154, "requires_grad": 154, "weights_ttnn": 154, "grad_shap": 154, "grad_data": 154, "input_a": [157, 178, 189, 198, 216, 232, 257, 261, 268, 290, 333], "input_b": [157, 178, 189, 198, 216, 232, 257, 261, 268, 290, 333], "fast_and_approximate_mod": [159, 161, 165, 191, 344], "val_hi": [172, 173], "val_lo": [172, 173], "hone": [172, 173], "region": [172, 173], "wone": [172, 173], "nchw": 173, "hfill": 173, "wfill": 173, "hi": 173, "lo": 173, "rounding_mod": [178, 317, 333], "wh_b0": [178, 333], "padded_shap": 180, "target_mem_config": [180, 181], "dimenst": [190, 195, 326, 384], "lambd": [200, 201, 367, 368], "16666667": [202, 204], "sfpu": 213, "imaginari": 215, "batch_id": 216, "rtol": 219, "atol": 219, "equal_nan": 219, "batch_index": 225, "update_index": 226, "batch_offset": 226, "input_refer": [227, 284], "input_predict": [227, 284], "lossreductionmod": [227, 284], "residual_input_tensor": 228, "program_config": [228, 240, 272, 402, 403], "programconfig": 228, "mcompar": 231, "slope": 233, "leaki": 233, "negative_slop": 234, "matmulprogramconfig": [240, 272], "devicecomputekernelconfig": [240, 272, 364, 405], "transpose_a": [240, 272], "transpose_b": [240, 272], "logitep": 266, "_size": 272, "upcom": 272, "in_n": 275, "nbatch": 275, "in_h": 275, "in_w": 275, "kernel_h": 275, "kernel_w": 275, "stride_h": 275, "stride_w": 275, "pad_h": [275, 303], "pad_w": [275, 303], "dilation_h": 275, "dilation_w": 275, "parameterdict": [282, 283], "reader_patterns_cach": 282, "model_graph": 282, "reader": 282, "mvlgamma": 287, "5f": 287, "unpadded_shap": 303, "pad_c": 303, "pad_n": 303, "cartesian": 305, "theta": 305, "coeff": 309, "all_dimens": [313, 314], "radian": 316, "degre": 316, "divisor": 318, "upper_limit": 331, "cap": 331, "lower_limit": 332, "modulu": 333, "repeat_dim": 335, "expand": 337, "torch_result": 337, "subtrah": 346, "minuend": 346, "subract": 347, "0507": 349, "67326": 349, "0310059": 364, "steep": 365, "steeper": 365, "softhrink": 367, "num_split": 371, "dim2": 371, "tangent": 390, "use_multicor": [395, 396, 414, 416], "42188": 398, "398438": 398, "torch_rank": [400, 440], "3008": 400, "8438": 400, "3242": 400, "9023": 400, "5820": 400, "5312": 400, "bfloat8": 401, "softmaxprogramconfig": [402, 403], "softmaxdefaultprogramconfig": [402, 403], "causal_mask": [402, 403], "mask": [402, 403, 406, 407, 408], "causal": [402, 403, 406], "cos_cach": 405, "sin_cach": 405, "token_index": 405, "rotari": 405, "token_idx": 405, "head_dim": 405, "sine": 405, "mimick": 406, "flashattent": 406, "mqa": [406, 407], "nqh": 406, "dh": [406, 407, 408], "triangl": 406, "sdpaprogramconfig": 406, "pnh": 407, "cur_po": [407, 408], "cur_pos_tensor": 407, "sdpamulticoreprogramconfig": [407, 408], "gqa": 408, "qh": 408, "transpose_q": 408, "share_cach": 408, "kv_input_tensor": 409, "num_kv_head": 409, "q1": 409, "k1": 409, "qn": 409, "kn": 409, "vn": 409, "transpose_kei": 409, "diagon": [410, 411], "use_pack_until": [414, 416], "padding_config": 415, "local_config": 415, "remote_config": 415, "pad_val": 415, "ncores_nhw": 415, "max_out_nsticks_per_cor": 415, "remote_read": 415, "transpose_mcast": 415, "nhw": 415, "nstick": 415, "mcast": 415, "ramp": 425, "skillset": 425, "lab": 425, "8888": 425, "cell": 425, "start_tim": 440, "end_tim": 440, "6391518115997314": 440, "0007393360137939453": 440, "9998": 440, "exp_trac": 440, "substitut": 440, "implementaiton": 440, "ttnn_config_path": 440, "pre_hook_to_print_args_and_kwarg": 440, "post_hook_to_print_output": 440, "query_registered_oper": 440, "begin_graph_captur": 440, "runmod": 440, "no_dispatch": 440, "captured_graph": 440, "end_graph_captur": 440, "pretty_print": 440, "ttnn_sweep": 441}, "objects": {"tt_lib.fallback_ops": [[75, 0, 1, "", "AdaptiveAvgPool2d"], [75, 0, 1, "", "BatchNorm2d"], [75, 0, 1, "", "Conv2d"], [75, 0, 1, "", "GroupNorm"], [75, 0, 1, "", "LayerNorm"], [75, 0, 1, "", "MaxPool2d"], [75, 0, 1, "", "binary_bitwise_and"], [75, 0, 1, "", "binary_bitwise_left_shift"], [75, 0, 1, "", "binary_bitwise_or"], [75, 0, 1, "", "binary_bitwise_right_shift"], [75, 0, 1, "", "binary_bitwise_xor"], [75, 0, 1, "", "binary_fmod"], [75, 0, 1, "", "bitwise_not"], [75, 0, 1, "", "ceil"], [75, 1, 1, "", "chunk"], [75, 1, 1, "", "concat"], [75, 1, 1, "", "conv2d"], [75, 0, 1, "", "floor"], [75, 1, 1, "", "full"], [75, 1, 1, "", "group_norm"], [75, 1, 1, "", "interpolate"], [75, 1, 1, "", "layer_norm"], [75, 1, 1, "", "pad"], [75, 1, 1, "", "repeat"], [75, 1, 1, "", "repeat_interleave"], [75, 1, 1, "", "reshape"], [75, 1, 1, "", "silu"], [75, 1, 1, "", "softmax"], [75, 1, 1, "", "tensor_slice"], [75, 0, 1, "", "torch_argmax"], [75, 0, 1, "", "torch_argmin"], [75, 0, 1, "", "trunc"], [75, 0, 1, "", "unary_bitwise_and"], [75, 0, 1, "", "unary_bitwise_left_shift"], [75, 0, 1, "", "unary_bitwise_or"], [75, 0, 1, "", "unary_bitwise_right_shift"], [75, 0, 1, "", "unary_bitwise_xor"], [75, 0, 1, "", "unary_fmod"]], "tt_lib.fused_ops.add_and_norm": [[75, 1, 1, "", "AddAndNorm"]], "tt_lib.fused_ops.layernorm": [[75, 1, 1, "", "Layernorm"]], "tt_lib.fused_ops.linear": [[75, 1, 1, "", "Linear"]], "tt_lib.operations.primary": [[75, 1, 1, "", "moreh_groupnorm"], [75, 1, 1, "", "moreh_groupnorm_backward"], [75, 1, 1, "", "moreh_logsoftmax"], [75, 1, 1, "", "moreh_logsoftmax_backward"], [75, 1, 1, "", "moreh_norm"], [75, 1, 1, "", "moreh_norm_backward"], [75, 1, 1, "", "moreh_softmax"], [75, 1, 1, "", "moreh_softmax_backward"], [75, 1, 1, "", "moreh_softmin"], [75, 1, 1, "", "moreh_softmin_backward"]], "ttnn": [[75, 0, 1, "", "BcastOpDim"], [75, 0, 1, "", "BcastOpMath"], [81, 1, 1, "", "GetDefaultDevice"], [74, 0, 1, "", "MemoryConfig"], [83, 1, 1, "", "SetDefaultDevice"], [80, 0, 1, "", "Shape"], [74, 0, 1, "", "Tensor"], [84, 1, 1, "", "abs"], [85, 1, 1, "", "abs_bw"], [86, 1, 1, "", "acos"], [87, 1, 1, "", "acos_bw"], [88, 1, 1, "", "acosh"], [89, 1, 1, "", "acosh_bw"], [90, 1, 1, "", "add"], [91, 1, 1, "", "add_bw"], [92, 1, 1, "", "addalpha"], [93, 1, 1, "", "addalpha_bw"], [94, 1, 1, "", "addcdiv"], [95, 1, 1, "", "addcdiv_bw"], [96, 1, 1, "", "addcmul"], [97, 1, 1, "", "addcmul_bw"], [98, 1, 1, "", "angle"], [99, 1, 1, "", "angle_bw"], [100, 1, 1, "", "arange"], [101, 1, 1, "", "argmax"], [102, 1, 1, "", "as_tensor"], [103, 1, 1, "", "asin"], [104, 1, 1, "", "asin_bw"], [105, 1, 1, "", "asinh"], [106, 1, 1, "", "asinh_bw"], [107, 1, 1, "", "assign_bw"], [108, 1, 1, "", "atan"], [109, 1, 1, "", "atan2"], [110, 1, 1, "", "atan2_bw"], [111, 1, 1, "", "atan_bw"], [112, 1, 1, "", "atanh"], [113, 1, 1, "", "atanh_bw"], [114, 1, 1, "", "bias_gelu_bw"], [115, 1, 1, "", "bitwise_and"], [116, 1, 1, "", "bitwise_left_shift"], [117, 1, 1, "", "bitwise_not"], [118, 1, 1, "", "bitwise_or"], [119, 1, 1, "", "bitwise_right_shift"], [120, 1, 1, "", "bitwise_xor"], [121, 1, 1, "", "cbrt"], [122, 1, 1, "", "ceil"], [123, 1, 1, "", "ceil_bw"], [124, 1, 1, "", "celu"], [125, 1, 1, "", "celu_bw"], [126, 1, 1, "", "clamp"], [127, 1, 1, "", "clamp_bw"], [128, 1, 1, "", "clip"], [129, 1, 1, "", "clone"], [130, 1, 1, "", "close_device"], [131, 1, 1, "", "concat"], [132, 1, 1, "", "concat_bw"], [133, 1, 1, "", "conj"], [134, 1, 1, "", "conj_bw"], [135, 1, 1, "", "cos"], [136, 1, 1, "", "cos_bw"], [137, 1, 1, "", "cosh"], [138, 1, 1, "", "cosh_bw"], [139, 1, 1, "", "create_sharded_memory_config"], [140, 1, 1, "", "deallocate"], [141, 1, 1, "", "deg2rad"], [142, 1, 1, "", "deg2rad_bw"], [143, 1, 1, "", "digamma"], [144, 1, 1, "", "digamma_bw"], [145, 1, 1, "", "div"], [146, 1, 1, "", "div_bw"], [147, 1, 1, "", "div_no_nan"], [148, 1, 1, "", "div_no_nan_bw"], [149, 1, 1, "", "downsample"], [150, 1, 1, "", "dump_tensor"], [151, 1, 1, "", "elu"], [152, 1, 1, "", "elu_bw"], [153, 1, 1, "", "embedding"], [154, 1, 1, "", "embedding_bw"], [155, 1, 1, "", "empty"], [156, 1, 1, "", "eq"], [157, 1, 1, "", "eq_"], [158, 1, 1, "", "eqz"], [159, 1, 1, "", "erf"], [160, 1, 1, "", "erf_bw"], [161, 1, 1, "", "erfc"], [162, 1, 1, "", "erfc_bw"], [163, 1, 1, "", "erfinv"], [164, 1, 1, "", "erfinv_bw"], [165, 1, 1, "", "exp"], [166, 1, 1, "", "exp2"], [167, 1, 1, "", "exp2_bw"], [168, 1, 1, "", "exp_bw"], [169, 1, 1, "", "expm1"], [170, 1, 1, "", "expm1_bw"], [171, 1, 1, "", "fill_bw"], [172, 1, 1, "", "fill_ones_rm"], [173, 1, 1, "", "fill_rm"], [174, 1, 1, "", "fill_zero_bw"], [175, 1, 1, "", "floor"], [176, 1, 1, "", "floor_bw"], [177, 1, 1, "", "floor_div"], [178, 1, 1, "", "fmod"], [179, 1, 1, "", "fmod_bw"], [180, 1, 1, "", "format_input_tensor"], [181, 1, 1, "", "format_output_tensor"], [182, 1, 1, "", "frac"], [183, 1, 1, "", "frac_bw"], [184, 1, 1, "", "from_device"], [185, 1, 1, "", "from_torch"], [186, 1, 1, "", "full"], [187, 1, 1, "", "full_like"], [188, 1, 1, "", "ge"], [189, 1, 1, "", "ge_"], [190, 1, 1, "", "geglu"], [191, 1, 1, "", "gelu"], [192, 1, 1, "", "gelu_bw"], [193, 1, 1, "", "gez"], [194, 1, 1, "", "global_avg_pool2d"], [195, 1, 1, "", "glu"], [196, 1, 1, "", "group_norm"], [197, 1, 1, "", "gt"], [198, 1, 1, "", "gt_"], [199, 1, 1, "", "gtz"], [200, 1, 1, "", "hardshrink"], [201, 1, 1, "", "hardshrink_bw"], [202, 1, 1, "", "hardsigmoid"], [203, 1, 1, "", "hardsigmoid_bw"], [204, 1, 1, "", "hardswish"], [205, 1, 1, "", "hardswish_bw"], [206, 1, 1, "", "hardtanh"], [207, 1, 1, "", "hardtanh_bw"], [208, 1, 1, "", "heaviside"], [209, 1, 1, "", "hypot"], [210, 1, 1, "", "hypot_bw"], [211, 1, 1, "", "i0"], [212, 1, 1, "", "i0_bw"], [213, 1, 1, "", "identity"], [214, 1, 1, "", "imag"], [215, 1, 1, "", "imag_bw"], [216, 1, 1, "", "indexed_fill"], [217, 1, 1, "", "is_imag"], [218, 1, 1, "", "is_real"], [219, 1, 1, "", "isclose"], [220, 1, 1, "", "isfinite"], [221, 1, 1, "", "isinf"], [222, 1, 1, "", "isnan"], [223, 1, 1, "", "isneginf"], [224, 1, 1, "", "isposinf"], [227, 1, 1, "", "l1_loss"], [228, 1, 1, "", "layer_norm"], [229, 1, 1, "", "ldexp"], [230, 1, 1, "", "ldexp_bw"], [231, 1, 1, "", "le"], [232, 1, 1, "", "le_"], [233, 1, 1, "", "leaky_relu"], [234, 1, 1, "", "leaky_relu_bw"], [235, 1, 1, "", "lerp"], [236, 1, 1, "", "lerp_bw"], [237, 1, 1, "", "lez"], [238, 1, 1, "", "lgamma"], [239, 1, 1, "", "lgamma_bw"], [240, 1, 1, "", "linear"], [241, 1, 1, "", "load_tensor"], [242, 1, 1, "", "log"], [243, 1, 1, "", "log10"], [244, 1, 1, "", "log10_bw"], [245, 1, 1, "", "log1p"], [246, 1, 1, "", "log1p_bw"], [247, 1, 1, "", "log2"], [248, 1, 1, "", "log2_bw"], [249, 1, 1, "", "log_bw"], [250, 1, 1, "", "log_sigmoid"], [251, 1, 1, "", "log_sigmoid_bw"], [252, 1, 1, "", "logaddexp"], [253, 1, 1, "", "logaddexp2"], [254, 1, 1, "", "logaddexp2_bw"], [255, 1, 1, "", "logaddexp_bw"], [256, 1, 1, "", "logical_and"], [257, 1, 1, "", "logical_and_"], [258, 1, 1, "", "logical_not"], [259, 1, 1, "", "logical_not_"], [260, 1, 1, "", "logical_or"], [261, 1, 1, "", "logical_or_"], [262, 1, 1, "", "logical_xor"], [263, 1, 1, "", "logical_xor_"], [264, 1, 1, "", "logit"], [265, 1, 1, "", "logit_bw"], [266, 1, 1, "", "logiteps_bw"], [267, 1, 1, "", "lt"], [268, 1, 1, "", "lt_"], [269, 1, 1, "", "ltz"], [270, 1, 1, "", "mac"], [271, 1, 1, "", "manage_device"], [272, 1, 1, "", "matmul"], [273, 1, 1, "", "max"], [274, 1, 1, "", "max_bw"], [275, 1, 1, "", "max_pool2d"], [276, 1, 1, "", "maximum"], [277, 1, 1, "", "mean"], [278, 1, 1, "", "min"], [279, 1, 1, "", "min_bw"], [280, 1, 1, "", "minimum"], [281, 1, 1, "", "mish"], [284, 1, 1, "", "mse_loss"], [285, 1, 1, "", "mul_bw"], [286, 1, 1, "", "multigammaln"], [287, 1, 1, "", "multigammaln_bw"], [288, 1, 1, "", "multiply"], [289, 1, 1, "", "ne"], [290, 1, 1, "", "ne_"], [291, 1, 1, "", "neg"], [292, 1, 1, "", "neg_bw"], [293, 1, 1, "", "nextafter"], [294, 1, 1, "", "nez"], [295, 1, 1, "", "nonzero"], [296, 1, 1, "", "normalize_global"], [297, 1, 1, "", "normalize_hw"], [298, 1, 1, "", "ones"], [299, 1, 1, "", "ones_like"], [300, 1, 1, "", "open_device"], [301, 1, 1, "", "outer"], [302, 1, 1, "", "pad"], [303, 1, 1, "", "pad_to_tile_shape"], [304, 1, 1, "", "permute"], [305, 1, 1, "", "polar"], [306, 1, 1, "", "polar_bw"], [307, 1, 1, "", "polygamma"], [308, 1, 1, "", "polygamma_bw"], [309, 1, 1, "", "polyval"], [310, 1, 1, "", "pow"], [311, 1, 1, "", "pow_bw"], [312, 1, 1, "", "prelu"], [313, 1, 1, "", "prod"], [314, 1, 1, "", "prod_bw"], [315, 1, 1, "", "rad2deg"], [316, 1, 1, "", "rad2deg_bw"], [317, 1, 1, "", "rdiv"], [318, 1, 1, "", "rdiv_bw"], [319, 1, 1, "", "real"], [320, 1, 1, "", "real_bw"], [321, 1, 1, "", "reallocate"], [322, 1, 1, "", "reciprocal"], [323, 1, 1, "", "reciprocal_bw"], [324, 1, 1, "", "register_post_operation_hook"], [325, 1, 1, "", "register_pre_operation_hook"], [326, 1, 1, "", "reglu"], [327, 1, 1, "", "relu"], [328, 1, 1, "", "relu6"], [329, 1, 1, "", "relu6_bw"], [330, 1, 1, "", "relu_bw"], [331, 1, 1, "", "relu_max"], [332, 1, 1, "", "relu_min"], [333, 1, 1, "", "remainder"], [334, 1, 1, "", "remainder_bw"], [335, 1, 1, "", "repeat"], [336, 1, 1, "", "repeat_bw"], [337, 1, 1, "", "repeat_interleave"], [338, 1, 1, "", "reshape"], [339, 1, 1, "", "rms_norm"], [340, 1, 1, "", "round"], [341, 1, 1, "", "round_bw"], [342, 1, 1, "", "rpow"], [343, 1, 1, "", "rpow_bw"], [344, 1, 1, "", "rsqrt"], [345, 1, 1, "", "rsqrt_bw"], [346, 1, 1, "", "rsub"], [347, 1, 1, "", "rsub_bw"], [348, 1, 1, "", "scatter"], [349, 1, 1, "", "selu"], [350, 1, 1, "", "selu_bw"], [351, 1, 1, "", "set_printoptions"], [352, 1, 1, "", "sigmoid"], [353, 1, 1, "", "sigmoid_accurate"], [354, 1, 1, "", "sigmoid_bw"], [355, 1, 1, "", "sign"], [356, 1, 1, "", "sign_bw"], [357, 1, 1, "", "signbit"], [358, 1, 1, "", "silu"], [359, 1, 1, "", "silu_bw"], [360, 1, 1, "", "sin"], [361, 1, 1, "", "sin_bw"], [362, 1, 1, "", "sinh"], [363, 1, 1, "", "sinh_bw"], [364, 1, 1, "", "softmax"], [365, 1, 1, "", "softplus"], [366, 1, 1, "", "softplus_bw"], [367, 1, 1, "", "softshrink"], [368, 1, 1, "", "softshrink_bw"], [369, 1, 1, "", "softsign"], [370, 1, 1, "", "softsign_bw"], [371, 1, 1, "", "split"], [372, 1, 1, "", "sqrt"], [373, 1, 1, "", "sqrt_bw"], [374, 1, 1, "", "square"], [375, 1, 1, "", "square_bw"], [376, 1, 1, "", "squared_difference"], [377, 1, 1, "", "squared_difference_bw"], [378, 1, 1, "", "std"], [379, 1, 1, "", "sub_bw"], [380, 1, 1, "", "subalpha"], [381, 1, 1, "", "subalpha_bw"], [382, 1, 1, "", "subtract"], [383, 1, 1, "", "sum"], [384, 1, 1, "", "swiglu"], [385, 1, 1, "", "swish"], [386, 1, 1, "", "synchronize_device"], [387, 1, 1, "", "tan"], [388, 1, 1, "", "tan_bw"], [389, 1, 1, "", "tanh"], [390, 1, 1, "", "tanh_bw"], [391, 1, 1, "", "tanhshrink"], [392, 1, 1, "", "tanhshrink_bw"], [393, 1, 1, "", "threshold"], [394, 1, 1, "", "threshold_bw"], [395, 1, 1, "", "tilize"], [396, 1, 1, "", "tilize_with_val_padding"], [396, 1, 1, "", "tilize_with_zero_padding"], [397, 1, 1, "", "to_device"], [398, 1, 1, "", "to_layout"], [399, 1, 1, "", "to_memory_config"], [400, 1, 1, "", "to_torch"], [401, 1, 1, "", "topk"], [410, 1, 1, "", "tril"], [411, 1, 1, "", "triu"], [412, 1, 1, "", "trunc"], [413, 1, 1, "", "trunc_bw"], [414, 1, 1, "", "untilize"], [415, 1, 1, "", "untilize_with_halo_v2"], [416, 1, 1, "", "untilize_with_unpadding"], [417, 1, 1, "", "upsample"], [418, 1, 1, "", "var"], [419, 1, 1, "", "where"], [420, 1, 1, "", "where_bw"], [421, 1, 1, "", "xlogy"], [422, 1, 1, "", "xlogy_bw"], [423, 1, 1, "", "zeros"], [424, 1, 1, "", "zeros_like"]], "ttnn.MemoryConfig": [[74, 2, 1, "", "__init__"]], "ttnn.Shape": [[80, 3, 1, "", "rank"], [80, 2, 1, "", "with_tile_padding"]], "ttnn.Tensor": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "buffer"], [75, 1, 1, "", "cpu"], [74, 2, 1, "", "device"], [74, 2, 1, "", "get_dtype"], [74, 2, 1, "", "get_layout"], [74, 2, 1, "", "get_legacy_shape"], [74, 2, 1, "", "pad"], [74, 2, 1, "", "pad_to_tile"], [74, 2, 1, "", "storage_type"], [74, 2, 1, "", "to"], [74, 2, 1, "", "unpad"], [74, 2, 1, "", "unpad_from_tile"]], "ttnn.experimental": [[405, 1, 1, "", "rotary_embedding"]], "ttnn.kv_cache": [[225, 1, 1, "", "fill_cache_for_user_"], [226, 1, 1, "", "update_cache_for_token_"]], "ttnn.model_preprocessing": [[282, 1, 1, "", "preprocess_model"], [283, 1, 1, "", "preprocess_model_parameters"]], "ttnn.transformer": [[402, 1, 1, "", "attention_softmax"], [403, 1, 1, "", "attention_softmax_"], [404, 1, 1, "", "concatenate_heads"], [406, 1, 1, "", "scaled_dot_product_attention"], [407, 1, 1, "", "scaled_dot_product_attention_decode"], [408, 1, 1, "", "scaled_dot_product_attention_decode_gqa"], [409, 1, 1, "", "split_query_key_value_and_split_heads"]]}, "objtypes": {"0": "py:class", "1": "py:function", "2": "py:method", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "function", "Python function"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"]}, "titleterms": {"core": [3, 69], "featur": [3, 64, 67], "goodi": 3, "support": [3, 12, 13, 64, 440], "compil": 3, "about": [3, 29], "contribut": [3, 40, 63], "licens": 3, "chrono": 4, "an": [4, 66, 440], "overview": [4, 9, 74, 75], "clock": 4, "c": [4, 10, 11, 14, 16, 17, 19, 20, 68, 440], "11": [4, 440], "provid": 4, "convers": [4, 8, 9, 10, 11, 12, 69], "custom": [5, 12, 14, 21], "type": [5, 8, 10, 12, 16, 18, 19, 55, 75, 80, 433], "caster": 5, "eigen": 6, "pass": [6, 7, 11, 60, 438], "valu": [6, 15, 55, 56, 433, 434], "refer": [6, 11, 29], "return": [6, 11, 15], "python": [6, 11, 12, 13, 14, 15, 17, 19, 20, 68, 440], "storag": [6, 55, 74, 80, 433], "order": [6, 15], "fail": 6, "rather": 6, "than": 6, "copi": 6, "vector": [6, 18], "versu": 6, "column": 6, "row": 6, "matric": 6, "function": [7, 12, 15, 18, 19, 20, 58, 68, 78, 436, 440], "callback": 7, "anonym": 7, "list": 9, "all": [9, 65, 440], "builtin": 9, "stl": 10, "contain": 10, "automat": [10, 12], "17": [10, 11], "librari": [10, 19, 61, 75, 439], "make": 10, "opaqu": 10, "bind": [10, 12, 15, 16, 68], "string": [11, 20, 440], "byte": 11, "unicod": 11, "explicit": 11, "without": 11, "wide": 11, "charact": 11, "liter": 11, "graphem": 11, "cluster": 11, "view": [11, 18], "class": 12, "overrid": 12, "virtual": 12, "combin": 12, "inherit": 12, "extend": 12, "trampolin": 12, "forc": 12, "initialis": 12, "differ": 12, "method": [12, 19], "signatur": 12, "constructor": [12, 60, 438], "brace": 12, "initi": [12, 55, 56, 57, 433, 434, 435], "non": [12, 15], "public": 12, "destructor": [12, 16], "call": [12, 15, 19], "implicit": [12, 19], "static": 12, "properti": 12, "oper": [12, 55, 58, 59, 68, 69, 70, 75, 79, 427, 431, 433, 436, 437, 440], "overload": [12, 15], "pickl": 12, "deepcopi": 12, "multipl": [12, 16, 56, 69, 80, 434], "modul": [12, 13, 16, 29, 58, 60, 436, 438], "local": [12, 14], "protect": 12, "member": [12, 75], "final": 12, "templat": [12, 15], "paramet": [12, 15, 57, 60, 435, 438], "downcast": 12, "access": [12, 18, 19], "object": [12, 15], "setup": 12, "embed": [13, 69, 153], "interpret": [13, 16], "get": [13, 60, 66, 76, 438], "start": [13, 66, 76], "execut": 13, "code": [13, 16, 29], "import": 13, "ad": [13, 68], "lifetim": 13, "sub": 13, "except": [14, 19], "built": 14, "translat": 14, "regist": [14, 440], "v": [14, 55, 433], "global": [14, 16], "handl": [14, 19], "from": [14, 19, 20, 60, 61, 72, 75, 76, 438, 439, 440], "error": [14, 16], "api": [14, 69, 74, 75, 80], "chain": 14, "rais": 14, "unrais": 14, "polici": 15, "addit": 15, "keep": 15, "aliv": 15, "guard": 15, "argument": [15, 19], "accept": 15, "arg": 15, "kwarg": 15, "default": [15, 19], "revisit": 15, "keyword": [15, 19], "onli": 15, "posit": 15, "convert": [15, 55, 57, 70, 74, 433, 435, 440], "allow": 15, "prohibit": 15, "none": [15, 19], "resolut": 15, "miscellan": 16, "gener": 16, "note": [16, 29], "regard": 16, "conveni": 16, "macro": 16, "lock": 16, "gil": 16, "common": 16, "sourc": [16, 29], "Of": 16, "sequenc": 16, "data": [16, 55, 69, 80, 433], "iter": [16, 57, 435], "slice": [16, 440], "protocol": [16, 18], "etc": [16, 440], "partit": 16, "over": 16, "extens": 16, "document": [16, 29, 62], "us": [16, 20, 29, 55, 56, 57, 58, 72, 433, 434, 435, 436, 440], "sphinx": 16, "avoid": 16, "docstr": 16, "interfac": 17, "numpi": 18, "buffer": [18, 440], "arrai": 18, "structur": 18, "direct": 18, "ellipsi": 18, "memori": [18, 69, 80], "avail": 19, "wrapper": 19, "instanti": 19, "compound": 19, "cast": 19, "back": [19, 440], "forth": 19, "unpack": 19, "gotcha": 19, "construct": 19, "assign": 19, "py": 19, "util": 20, "": 20, "print": 20, "captur": [20, 440], "standard": 20, "output": [20, 55, 56, 57, 75, 433, 434, 435], "ostream": 20, "evalu": 20, "express": 20, "file": [20, 65], "smart": 21, "pointer": 21, "std": [21, 378], "unique_ptr": 21, "shared_ptr": 21, "cmake": [22, 29], "helper": 22, "content": 29, "introduct": 29, "tbb": 29, "engin": 29, "team": 29, "contact": 29, "releas": 29, "case": 29, "integr": 29, "awar": 29, "project": 29, "binari": [29, 69], "packag": 29, "tutori": [29, 76, 425], "sub_string_find": 29, "sampl": [29, 61, 439], "window": 29, "o": 29, "linux": 29, "technic": 29, "tbbconfig": 29, "tbbinstallconfig": 29, "tbbget": 29, "tbbmakeconfig": 29, "tbbbuild": 29, "fi": 39, "fmt": 40, "tensor": [55, 56, 69, 72, 74, 75, 80, 431, 433, 434, 440], "add": [55, 68, 90, 431, 433], "creat": [55, 60, 433, 438], "host": [55, 433], "borrow": [55, 433], "own": [55, 433], "layout": [55, 56, 80, 433, 434], "devic": [55, 56, 57, 68, 69, 72, 75, 433, 434, 435, 440], "open": [55, 433], "b": [55, 56, 433, 434], "random": [55, 56, 433, 434], "torch": [55, 56, 57, 58, 60, 70, 426, 433, 434, 435, 436, 438, 440], "inspect": [55, 56, 433, 434], "ttnn": [55, 57, 58, 59, 60, 62, 67, 68, 70, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 429, 432, 433, 435, 436, 437, 438, 440], "attribut": [55, 433], "close": [55, 56, 57, 433, 434, 435], "matrix": [56, 69, 434], "enabl": [56, 57, 434, 435, 440], "program": [56, 57, 75, 434, 435, 440], "cach": [56, 57, 69, 75, 434, 435, 440], "configur": [56, 57, 434, 435], "multipli": [56, 288, 434], "result": [56, 434], "more": [56, 70, 434], "perform": [56, 65, 434], "config": [56, 69, 80, 434], "multi": [57, 76, 428, 435], "head": [57, 76, 428, 435], "attent": [57, 76, 428, 435], "write": [57, 435], "activ": [57, 435], "weight": [57, 435], "run": [57, 60, 65, 66, 72, 435, 438, 440], "first": [57, 435], "subsequ": [57, 435], "optim": [57, 70, 76, 435], "version": [57, 60, 435, 438], "pre": [57, 61, 435, 439, 440], "process": [57, 435], "model": [57, 58, 61, 62, 66, 69, 70, 76, 435, 436, 439], "check": [57, 435], "match": [57, 435], "origin": [57, 435], "implement": [57, 60, 68, 435, 438], "trace": [58, 60, 436, 438, 440], "written": [58, 436], "profil": [59, 75, 79, 429, 437], "resnet": [60, 430, 438], "block": [60, 430, 438], "torchvis": [60, 438], "preprocess": [60, 438], "displai": [60, 61, 438, 439], "graph": [60, 61, 75, 426, 438, 439, 440], "build": [61, 71, 76, 439], "pytorch": [61, 72, 74, 439], "base": [61, 439], "clone": [61, 129, 439], "http": [61, 439], "github": [61, 439], "com": [61, 439], "facebookresearch": [61, 439], "dit": [61, 439], "git": [61, 439], "download": [61, 439], "xl": [61, 439], "2": [61, 68, 70, 75, 76, 439, 440], "train": [61, 439], "welcom": 62, "tt": [62, 72, 74, 75, 76], "nn": [62, 76], "resourc": 62, "indic": 62, "tabl": 62, "develop": 63, "report": [64, 69, 79], "bug": 64, "propos": 64, "request": 64, "troubleshoot": 64, "debug": [64, 440], "tip": 64, "commun": 64, "prerequisit": [65, 66], "perf": [65, 79], "exampl": [66, 68, 70, 72, 74, 440], "next": 66, "step": [66, 68, 70], "what": [67, 68], "i": [67, 68], "kei": 67, "new": [68, 75, 78], "faq": 68, "ar": 68, "need": 68, "1": [68, 70, 76, 440], "option": [68, 75], "golden": 68, "creation": 69, "pointwis": 69, "unari": 69, "ternari": 69, "loss": 69, "reduct": 69, "movement": 69, "normal": 69, "transform": [69, 402, 403, 404, 406, 407, 408, 409], "pool": 69, "vision": 69, "kv": 69, "hook": [69, 440], "rewrit": 70, "switch": 70, "3": [70, 76, 440], "uplift": 71, "demo": [71, 76], "lib": [72, 75], "one": 72, "op": 72, "acceler": 72, "odd": 72, "size": 72, "last": 72, "dim": 72, "depend": 73, "memoryconfig": 74, "between": 74, "infrastructur": 75, "input": 75, "fast": 75, "dispatch": 75, "log": [75, 242, 440], "through": 75, "tt_lib": [75, 440], "primari": 75, "enum": 75, "fallback": 75, "experiment": [75, 405], "fuse": 75, "mini": 75, "complex": 75, "instal": 76, "explor": 76, "our": 76, "simpl": 76, "4": [76, 440], "where": [76, 419], "go": 76, "here": 76, "onboard": 78, "header": 79, "profile_thi": 79, "descript": 79, "shape": 80, "requir": 80, "width": 80, "shard": 80, "getdefaultdevic": 81, "maxpool2d": 82, "setdefaultdevic": 83, "ab": 84, "abs_bw": 85, "aco": 86, "acos_bw": 87, "acosh": 88, "acosh_bw": 89, "add_bw": 91, "addalpha": 92, "addalpha_bw": 93, "addcdiv": 94, "addcdiv_bw": 95, "addcmul": 96, "addcmul_bw": 97, "angl": 98, "angle_bw": 99, "arang": 100, "argmax": 101, "as_tensor": 102, "asin": 103, "asin_bw": 104, "asinh": 105, "asinh_bw": 106, "assign_bw": 107, "atan": 108, "atan2": 109, "atan2_bw": 110, "atan_bw": 111, "atanh": 112, "atanh_bw": 113, "bias_gelu_bw": 114, "bitwise_and": 115, "bitwise_left_shift": 116, "bitwise_not": 117, "bitwise_or": 118, "bitwise_right_shift": 119, "bitwise_xor": 120, "cbrt": 121, "ceil": 122, "ceil_bw": 123, "celu": 124, "celu_bw": 125, "clamp": 126, "clamp_bw": 127, "clip": 128, "close_devic": 130, "concat": 131, "concat_bw": 132, "conj": 133, "conj_bw": 134, "co": 135, "cos_bw": 136, "cosh": 137, "cosh_bw": 138, "create_sharded_memory_config": 139, "dealloc": 140, "deg2rad": 141, "deg2rad_bw": 142, "digamma": 143, "digamma_bw": 144, "div": 145, "div_bw": 146, "div_no_nan": 147, "div_no_nan_bw": 148, "downsampl": 149, "dump_tensor": 150, "elu": 151, "elu_bw": 152, "embedding_bw": 154, "empti": 155, "eq": [156, 157], "eqz": 158, "erf": 159, "erf_bw": 160, "erfc": 161, "erfc_bw": 162, "erfinv": 163, "erfinv_bw": 164, "exp": 165, "exp2": 166, "exp2_bw": 167, "exp_bw": 168, "expm1": 169, "expm1_bw": 170, "fill_bw": 171, "fill_ones_rm": 172, "fill_rm": 173, "fill_zero_bw": 174, "floor": 175, "floor_bw": 176, "floor_div": 177, "fmod": 178, "fmod_bw": 179, "format_input_tensor": 180, "format_output_tensor": 181, "frac": 182, "frac_bw": 183, "from_devic": 184, "from_torch": 185, "full": 186, "full_lik": 187, "ge": [188, 189], "geglu": 190, "gelu": 191, "gelu_bw": 192, "gez": 193, "global_avg_pool2d": 194, "glu": 195, "group_norm": 196, "gt": [197, 198], "gtz": 199, "hardshrink": 200, "hardshrink_bw": 201, "hardsigmoid": 202, "hardsigmoid_bw": 203, "hardswish": 204, "hardswish_bw": 205, "hardtanh": 206, "hardtanh_bw": 207, "heavisid": 208, "hypot": 209, "hypot_bw": 210, "i0": 211, "i0_bw": 212, "ident": 213, "imag": 214, "imag_bw": 215, "indexed_fil": 216, "is_imag": 217, "is_real": 218, "isclos": 219, "isfinit": 220, "isinf": 221, "isnan": 222, "isneginf": 223, "isposinf": 224, "kv_cach": [225, 226], "fill_cache_for_user_": 225, "update_cache_for_token_": 226, "l1_loss": 227, "layer_norm": 228, "ldexp": 229, "ldexp_bw": 230, "le": [231, 232], "leaky_relu": 233, "leaky_relu_bw": 234, "lerp": 235, "lerp_bw": 236, "lez": 237, "lgamma": 238, "lgamma_bw": 239, "linear": 240, "load_tensor": 241, "log10": 243, "log10_bw": 244, "log1p": 245, "log1p_bw": 246, "log2": 247, "log2_bw": 248, "log_bw": 249, "log_sigmoid": 250, "log_sigmoid_bw": 251, "logaddexp": 252, "logaddexp2": 253, "logaddexp2_bw": 254, "logaddexp_bw": 255, "logical_and": [256, 257], "logical_not": [258, 259], "logical_or": [260, 261], "logical_xor": [262, 263], "logit": 264, "logit_bw": 265, "logiteps_bw": 266, "lt": [267, 268], "ltz": 269, "mac": 270, "manage_devic": 271, "matmul": [272, 427], "max": 273, "max_bw": 274, "max_pool2d": 275, "maximum": 276, "mean": 277, "min": 278, "min_bw": 279, "minimum": 280, "mish": 281, "model_preprocess": [282, 283], "preprocess_model": 282, "preprocess_model_paramet": 283, "mse_loss": 284, "mul_bw": 285, "multigammaln": 286, "multigammaln_bw": 287, "ne": [289, 290], "neg": 291, "neg_bw": 292, "nextaft": 293, "nez": 294, "nonzero": 295, "normalize_glob": 296, "normalize_hw": 297, "ones": 298, "ones_lik": 299, "open_devic": 300, "outer": 301, "pad": 302, "pad_to_tile_shap": 303, "permut": 304, "polar": 305, "polar_bw": 306, "polygamma": 307, "polygamma_bw": 308, "polyv": 309, "pow": 310, "pow_bw": 311, "prelu": 312, "prod": 313, "prod_bw": 314, "rad2deg": 315, "rad2deg_bw": 316, "rdiv": 317, "rdiv_bw": 318, "real": 319, "real_bw": 320, "realloc": 321, "reciproc": 322, "reciprocal_bw": 323, "register_post_operation_hook": 324, "register_pre_operation_hook": 325, "reglu": 326, "relu": 327, "relu6": 328, "relu6_bw": 329, "relu_bw": 330, "relu_max": 331, "relu_min": 332, "remaind": 333, "remainder_bw": 334, "repeat": 335, "repeat_bw": 336, "repeat_interleav": 337, "reshap": 338, "rms_norm": 339, "round": 340, "round_bw": 341, "rpow": 342, "rpow_bw": 343, "rsqrt": 344, "rsqrt_bw": 345, "rsub": 346, "rsub_bw": 347, "scatter": 348, "selu": 349, "selu_bw": 350, "set_printopt": 351, "sigmoid": 352, "sigmoid_accur": 353, "sigmoid_bw": 354, "sign": 355, "sign_bw": 356, "signbit": 357, "silu": 358, "silu_bw": 359, "sin": 360, "sin_bw": 361, "sinh": 362, "sinh_bw": 363, "softmax": 364, "softplu": 365, "softplus_bw": 366, "softshrink": 367, "softshrink_bw": 368, "softsign": 369, "softsign_bw": 370, "split": 371, "sqrt": 372, "sqrt_bw": 373, "squar": 374, "square_bw": 375, "squared_differ": 376, "squared_difference_bw": 377, "sub_bw": 379, "subalpha": 380, "subalpha_bw": 381, "subtract": 382, "sum": 383, "swiglu": 384, "swish": 385, "synchronize_devic": 386, "tan": 387, "tan_bw": 388, "tanh": 389, "tanh_bw": 390, "tanhshrink": 391, "tanhshrink_bw": 392, "threshold": 393, "threshold_bw": 394, "tiliz": 395, "tilize_with_val_pad": 396, "to_devic": 397, "to_layout": 398, "to_memory_config": 399, "to_torch": 400, "topk": 401, "attention_softmax": 402, "attention_softmax_": 403, "concatenate_head": 404, "rotary_embed": 405, "scaled_dot_product_attent": 406, "scaled_dot_product_attention_decod": 407, "scaled_dot_product_attention_decode_gqa": 408, "split_query_key_value_and_split_head": 409, "tril": 410, "triu": 411, "trunc": 412, "trunc_bw": 413, "until": 414, "untilize_with_halo_v2": 415, "untilize_with_unpad": 416, "upsampl": 417, "var": 418, "where_bw": 420, "xlogi": 421, "xlogy_bw": 422, "zero": 423, "zeros_lik": 424, "dit_xl_2": 426, "With": 426, "basic": [430, 440], "tracer": 432, "__getitem__": 440, "5": 440, "intermedi": 440, "6": 440, "7": 440, "8": 440, "9": 440, "10": 440, "chang": 440, "represent": 440, "visual": 440, "web": 440, "browser": 440, "12": 440, "post": 440, "13": 440, "queri": 440, "14": 440, "fall": 440, "15": 440, "alloc": 440, "placehold": 441, "titl": 441}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Welcome to TT-NN documentation!": [[62, "welcome-to-tt-nn-documentation"]], "TTNN": [[62, null]], "Models": [[62, null]], "Resources": [[62, null]], "Indices and tables": [[62, "indices-and-tables"]], "Contributing as a developer": [[63, "contributing-as-a-developer"]], "Support": [[64, "support"]], "Reporting bugs, feature proposals, or support requests": [[64, "reporting-bugs-feature-proposals-or-support-requests"]], "Troubleshooting and debugging tips": [[64, "troubleshooting-and-debugging-tips"]], "Community": [[64, "community"]], "Performance": [[65, "performance"]], "Prerequisites": [[65, "prerequisites"], [66, "prerequisites"]], "Running a perf file": [[65, "running-a-perf-file"]], "Running all the perf files": [[65, "running-all-the-perf-files"]], "Getting Started": [[66, "getting-started"], [76, "getting-started"]], "Running an example model": [[66, "running-an-example-model"]], "Next steps": [[66, "next-steps"]], "What is ttnn?": [[67, "what-is-ttnn"]], "Key features of ttnn": [[67, "key-features-of-ttnn"]], "Adding New ttnn Operation": [[68, "adding-new-ttnn-operation"]], "FAQ": [[68, "faq"]], "What is a ttnn operation?": [[68, "what-is-a-ttnn-operation"]], "What steps are needed to add ttnn operation in C++?": [[68, "what-steps-are-needed-to-add-ttnn-operation-in-c"]], "What steps are needed to add ttnn operation in Python?": [[68, "what-steps-are-needed-to-add-ttnn-operation-in-python"]], "Example of Adding a new Device Operation": [[68, "example-of-adding-a-new-device-operation"]], "C++ Implementation": [[68, "c-implementation"]], "Step 1: Implement device operation": [[68, "step-1-implement-device-operation"]], "Step 2: Implement the operation in C++": [[68, "step-2-implement-the-operation-in-c"]], "Python Implementation": [[68, "python-implementation"]], "Step 1: Add Python binding": [[68, "step-1-add-python-binding"]], "Step 2: (Optional) Add golden function for the operation in Python": [[68, "step-2-optional-add-golden-function-for-the-operation-in-python"]], "APIs": [[69, "apis"], [80, "apis"]], "Device": [[69, "device"]], "Memory Config": [[69, "memory-config"], [80, "memory-config"]], "Operations": [[69, "operations"]], "Core": [[69, "core"]], "Tensor Creation": [[69, "tensor-creation"]], "Matrix Multiplication": [[69, "matrix-multiplication"], [434, "Matrix-Multiplication"], [56, "Matrix-Multiplication"]], "Pointwise Unary": [[69, "pointwise-unary"]], "Pointwise Binary": [[69, "pointwise-binary"]], "Pointwise Ternary": [[69, "pointwise-ternary"]], "Losses": [[69, "losses"]], "Reduction": [[69, "reduction"]], "Data Movement": [[69, "data-movement"]], "Normalization": [[69, "normalization"]], "Transformer": [[69, "transformer"]], "Embedding": [[69, "embedding"]], "Pooling": [[69, "pooling"]], "Vision": [[69, "vision"]], "KV Cache": [[69, "kv-cache"]], "Model Conversion": [[69, "model-conversion"]], "Reports": [[69, "reports"]], "Operation Hooks": [[69, "operation-hooks"]], "Converting torch Model to ttnn": [[70, "converting-torch-model-to-ttnn"]], "Step 1 - Rewriting the Model": [[70, "step-1-rewriting-the-model"]], "Step 2 - Switching to ttnn Operations": [[70, "step-2-switching-to-ttnn-operations"]], "Step 3 - Optimizing the Model": [[70, "step-3-optimizing-the-model"]], "More examples": [[70, "more-examples"]], "Building and Uplifting Demos": [[71, "building-and-uplifting-demos"]], "Examples of Tensor and TT-LIB Use": [[72, "examples-of-tensor-and-tt-lib-use"]], "Run one OP from TT-LIB on TT Accelerator device": [[72, "run-one-op-from-tt-lib-on-tt-accelerator-device"]], "Run TT-LIB and PyTorch OPs": [[72, "run-tt-lib-and-pytorch-ops"]], "Tensors with odd size of last dim": [[72, "tensors-with-odd-size-of-last-dim"]], "Dependencies": [[73, "dependencies"]], "Tensor": [[74, "tensor"], [80, "tensor"]], "Overview": [[74, "overview"], [75, "overview"], [9, "overview"]], "Tensor Storage": [[74, "tensor-storage"]], "Tensor API": [[74, "tensor-api"]], "MemoryConfig": [[74, "memoryconfig"]], "Examples of converting between PyTorch Tensor and TT Tensor": [[74, "examples-of-converting-between-pytorch-tensor-and-tt-tensor"]], "Converting a PyTorch Tensor to a TT Tensor": [[74, "converting-a-pytorch-tensor-to-a-tt-tensor"]], "Converting a TT Tensor to a PyTorch Tensor": [[74, "converting-a-tt-tensor-to-a-pytorch-tensor"]], "TT-LIB": [[75, "tt-lib"]], "Operation Infrastructure": [[75, "operation-infrastructure"]], "New Device Operation": [[75, "new-device-operation"]], "New Device Operation with a member": [[75, "new-device-operation-with-a-member"]], "New Device Operation with Optional Input Tensors": [[75, "new-device-operation-with-optional-input-tensors"]], "New Device Operation with Optional Output Tensors": [[75, "new-device-operation-with-optional-output-tensors"]], "Profiler": [[75, "profiler"]], "Fast Dispatch": [[75, "fast-dispatch"]], "Program Caching": [[75, "program-caching"]], "Logs": [[75, "logs"]], "TT-LIB API through tt_lib": [[75, "tt-lib-api-through-tt-lib"]], "Primary Operations": [[75, "primary-operations"]], "Enums": [[75, "enums"]], "Fallback Operations": [[75, "fallback-operations"]], "Experimental Operations": [[75, "experimental-operations"]], "Fused Operations from tt_lib Mini-Graph Library": [[75, "fused-operations-from-tt-lib-mini-graph-library"]], "Complex Operations (Type 2)": [[75, "complex-operations-type-2"]], "1. Install and Build": [[76, "install-and-build"]], "2. Explore our model demos": [[76, "explore-our-model-demos"]], "3. TT-NN Tutorial: Multi-Head Attention (Simple)": [[76, "tt-nn-tutorial-multi-head-attention-simple"]], "4. TT-NN Tutorial: Multi-Head Attention (Optimized)": [[76, "tt-nn-tutorial-multi-head-attention-optimized"]], "Where to go from here": [[76, "where-to-go-from-here"]], "Onboarding New Functionality": [[78, "onboarding-new-functionality"]], "Profiling ttnn Operations": [[79, "profiling-ttnn-operations"]], "Perf Report Headers": [[79, "perf-report-headers"]], "profile_this description": [[79, "profile-this-description"]], "Shape": [[80, "shape"]], "Layout": [[80, "layout"], [433, "Layout"], [55, "Layout"]], "Data Type": [[80, "data-type"], [433, "Data-Type"], [55, "Data-Type"]], "Required Width Multiples for Data Types": [[80, "id5"]], "Storage": [[80, "storage"]], "Tensor Sharding": [[80, "tensor-sharding"]], "ttnn.GetDefaultDevice": [[81, "ttnn-getdefaultdevice"]], "ttnn.SetDefaultDevice": [[83, "ttnn-setdefaultdevice"]], "ttnn.abs": [[84, "ttnn-abs"]], "ttnn.abs_bw": [[85, "ttnn-abs-bw"]], "ttnn.acos": [[86, "ttnn-acos"]], "ttnn.acos_bw": [[87, "ttnn-acos-bw"]], "ttnn.acosh": [[88, "ttnn-acosh"]], "ttnn.acosh_bw": [[89, "ttnn-acosh-bw"]], "ttnn.add": [[90, "ttnn-add"]], "ttnn.add_bw": [[91, "ttnn-add-bw"]], "ttnn.addalpha": [[92, "ttnn-addalpha"]], "ttnn.addalpha_bw": [[93, "ttnn-addalpha-bw"]], "ttnn.addcdiv": [[94, "ttnn-addcdiv"]], "ttnn.addcdiv_bw": [[95, "ttnn-addcdiv-bw"]], "ttnn.addcmul": [[96, "ttnn-addcmul"]], "ttnn.addcmul_bw": [[97, "ttnn-addcmul-bw"]], "ttnn.angle": [[98, "ttnn-angle"]], "ttnn.angle_bw": [[99, "ttnn-angle-bw"]], "ttnn.arange": [[100, "ttnn-arange"]], "ttnn.argmax": [[101, "ttnn-argmax"]], "ttnn.as_tensor": [[102, "ttnn-as-tensor"]], "ttnn.asin": [[103, "ttnn-asin"]], "ttnn.asin_bw": [[104, "ttnn-asin-bw"]], "ttnn.asinh": [[105, "ttnn-asinh"]], "ttnn.asinh_bw": [[106, "ttnn-asinh-bw"]], "ttnn.assign_bw": [[107, "ttnn-assign-bw"]], "ttnn.atan": [[108, "ttnn-atan"]], "ttnn.atan2": [[109, "ttnn-atan2"]], "ttnn.atan2_bw": [[110, "ttnn-atan2-bw"]], "ttnn.atan_bw": [[111, "ttnn-atan-bw"]], "ttnn.atanh": [[112, "ttnn-atanh"]], "ttnn.atanh_bw": [[113, "ttnn-atanh-bw"]], "ttnn.bias_gelu_bw": [[114, "ttnn-bias-gelu-bw"]], "ttnn.bitwise_and": [[115, "ttnn-bitwise-and"]], "ttnn.bitwise_left_shift": [[116, "ttnn-bitwise-left-shift"]], "ttnn.bitwise_not": [[117, "ttnn-bitwise-not"]], "ttnn.bitwise_or": [[118, "ttnn-bitwise-or"]], "ttnn.bitwise_right_shift": [[119, "ttnn-bitwise-right-shift"]], "ttnn.bitwise_xor": [[120, "ttnn-bitwise-xor"]], "ttnn.cbrt": [[121, "ttnn-cbrt"]], "ttnn.ceil": [[122, "ttnn-ceil"]], "ttnn.ceil_bw": [[123, "ttnn-ceil-bw"]], "ttnn.celu": [[124, "ttnn-celu"]], "ttnn.celu_bw": [[125, "ttnn-celu-bw"]], "ttnn.clamp": [[126, "ttnn-clamp"]], "ttnn.clamp_bw": [[127, "ttnn-clamp-bw"]], "ttnn.clip": [[128, "ttnn-clip"]], "ttnn.clone": [[129, "ttnn-clone"]], "ttnn.close_device": [[130, "ttnn-close-device"]], "ttnn.concat": [[131, "ttnn-concat"]], "ttnn.concat_bw": [[132, "ttnn-concat-bw"]], "ttnn.conj": [[133, "ttnn-conj"]], "ttnn.conj_bw": [[134, "ttnn-conj-bw"]], "ttnn.cos": [[135, "ttnn-cos"]], "ttnn.cos_bw": [[136, "ttnn-cos-bw"]], "ttnn.cosh": [[137, "ttnn-cosh"]], "ttnn.cosh_bw": [[138, "ttnn-cosh-bw"]], "ttnn.create_sharded_memory_config": [[139, "ttnn-create-sharded-memory-config"]], "ttnn.deallocate": [[140, "ttnn-deallocate"]], "ttnn.deg2rad": [[141, "ttnn-deg2rad"]], "ttnn.deg2rad_bw": [[142, "ttnn-deg2rad-bw"]], "ttnn.digamma": [[143, "ttnn-digamma"]], "ttnn.digamma_bw": [[144, "ttnn-digamma-bw"]], "ttnn.div": [[145, "ttnn-div"]], "ttnn.div_bw": [[146, "ttnn-div-bw"]], "ttnn.div_no_nan": [[147, "ttnn-div-no-nan"]], "ttnn.div_no_nan_bw": [[148, "ttnn-div-no-nan-bw"]], "ttnn.downsample": [[149, "ttnn-downsample"]], "ttnn.dump_tensor": [[150, "ttnn-dump-tensor"]], "ttnn.elu": [[151, "ttnn-elu"]], "ttnn.elu_bw": [[152, "ttnn-elu-bw"]], "ttnn.embedding": [[153, "ttnn-embedding"]], "ttnn.embedding_bw": [[154, "ttnn-embedding-bw"]], "ttnn.empty": [[155, "ttnn-empty"]], "ttnn.eq": [[156, "ttnn-eq"], [157, "ttnn-eq"]], "ttnn.eqz": [[158, "ttnn-eqz"]], "ttnn.erf": [[159, "ttnn-erf"]], "ttnn.erf_bw": [[160, "ttnn-erf-bw"]], "ttnn.erfc": [[161, "ttnn-erfc"]], "ttnn.erfc_bw": [[162, "ttnn-erfc-bw"]], "ttnn.erfinv": [[163, "ttnn-erfinv"]], "ttnn.erfinv_bw": [[164, "ttnn-erfinv-bw"]], "ttnn.exp": [[165, "ttnn-exp"]], "ttnn.exp2": [[166, "ttnn-exp2"]], "ttnn.exp2_bw": [[167, "ttnn-exp2-bw"]], "ttnn.exp_bw": [[168, "ttnn-exp-bw"]], "ttnn.expm1": [[169, "ttnn-expm1"]], "ttnn.expm1_bw": [[170, "ttnn-expm1-bw"]], "ttnn.fill_bw": [[171, "ttnn-fill-bw"]], "ttnn.fill_ones_rm": [[172, "ttnn-fill-ones-rm"]], "ttnn.fill_rm": [[173, "ttnn-fill-rm"]], "ttnn.fill_zero_bw": [[174, "ttnn-fill-zero-bw"]], "ttnn.floor": [[175, "ttnn-floor"]], "ttnn.floor_bw": [[176, "ttnn-floor-bw"]], "ttnn.floor_div": [[177, "ttnn-floor-div"]], "ttnn.fmod": [[178, "ttnn-fmod"]], "ttnn.fmod_bw": [[179, "ttnn-fmod-bw"]], "ttnn.format_input_tensor": [[180, "ttnn-format-input-tensor"]], "ttnn.format_output_tensor": [[181, "ttnn-format-output-tensor"]], "ttnn.frac": [[182, "ttnn-frac"]], "ttnn.frac_bw": [[183, "ttnn-frac-bw"]], "ttnn.from_device": [[184, "ttnn-from-device"]], "ttnn.from_torch": [[185, "ttnn-from-torch"]], "ttnn.full": [[186, "ttnn-full"]], "ttnn.full_like": [[187, "ttnn-full-like"]], "ttnn.ge": [[188, "ttnn-ge"], [189, "ttnn-ge"]], "ttnn.geglu": [[190, "ttnn-geglu"]], "ttnn.gelu": [[191, "ttnn-gelu"]], "ttnn.gelu_bw": [[192, "ttnn-gelu-bw"]], "ttnn.gez": [[193, "ttnn-gez"]], "ttnn.global_avg_pool2d": [[194, "ttnn-global-avg-pool2d"]], "ttnn.glu": [[195, "ttnn-glu"]], "ttnn.group_norm": [[196, "ttnn-group-norm"]], "ttnn.gt": [[197, "ttnn-gt"], [198, "ttnn-gt"]], "ttnn.gtz": [[199, "ttnn-gtz"]], "ttnn.hardshrink": [[200, "ttnn-hardshrink"]], "ttnn.hardshrink_bw": [[201, "ttnn-hardshrink-bw"]], "ttnn.hardsigmoid": [[202, "ttnn-hardsigmoid"]], "ttnn.hardsigmoid_bw": [[203, "ttnn-hardsigmoid-bw"]], "ttnn.hardswish": [[204, "ttnn-hardswish"]], "ttnn.hardswish_bw": [[205, "ttnn-hardswish-bw"]], "ttnn.hardtanh": [[206, "ttnn-hardtanh"]], "ttnn.hardtanh_bw": [[207, "ttnn-hardtanh-bw"]], "ttnn.heaviside": [[208, "ttnn-heaviside"]], "ttnn.hypot": [[209, "ttnn-hypot"]], "ttnn.hypot_bw": [[210, "ttnn-hypot-bw"]], "ttnn.i0": [[211, "ttnn-i0"]], "ttnn.i0_bw": [[212, "ttnn-i0-bw"]], "ttnn.identity": [[213, "ttnn-identity"]], "ttnn.imag": [[214, "ttnn-imag"]], "ttnn.imag_bw": [[215, "ttnn-imag-bw"]], "ttnn.indexed_fill": [[216, "ttnn-indexed-fill"]], "ttnn.is_imag": [[217, "ttnn-is-imag"]], "ttnn.is_real": [[218, "ttnn-is-real"]], "ttnn.isclose": [[219, "ttnn-isclose"]], "ttnn.isfinite": [[220, "ttnn-isfinite"]], "ttnn.isinf": [[221, "ttnn-isinf"]], "ttnn.isnan": [[222, "ttnn-isnan"]], "ttnn.isneginf": [[223, "ttnn-isneginf"]], "ttnn.isposinf": [[224, "ttnn-isposinf"]], "ttnn.kv_cache.fill_cache_for_user_": [[225, "ttnn-kv-cache-fill-cache-for-user"]], "ttnn.kv_cache.update_cache_for_token_": [[226, "ttnn-kv-cache-update-cache-for-token"]], "ttnn.l1_loss": [[227, "ttnn-l1-loss"]], "ttnn.layer_norm": [[228, "ttnn-layer-norm"]], "ttnn.ldexp": [[229, "ttnn-ldexp"]], "ttnn.ldexp_bw": [[230, "ttnn-ldexp-bw"]], "ttnn.le": [[231, "ttnn-le"], [232, "ttnn-le"]], "ttnn.leaky_relu": [[233, "ttnn-leaky-relu"]], "ttnn.leaky_relu_bw": [[234, "ttnn-leaky-relu-bw"]], "ttnn.lerp": [[235, "ttnn-lerp"]], "ttnn.lerp_bw": [[236, "ttnn-lerp-bw"]], "ttnn.lez": [[237, "ttnn-lez"]], "ttnn.lgamma": [[238, "ttnn-lgamma"]], "ttnn.lgamma_bw": [[239, "ttnn-lgamma-bw"]], "ttnn.linear": [[240, "ttnn-linear"]], "ttnn.load_tensor": [[241, "ttnn-load-tensor"]], "ttnn.log": [[242, "ttnn-log"]], "ttnn.log10": [[243, "ttnn-log10"]], "ttnn.log10_bw": [[244, "ttnn-log10-bw"]], "ttnn.log1p": [[245, "ttnn-log1p"]], "ttnn.log1p_bw": [[246, "ttnn-log1p-bw"]], "ttnn.log2": [[247, "ttnn-log2"]], "ttnn.log2_bw": [[248, "ttnn-log2-bw"]], "ttnn.log_bw": [[249, "ttnn-log-bw"]], "ttnn.log_sigmoid": [[250, "ttnn-log-sigmoid"]], "ttnn.log_sigmoid_bw": [[251, "ttnn-log-sigmoid-bw"]], "ttnn.logaddexp": [[252, "ttnn-logaddexp"]], "ttnn.logaddexp2": [[253, "ttnn-logaddexp2"]], "ttnn.logaddexp2_bw": [[254, "ttnn-logaddexp2-bw"]], "ttnn.logaddexp_bw": [[255, "ttnn-logaddexp-bw"]], "ttnn.logical_and": [[256, "ttnn-logical-and"], [257, "ttnn-logical-and"]], "ttnn.logical_not": [[258, "ttnn-logical-not"], [259, "ttnn-logical-not"]], "ttnn.logical_or": [[260, "ttnn-logical-or"], [261, "ttnn-logical-or"]], "ttnn.logical_xor": [[262, "ttnn-logical-xor"], [263, "ttnn-logical-xor"]], "ttnn.logit": [[264, "ttnn-logit"]], "ttnn.logit_bw": [[265, "ttnn-logit-bw"]], "ttnn.logiteps_bw": [[266, "ttnn-logiteps-bw"]], "ttnn.lt": [[267, "ttnn-lt"], [268, "ttnn-lt"]], "ttnn.ltz": [[269, "ttnn-ltz"]], "ttnn.mac": [[270, "ttnn-mac"]], "ttnn.manage_device": [[271, "ttnn-manage-device"]], "ttnn.matmul": [[272, "ttnn-matmul"]], "ttnn.max": [[273, "ttnn-max"]], "ttnn.max_bw": [[274, "ttnn-max-bw"]], "ttnn.max_pool2d": [[275, "ttnn-max-pool2d"]], "ttnn.maximum": [[276, "ttnn-maximum"]], "ttnn.mean": [[277, "ttnn-mean"]], "ttnn.min": [[278, "ttnn-min"]], "ttnn.min_bw": [[279, "ttnn-min-bw"]], "ttnn.minimum": [[280, "ttnn-minimum"]], "ttnn.mish": [[281, "ttnn-mish"]], "ttnn.model_preprocessing.preprocess_model": [[282, "ttnn-model-preprocessing-preprocess-model"]], "ttnn.model_preprocessing.preprocess_model_parameters": [[283, "ttnn-model-preprocessing-preprocess-model-parameters"]], "ttnn.mse_loss": [[284, "ttnn-mse-loss"]], "ttnn.mul_bw": [[285, "ttnn-mul-bw"]], "ttnn.multigammaln": [[286, "ttnn-multigammaln"]], "ttnn.multigammaln_bw": [[287, "ttnn-multigammaln-bw"]], "ttnn.multiply": [[288, "ttnn-multiply"]], "ttnn.ne": [[289, "ttnn-ne"], [290, "ttnn-ne"]], "ttnn.neg": [[291, "ttnn-neg"]], "ttnn.neg_bw": [[292, "ttnn-neg-bw"]], "ttnn.nextafter": [[293, "ttnn-nextafter"]], "ttnn.nez": [[294, "ttnn-nez"]], "ttnn.nonzero": [[295, "ttnn-nonzero"]], "ttnn.normalize_global": [[296, "ttnn-normalize-global"]], "ttnn.normalize_hw": [[297, "ttnn-normalize-hw"]], "ttnn.ones": [[298, "ttnn-ones"]], "ttnn.ones_like": [[299, "ttnn-ones-like"]], "ttnn.open_device": [[300, "ttnn-open-device"]], "ttnn.outer": [[301, "ttnn-outer"]], "ttnn.pad": [[302, "ttnn-pad"]], "ttnn.pad_to_tile_shape": [[303, "ttnn-pad-to-tile-shape"]], "ttnn.permute": [[304, "ttnn-permute"]], "ttnn.polar": [[305, "ttnn-polar"]], "ttnn.polar_bw": [[306, "ttnn-polar-bw"]], "ttnn.polygamma": [[307, "ttnn-polygamma"]], "ttnn.polygamma_bw": [[308, "ttnn-polygamma-bw"]], "ttnn.polyval": [[309, "ttnn-polyval"]], "ttnn.pow": [[310, "ttnn-pow"]], "ttnn.pow_bw": [[311, "ttnn-pow-bw"]], "ttnn.prelu": [[312, "ttnn-prelu"]], "ttnn.prod": [[313, "ttnn-prod"]], "ttnn.prod_bw": [[314, "ttnn-prod-bw"]], "ttnn.rad2deg": [[315, "ttnn-rad2deg"]], "ttnn.rad2deg_bw": [[316, "ttnn-rad2deg-bw"]], "ttnn.rdiv": [[317, "ttnn-rdiv"]], "ttnn.rdiv_bw": [[318, "ttnn-rdiv-bw"]], "ttnn.real": [[319, "ttnn-real"]], "ttnn.real_bw": [[320, "ttnn-real-bw"]], "ttnn.reallocate": [[321, "ttnn-reallocate"]], "ttnn.reciprocal": [[322, "ttnn-reciprocal"]], "ttnn.reciprocal_bw": [[323, "ttnn-reciprocal-bw"]], "ttnn.register_post_operation_hook": [[324, "ttnn-register-post-operation-hook"]], "ttnn.register_pre_operation_hook": [[325, "ttnn-register-pre-operation-hook"]], "ttnn.reglu": [[326, "ttnn-reglu"]], "ttnn.relu": [[327, "ttnn-relu"]], "ttnn.relu6": [[328, "ttnn-relu6"]], "ttnn.relu6_bw": [[329, "ttnn-relu6-bw"]], "ttnn.relu_bw": [[330, "ttnn-relu-bw"]], "ttnn.relu_max": [[331, "ttnn-relu-max"]], "ttnn.relu_min": [[332, "ttnn-relu-min"]], "ttnn.remainder": [[333, "ttnn-remainder"]], "ttnn.remainder_bw": [[334, "ttnn-remainder-bw"]], "ttnn.repeat": [[335, "ttnn-repeat"]], "ttnn.repeat_bw": [[336, "ttnn-repeat-bw"]], "ttnn.repeat_interleave": [[337, "ttnn-repeat-interleave"]], "ttnn.reshape": [[338, "ttnn-reshape"]], "ttnn.rms_norm": [[339, "ttnn-rms-norm"]], "ttnn.round": [[340, "ttnn-round"]], "ttnn.round_bw": [[341, "ttnn-round-bw"]], "ttnn.rpow": [[342, "ttnn-rpow"]], "ttnn.rpow_bw": [[343, "ttnn-rpow-bw"]], "ttnn.rsqrt": [[344, "ttnn-rsqrt"]], "ttnn.rsqrt_bw": [[345, "ttnn-rsqrt-bw"]], "ttnn.rsub": [[346, "ttnn-rsub"]], "ttnn.rsub_bw": [[347, "ttnn-rsub-bw"]], "ttnn.scatter": [[348, "ttnn-scatter"]], "ttnn.selu": [[349, "ttnn-selu"]], "ttnn.selu_bw": [[350, "ttnn-selu-bw"]], "ttnn.set_printoptions": [[351, "ttnn-set-printoptions"]], "ttnn.sigmoid": [[352, "ttnn-sigmoid"]], "ttnn.sigmoid_accurate": [[353, "ttnn-sigmoid-accurate"]], "ttnn.sigmoid_bw": [[354, "ttnn-sigmoid-bw"]], "ttnn.sign": [[355, "ttnn-sign"]], "ttnn.sign_bw": [[356, "ttnn-sign-bw"]], "ttnn.signbit": [[357, "ttnn-signbit"]], "ttnn.silu": [[358, "ttnn-silu"]], "ttnn.silu_bw": [[359, "ttnn-silu-bw"]], "ttnn.sin": [[360, "ttnn-sin"]], "ttnn.sin_bw": [[361, "ttnn-sin-bw"]], "ttnn.sinh": [[362, "ttnn-sinh"]], "ttnn.sinh_bw": [[363, "ttnn-sinh-bw"]], "ttnn.softmax": [[364, "ttnn-softmax"]], "ttnn.softplus": [[365, "ttnn-softplus"]], "ttnn.softplus_bw": [[366, "ttnn-softplus-bw"]], "ttnn.softshrink": [[367, "ttnn-softshrink"]], "ttnn.softshrink_bw": [[368, "ttnn-softshrink-bw"]], "ttnn.softsign": [[369, "ttnn-softsign"]], "ttnn.softsign_bw": [[370, "ttnn-softsign-bw"]], "ttnn.split": [[371, "ttnn-split"]], "ttnn.sqrt": [[372, "ttnn-sqrt"]], "ttnn.sqrt_bw": [[373, "ttnn-sqrt-bw"]], "ttnn.square": [[374, "ttnn-square"]], "ttnn.square_bw": [[375, "ttnn-square-bw"]], "ttnn.squared_difference": [[376, "ttnn-squared-difference"]], "ttnn.squared_difference_bw": [[377, "ttnn-squared-difference-bw"]], "ttnn.std": [[378, "ttnn-std"]], "ttnn.sub_bw": [[379, "ttnn-sub-bw"]], "ttnn.subalpha": [[380, "ttnn-subalpha"]], "ttnn.subalpha_bw": [[381, "ttnn-subalpha-bw"]], "ttnn.subtract": [[382, "ttnn-subtract"]], "ttnn.sum": [[383, "ttnn-sum"]], "ttnn.swiglu": [[384, "ttnn-swiglu"]], "ttnn.swish": [[385, "ttnn-swish"]], "ttnn.synchronize_device": [[386, "ttnn-synchronize-device"]], "ttnn.tan": [[387, "ttnn-tan"]], "ttnn.tan_bw": [[388, "ttnn-tan-bw"]], "ttnn.tanh": [[389, "ttnn-tanh"]], "ttnn.tanh_bw": [[390, "ttnn-tanh-bw"]], "ttnn.tanhshrink": [[391, "ttnn-tanhshrink"]], "ttnn.tanhshrink_bw": [[392, "ttnn-tanhshrink-bw"]], "ttnn.threshold": [[393, "ttnn-threshold"]], "ttnn.threshold_bw": [[394, "ttnn-threshold-bw"]], "ttnn.tilize": [[395, "ttnn-tilize"]], "ttnn.tilize_with_val_padding": [[396, "ttnn-tilize-with-val-padding"]], "ttnn.to_device": [[397, "ttnn-to-device"]], "ttnn.to_layout": [[398, "ttnn-to-layout"]], "ttnn.to_memory_config": [[399, "ttnn-to-memory-config"]], "ttnn.to_torch": [[400, "ttnn-to-torch"]], "ttnn.topk": [[401, "ttnn-topk"]], "ttnn.transformer.attention_softmax": [[402, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.attention_softmax_": [[403, "ttnn-transformer-attention-softmax"]], "ttnn.transformer.concatenate_heads": [[404, "ttnn-transformer-concatenate-heads"]], "ttnn.experimental.rotary_embedding": [[405, "ttnn-experimental-rotary-embedding"]], "ttnn.transformer.scaled_dot_product_attention": [[406, "ttnn-transformer-scaled-dot-product-attention"]], "ttnn.transformer.scaled_dot_product_attention_decode": [[407, "ttnn-transformer-scaled-dot-product-attention-decode"]], "ttnn.transformer.scaled_dot_product_attention_decode_gqa": [[408, "ttnn-transformer-scaled-dot-product-attention-decode-gqa"]], "ttnn.transformer.split_query_key_value_and_split_heads": [[409, "ttnn-transformer-split-query-key-value-and-split-heads"]], "ttnn.tril": [[410, "ttnn-tril"]], "ttnn.triu": [[411, "ttnn-triu"]], "ttnn.trunc": [[412, "ttnn-trunc"]], "ttnn.trunc_bw": [[413, "ttnn-trunc-bw"]], "ttnn.untilize": [[414, "ttnn-untilize"]], "ttnn.untilize_with_halo_v2": [[415, "ttnn-untilize-with-halo-v2"]], "ttnn.untilize_with_unpadding": [[416, "ttnn-untilize-with-unpadding"]], "ttnn.upsample": [[417, "ttnn-upsample"]], "ttnn.var": [[418, "ttnn-var"]], "ttnn.where": [[419, "ttnn-where"]], "ttnn.where_bw": [[420, "ttnn-where-bw"]], "ttnn.xlogy": [[421, "ttnn-xlogy"]], "ttnn.xlogy_bw": [[422, "ttnn-xlogy-bw"]], "ttnn.zeros": [[423, "ttnn-zeros"]], "ttnn.zeros_like": [[424, "ttnn-zeros-like"]], "Tutorials": [[425, "id1"]], "Graphing Torch DiT_XL_2 With TTNN": [[426, "graphing-torch-dit-xl-2-with-ttnn"]], "Matmul Operation": [[427, "matmul-operation"]], "Multi-Head Attention": [[428, "multi-head-attention"], [435, "Multi-Head-Attention"], [57, "Multi-Head-Attention"]], "ttnn Profiling": [[429, "ttnn-profiling"]], "Resnet Basic Block": [[430, "resnet-basic-block"]], "Tensor and Add Operation": [[431, "tensor-and-add-operation"], [433, "Tensor-and-Add-Operation"], [55, "Tensor-and-Add-Operation"]], "ttnn Tracer": [[432, "ttnn-tracer"]], "Creating a tensor": [[433, "Creating-a-tensor"], [55, "Creating-a-tensor"]], "Host Storage: Borrowed vs Owned": [[433, "Host-Storage:-Borrowed-vs-Owned"], [55, "Host-Storage:-Borrowed-vs-Owned"]], "Device storage": [[433, "Device-storage"], [55, "Device-storage"]], "Open the device": [[433, "Open-the-device"], [55, "Open-the-device"]], "Initialize tensors a and b with random values using torch": [[433, "Initialize-tensors-a-and-b-with-random-values-using-torch"], [434, "Initialize-tensors-a-and-b-with-random-values-using-torch"], [55, "Initialize-tensors-a-and-b-with-random-values-using-torch"], [56, "Initialize-tensors-a-and-b-with-random-values-using-torch"]], "Add tensor a and b": [[433, "Add-tensor-a-and-b"], [55, "Add-tensor-a-and-b"]], "Inspect the output tensor of the add in ttnn": [[433, "Inspect-the-output-tensor-of-the-add-in-ttnn"], [55, "Inspect-the-output-tensor-of-the-add-in-ttnn"]], "Convert to torch and inspect the attributes of the torch tensor": [[433, "Convert-to-torch-and-inspect-the-attributes-of-the-torch-tensor"], [55, "Convert-to-torch-and-inspect-the-attributes-of-the-torch-tensor"]], "Close the device": [[433, "Close-the-device"], [434, "Close-the-device"], [435, "Close-the-device"], [55, "Close-the-device"], [56, "Close-the-device"], [57, "Close-the-device"]], "Enable program cache": [[434, "Enable-program-cache"], [435, "Enable-program-cache"], [56, "Enable-program-cache"], [57, "Enable-program-cache"]], "Configuration": [[434, "Configuration"], [435, "Configuration"], [56, "Configuration"], [57, "Configuration"]], "Matrix multiply tensor a and b": [[434, "Matrix-multiply-tensor-a-and-b"], [56, "Matrix-multiply-tensor-a-and-b"]], "Inspect the layout of matrix multiplication output": [[434, "Inspect-the-layout-of-matrix-multiplication-output"], [56, "Inspect-the-layout-of-matrix-multiplication-output"]], "Inspect the result of the matrix multiplication": [[434, "Inspect-the-result-of-the-matrix-multiplication"], [56, "Inspect-the-result-of-the-matrix-multiplication"]], "Matrix multiply tensor a and b by using more performant config": [[434, "Matrix-multiply-tensor-a-and-b-by-using-more-performant-config"], [56, "Matrix-multiply-tensor-a-and-b-by-using-more-performant-config"]], "Write Multi-Head Attention using ttnn": [[435, "Write-Multi-Head-Attention-using-ttnn"], [57, "Write-Multi-Head-Attention-using-ttnn"]], "Initialize activations and weights using torch": [[435, "Initialize-activations-and-weights-using-torch"], [57, "Initialize-activations-and-weights-using-torch"]], "Convert activations and weights to ttnn": [[435, "Convert-activations-and-weights-to-ttnn"], [57, "Convert-activations-and-weights-to-ttnn"]], "Run the first iteration of Multi-Head Attention": [[435, "Run-the-first-iteration-of-Multi-Head-Attention"], [57, "Run-the-first-iteration-of-Multi-Head-Attention"]], "Run a subsequent iteration of Multi-Head Attention": [[435, "Run-a-subsequent-iteration-of-Multi-Head-Attention"], [57, "Run-a-subsequent-iteration-of-Multi-Head-Attention"]], "Write optimized version of Multi-Head Attention": [[435, "Write-optimized-version-of-Multi-Head-Attention"], [57, "Write-optimized-version-of-Multi-Head-Attention"]], "Pre-process the parameters of the optimized model": [[435, "Pre-process-the-parameters-of-the-optimized-model"], [57, "Pre-process-the-parameters-of-the-optimized-model"]], "Run the first iteration of the optimized Multi-Head Attention": [[435, "Run-the-first-iteration-of-the-optimized-Multi-Head-Attention"], [57, "Run-the-first-iteration-of-the-optimized-Multi-Head-Attention"]], "Run a subsequent iteration of the optimized Multi-Head Attention": [[435, "Run-a-subsequent-iteration-of-the-optimized-Multi-Head-Attention"], [57, "Run-a-subsequent-iteration-of-the-optimized-Multi-Head-Attention"]], "Check that the output of the optimized version matches the output of the original implementation": [[435, "Check-that-the-output-of-the-optimized-version-matches-the-output-of-the-original-implementation"], [57, "Check-that-the-output-of-the-optimized-version-matches-the-output-of-the-original-implementation"]], "Tracing ttnn operations and torch modules/functions": [[436, "Tracing-ttnn-operations-and-torch-modules/functions"], [58, "Tracing-ttnn-operations-and-torch-modules/functions"]], "Trace torch functions": [[436, "Trace-torch-functions"], [58, "Trace-torch-functions"]], "Trace torch functions and ttnn operations": [[436, "Trace-torch-functions-and-ttnn-operations"], [58, "Trace-torch-functions-and-ttnn-operations"]], "Trace torch functions, torch modules and ttnn operations": [[436, "Trace-torch-functions,-torch-modules-and-ttnn-operations"], [58, "Trace-torch-functions,-torch-modules-and-ttnn-operations"]], "Trace models written using ttnn": [[436, "Trace-models-written-using-ttnn"], [58, "Trace-models-written-using-ttnn"]], "Profiling ttnn operations": [[437, "Profiling-ttnn-operations"], [59, "Profiling-ttnn-operations"]], "Resnet Block": [[438, "Resnet-Block"], [60, "Resnet-Block"]], "Torch Module (from torchvision)": [[438, "Torch-Module-(from-torchvision)"], [60, "Torch-Module-(from-torchvision)"]], "Create torch module and preprocess it to get ttnn parameters": [[438, "Create-torch-module-and-preprocess-it-to-get-ttnn-parameters"], [60, "Create-torch-module-and-preprocess-it-to-get-ttnn-parameters"]], "Display the parameters of the module": [[438, "Display-the-parameters-of-the-module"], [60, "Display-the-parameters-of-the-module"]], "Display the traced torch graph": [[438, "Display-the-traced-torch-graph"], [60, "Display-the-traced-torch-graph"]], "Implement ttnn version of the module. Pass in the parameters into the constructor.": [[438, "Implement-ttnn-version-of-the-module.-Pass-in-the-parameters-into-the-constructor."], [60, "Implement-ttnn-version-of-the-module.-Pass-in-the-parameters-into-the-constructor."]], "Run ttnn module and display the traced graph": [[438, "Run-ttnn-module-and-display-the-traced-graph"], [60, "Run-ttnn-module-and-display-the-traced-graph"]], "Build a graph of a pytorch based model": [[439, "Build-a-graph-of-a-pytorch-based-model"], [61, "Build-a-graph-of-a-pytorch-based-model"]], "Clone the library from https://github.com/facebookresearch/DiT.git": [[439, "Clone-the-library-from-https://github.com/facebookresearch/DiT.git"], [61, "Clone-the-library-from-https://github.com/facebookresearch/DiT.git"]], "Download DiT-XL/2 Models": [[439, "Download-DiT-XL/2-Models"], [61, "Download-DiT-XL/2-Models"]], "Sample from Pre-trained DiT Models and build the graph": [[439, "Sample-from-Pre-trained-DiT-Models-and-build-the-graph"], [61, "Sample-from-Pre-trained-DiT-Models-and-build-the-graph"]], "Display the graph": [[439, "Display-the-graph"], [61, "Display-the-graph"]], "Using ttnn": [[440, "using-ttnn"]], "Basic Examples": [[440, "basic-examples"]], "1. Converting from and to torch tensor": [[440, "converting-from-and-to-torch-tensor"]], "2. Running an operation on the device": [[440, "running-an-operation-on-the-device"]], "3. Using __getitem__ to slice the tensor": [[440, "using-getitem-to-slice-the-tensor"]], "4. Enabling program cache": [[440, "enabling-program-cache"]], "5. Debugging intermediate tensors": [[440, "debugging-intermediate-tensors"]], "6. Tracing the graph of operations": [[440, "tracing-the-graph-of-operations"]], "7. Using tt_lib operation in ttnn": [[440, "using-tt-lib-operation-in-ttnn"]], "8. Enabling Logging": [[440, "enabling-logging"]], "9. Supported Python Operators": [[440, "supported-python-operators"]], "10. Changing the string representation of the tensor": [[440, "changing-the-string-representation-of-the-tensor"]], "11. Visualize using Web Browser": [[440, "visualize-using-web-browser"]], "12. Register pre- and/or post-operation hooks": [[440, "register-pre-and-or-post-operation-hooks"]], "13. Query all operations": [[440, "query-all-operations"]], "14. Falling back to torch": [[440, "falling-back-to-torch"]], "15. Capturing graph of C++ functions, buffer allocations, etc": [[440, "capturing-graph-of-c-functions-buffer-allocations-etc"]], "Placeholder title": [[441, "placeholder-title"]], "Core features": [[3, "core-features"]], "Goodies": [[3, "goodies"]], "Supported compilers": [[3, "supported-compilers"]], "About": [[3, "about"]], "Contributing": [[3, "contributing"]], "License": [[3, "license"]], "Chrono": [[4, "chrono"]], "An overview of clocks in C++11": [[4, "an-overview-of-clocks-in-c-11"]], "Provided conversions": [[4, "provided-conversions"]], "Custom type casters": [[5, "custom-type-casters"]], "Eigen": [[6, "eigen"]], "Pass-by-value": [[6, "pass-by-value"]], "Pass-by-reference": [[6, "pass-by-reference"]], "Returning values to Python": [[6, "returning-values-to-python"]], "Storage orders": [[6, "storage-orders"]], "Failing rather than copying": [[6, "failing-rather-than-copying"]], "Vectors versus column/row matrices": [[6, "vectors-versus-column-row-matrices"]], "Functional": [[7, "functional"]], "Callbacks and passing anonymous functions": [[7, "callbacks-and-passing-anonymous-functions"]], "Type conversions": [[8, "type-conversions"]], "List of all builtin conversions": [[9, "list-of-all-builtin-conversions"]], "STL containers": [[10, "stl-containers"]], "Automatic conversion": [[10, "automatic-conversion"]], "C++17 library containers": [[10, "c-17-library-containers"]], "Making opaque types": [[10, "making-opaque-types"]], "Binding STL containers": [[10, "binding-stl-containers"]], "Strings, bytes and Unicode conversions": [[11, "strings-bytes-and-unicode-conversions"]], "Passing Python strings to C++": [[11, "passing-python-strings-to-c"]], "Passing bytes to C++": [[11, "passing-bytes-to-c"]], "Returning C++ strings to Python": [[11, "returning-c-strings-to-python"]], "Explicit conversions": [[11, "explicit-conversions"]], "Return C++ strings without conversion": [[11, "return-c-strings-without-conversion"]], "Wide character strings": [[11, "wide-character-strings"]], "Character literals": [[11, "character-literals"]], "Grapheme clusters": [[11, "grapheme-clusters"]], "C++17 string views": [[11, "c-17-string-views"]], "References": [[11, "references"], [29, "references"]], "Classes": [[12, "classes"]], "Overriding virtual functions in Python": [[12, "overriding-virtual-functions-in-python"]], "Combining virtual functions and inheritance": [[12, "combining-virtual-functions-and-inheritance"]], "Extended trampoline class functionality": [[12, "extended-trampoline-class-functionality"]], "Forced trampoline class initialisation": [[12, "forced-trampoline-class-initialisation"]], "Different method signatures": [[12, "different-method-signatures"]], "Custom constructors": [[12, "custom-constructors"]], "Brace initialization": [[12, "brace-initialization"]], "Non-public destructors": [[12, "non-public-destructors"]], "Destructors that call Python": [[12, "destructors-that-call-python"]], "Implicit conversions": [[12, "implicit-conversions"]], "Static properties": [[12, "static-properties"]], "Operator overloading": [[12, "operator-overloading"]], "Pickling support": [[12, "pickling-support"]], "Deepcopy support": [[12, "deepcopy-support"]], "Multiple Inheritance": [[12, "multiple-inheritance"]], "Module-local class bindings": [[12, "module-local-class-bindings"]], "Binding protected member functions": [[12, "binding-protected-member-functions"]], "Binding final classes": [[12, "binding-final-classes"]], "Binding classes with template parameters": [[12, "binding-classes-with-template-parameters"]], "Custom automatic downcasters": [[12, "custom-automatic-downcasters"]], "Accessing the type object": [[12, "accessing-the-type-object"]], "Custom type setup": [[12, "custom-type-setup"]], "Embedding the interpreter": [[13, "embedding-the-interpreter"]], "Getting started": [[13, "getting-started"]], "Executing Python code": [[13, "executing-python-code"]], "Importing modules": [[13, "importing-modules"]], "Adding embedded modules": [[13, "adding-embedded-modules"]], "Interpreter lifetime": [[13, "interpreter-lifetime"]], "Sub-interpreter support": [[13, "sub-interpreter-support"]], "Exceptions": [[14, "exceptions"]], "Built-in C++ to Python exception translation": [[14, "built-in-c-to-python-exception-translation"]], "Registering custom translators": [[14, "registering-custom-translators"]], "Local vs Global Exception Translators": [[14, "local-vs-global-exception-translators"]], "Handling exceptions from Python in C++": [[14, "handling-exceptions-from-python-in-c"]], "Handling errors from the Python C API": [[14, "handling-errors-from-the-python-c-api"]], "Chaining exceptions (\u2018raise from\u2019)": [[14, "chaining-exceptions-raise-from"]], "Handling unraisable exceptions": [[14, "handling-unraisable-exceptions"]], "Functions": [[15, "functions"]], "Return value policies": [[15, "return-value-policies"]], "Additional call policies": [[15, "additional-call-policies"]], "Keep alive": [[15, "keep-alive"]], "Call guard": [[15, "call-guard"]], "Python objects as arguments": [[15, "python-objects-as-arguments"]], "Accepting *args and **kwargs": [[15, "accepting-args-and-kwargs"]], "Default arguments revisited": [[15, "default-arguments-revisited"]], "Keyword-only arguments": [[15, "keyword-only-arguments"]], "Positional-only arguments": [[15, "positional-only-arguments"]], "Non-converting arguments": [[15, "non-converting-arguments"]], "Allow/Prohibiting None arguments": [[15, "allow-prohibiting-none-arguments"]], "Overload resolution order": [[15, "overload-resolution-order"]], "Binding functions with template parameters": [[15, "binding-functions-with-template-parameters"]], "Miscellaneous": [[16, "miscellaneous"]], "General notes regarding convenience macros": [[16, "general-notes-regarding-convenience-macros"]], "Global Interpreter Lock (GIL)": [[16, "global-interpreter-lock-gil"]], "Common Sources Of Global Interpreter Lock Errors": [[16, "common-sources-of-global-interpreter-lock-errors"]], "Binding sequence data types, iterators, the slicing protocol, etc.": [[16, "binding-sequence-data-types-iterators-the-slicing-protocol-etc"]], "Partitioning code over multiple extension modules": [[16, "partitioning-code-over-multiple-extension-modules"]], "Module Destructors": [[16, "module-destructors"]], "Generating documentation using Sphinx": [[16, "generating-documentation-using-sphinx"]], "Avoiding C++ types in docstrings": [[16, "avoiding-c-types-in-docstrings"]], "Python C++ interface": [[17, "python-c-interface"]], "NumPy": [[18, "numpy"]], "Buffer protocol": [[18, "buffer-protocol"]], "Arrays": [[18, "arrays"]], "Structured types": [[18, "structured-types"]], "Vectorizing functions": [[18, "vectorizing-functions"]], "Direct access": [[18, "direct-access"]], "Ellipsis": [[18, "ellipsis"]], "Memory view": [[18, "memory-view"]], "Python types": [[19, "python-types"]], "Available wrappers": [[19, "available-wrappers"]], "Instantiating compound Python types from C++": [[19, "instantiating-compound-python-types-from-c"]], "Casting back and forth": [[19, "casting-back-and-forth"]], "Accessing Python libraries from C++": [[19, "accessing-python-libraries-from-c"]], "Calling Python functions": [[19, "calling-python-functions"]], "Calling Python methods": [[19, "calling-python-methods"]], "Keyword arguments": [[19, "keyword-arguments"]], "Unpacking arguments": [[19, "unpacking-arguments"]], "Implicit casting": [[19, "implicit-casting"]], "Handling exceptions": [[19, "handling-exceptions"]], "Gotchas": [[19, "gotchas"]], "Default-Constructed Wrappers": [[19, "default-constructed-wrappers"]], "Assigning py::none() to wrappers": [[19, "assigning-py-none-to-wrappers"]], "Utilities": [[20, "utilities"]], "Using Python\u2019s print function in C++": [[20, "using-python-s-print-function-in-c"]], "Capturing standard output from ostream": [[20, "capturing-standard-output-from-ostream"]], "Evaluating Python expressions from strings and files": [[20, "evaluating-python-expressions-from-strings-and-files"]], "Smart pointers": [[21, "smart-pointers"]], "std::unique_ptr": [[21, "std-unique-ptr"]], "std::shared_ptr": [[21, "std-shared-ptr"]], "Custom smart pointers": [[21, "custom-smart-pointers"]], "CMake helpers": [[22, "cmake-helpers"]], "Contents": [[29, "contents"]], "Introduction": [[29, "introduction"]], "About TBB": [[29, "about-tbb"]], "Engineering team contacts": [[29, "engineering-team-contacts"]], "Release Notes": [[29, "release-notes"]], "Use cases of TBB integration into CMake-aware projects": [[29, "use-cases-of-tbb-integration-into-cmake-aware-projects"]], "Binary package integration": [[29, "binary-package-integration"]], "Source package integration": [[29, "source-package-integration"]], "Tutorials: TBB integration using CMake": [[29, "tutorials-tbb-integration-using-cmake"]], "Binary TBB integration to the sub_string_finder sample (Windows* OS)": [[29, "binary-tbb-integration-to-the-sub-string-finder-sample-windows-os"]], "Source code integration of TBB to the sub_string_finder sample (Linux* OS)": [[29, "source-code-integration-of-tbb-to-the-sub-string-finder-sample-linux-os"]], "Technical documentation for CMake modules": [[29, "technical-documentation-for-cmake-modules"]], "TBBConfig": [[29, "tbbconfig"]], "TBBInstallConfig": [[29, "tbbinstallconfig"]], "Use cases": [[29, "use-cases"]], "TBBGet": [[29, "tbbget"]], "TBBMakeConfig": [[29, "tbbmakeconfig"]], "TBBBuild": [[29, "tbbbuild"]], "}": [[30, "id5"], [42, "id3"], [42, "id6"], [42, "id9"], [42, "id12"], [42, "id15"], [44, "id10"], [44, "id20"]], ");": [[30, "id58"]], "fi": [[39, "fi"]], "Contributing to {fmt}": [[40, "contributing-to-fmt"]], "};": [[44, "id5"], [44, "id15"]], ")": [[48, "id3"]], "ttnn.MaxPool2d": [[82, "ttnn-maxpool2d"]]}, "indexentries": {"memoryconfig (class in ttnn)": [[74, "ttnn.MemoryConfig"]], "tensor (class in ttnn)": [[74, "ttnn.Tensor"]], "__init__() (ttnn.memoryconfig method)": [[74, "ttnn.MemoryConfig.__init__"]], "__init__() (ttnn.tensor method)": [[74, "ttnn.Tensor.__init__"]], "buffer() (ttnn.tensor method)": [[74, "ttnn.Tensor.buffer"]], "device() (ttnn.tensor method)": [[74, "ttnn.Tensor.device"]], "get_dtype() (ttnn.tensor method)": [[74, "ttnn.Tensor.get_dtype"]], "get_layout() (ttnn.tensor method)": [[74, "ttnn.Tensor.get_layout"]], "get_legacy_shape() (ttnn.tensor method)": [[74, "ttnn.Tensor.get_legacy_shape"]], "pad() (ttnn.tensor method)": [[74, "ttnn.Tensor.pad"]], "pad_to_tile() (ttnn.tensor method)": [[74, "ttnn.Tensor.pad_to_tile"]], "storage_type() (ttnn.tensor method)": [[74, "ttnn.Tensor.storage_type"]], "to() (ttnn.tensor method)": [[74, "ttnn.Tensor.to"]], "unpad() (ttnn.tensor method)": [[74, "ttnn.Tensor.unpad"]], "unpad_from_tile() (ttnn.tensor method)": [[74, "ttnn.Tensor.unpad_from_tile"]], "adaptiveavgpool2d (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.AdaptiveAvgPool2d"]], "addandnorm() (in module tt_lib.fused_ops.add_and_norm)": [[75, "tt_lib.fused_ops.add_and_norm.AddAndNorm"]], "batchnorm2d (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.BatchNorm2d"]], "bcastopdim (class in ttnn)": [[75, "ttnn.BcastOpDim"]], "bcastopmath (class in ttnn)": [[75, "ttnn.BcastOpMath"]], "conv2d (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.Conv2d"]], "groupnorm (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.GroupNorm"]], "layernorm (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.LayerNorm"]], "layernorm() (in module tt_lib.fused_ops.layernorm)": [[75, "tt_lib.fused_ops.layernorm.Layernorm"]], "linear() (in module tt_lib.fused_ops.linear)": [[75, "tt_lib.fused_ops.linear.Linear"]], "maxpool2d (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.MaxPool2d"]], "binary_bitwise_and (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.binary_bitwise_and"]], "binary_bitwise_left_shift (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.binary_bitwise_left_shift"]], "binary_bitwise_or (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.binary_bitwise_or"]], "binary_bitwise_right_shift (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.binary_bitwise_right_shift"]], "binary_bitwise_xor (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.binary_bitwise_xor"]], "binary_fmod (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.binary_fmod"]], "bitwise_not (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.bitwise_not"]], "ceil (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.ceil"]], "chunk() (in module tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.chunk"]], "concat() (in module tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.concat"]], "conv2d() (in module tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.conv2d"]], "cpu() (in module ttnn.tensor)": [[75, "ttnn.Tensor.cpu"]], "floor (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.floor"]], "full() (in module tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.full"]], "group_norm() (in module tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.group_norm"]], "interpolate() (in module tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.interpolate"]], "layer_norm() (in module tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.layer_norm"]], "moreh_groupnorm() (in module tt_lib.operations.primary)": [[75, "tt_lib.operations.primary.moreh_groupnorm"]], "moreh_groupnorm_backward() (in module tt_lib.operations.primary)": [[75, "tt_lib.operations.primary.moreh_groupnorm_backward"]], "moreh_logsoftmax() (in module tt_lib.operations.primary)": [[75, "tt_lib.operations.primary.moreh_logsoftmax"]], "moreh_logsoftmax_backward() (in module tt_lib.operations.primary)": [[75, "tt_lib.operations.primary.moreh_logsoftmax_backward"]], "moreh_norm() (in module tt_lib.operations.primary)": [[75, "tt_lib.operations.primary.moreh_norm"]], "moreh_norm_backward() (in module tt_lib.operations.primary)": [[75, "tt_lib.operations.primary.moreh_norm_backward"]], "moreh_softmax() (in module tt_lib.operations.primary)": [[75, "tt_lib.operations.primary.moreh_softmax"]], "moreh_softmax_backward() (in module tt_lib.operations.primary)": [[75, "tt_lib.operations.primary.moreh_softmax_backward"]], "moreh_softmin() (in module tt_lib.operations.primary)": [[75, "tt_lib.operations.primary.moreh_softmin"]], "moreh_softmin_backward() (in module tt_lib.operations.primary)": [[75, "tt_lib.operations.primary.moreh_softmin_backward"]], "pad() (in module tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.pad"]], "repeat() (in module tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.repeat"]], "repeat_interleave() (in module tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.repeat_interleave"]], "reshape() (in module tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.reshape"]], "silu() (in module tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.silu"]], "softmax() (in module tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.softmax"]], "tensor_slice() (in module tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.tensor_slice"]], "torch_argmax (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.torch_argmax"]], "torch_argmin (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.torch_argmin"]], "trunc (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.trunc"]], "unary_bitwise_and (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.unary_bitwise_and"]], "unary_bitwise_left_shift (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.unary_bitwise_left_shift"]], "unary_bitwise_or (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.unary_bitwise_or"]], "unary_bitwise_right_shift (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.unary_bitwise_right_shift"]], "unary_bitwise_xor (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.unary_bitwise_xor"]], "unary_fmod (class in tt_lib.fallback_ops)": [[75, "tt_lib.fallback_ops.unary_fmod"]], "shape (class in ttnn)": [[80, "ttnn.Shape"]], "rank (ttnn.shape property)": [[80, "ttnn.Shape.rank"]], "with_tile_padding() (ttnn.shape method)": [[80, "ttnn.Shape.with_tile_padding"]], "getdefaultdevice() (in module ttnn)": [[81, "ttnn.GetDefaultDevice"]], "setdefaultdevice() (in module ttnn)": [[83, "ttnn.SetDefaultDevice"]], "abs() (in module ttnn)": [[84, "ttnn.abs"]], "abs_bw() (in module ttnn)": [[85, "ttnn.abs_bw"]], "acos() (in module ttnn)": [[86, "ttnn.acos"]], "acos_bw() (in module ttnn)": [[87, "ttnn.acos_bw"]], "acosh() (in module ttnn)": [[88, "ttnn.acosh"]], "acosh_bw() (in module ttnn)": [[89, "ttnn.acosh_bw"]], "add() (in module ttnn)": [[90, "ttnn.add"]], "add_bw() (in module ttnn)": [[91, "ttnn.add_bw"]], "addalpha() (in module ttnn)": [[92, "ttnn.addalpha"]], "addalpha_bw() (in module ttnn)": [[93, "ttnn.addalpha_bw"]], "addcdiv() (in module ttnn)": [[94, "ttnn.addcdiv"]], "addcdiv_bw() (in module ttnn)": [[95, "ttnn.addcdiv_bw"]], "addcmul() (in module ttnn)": [[96, "ttnn.addcmul"]], "addcmul_bw() (in module ttnn)": [[97, "ttnn.addcmul_bw"]], "angle() (in module ttnn)": [[98, "ttnn.angle"]], "angle_bw() (in module ttnn)": [[99, "ttnn.angle_bw"]], "arange() (in module ttnn)": [[100, "ttnn.arange"]], "argmax() (in module ttnn)": [[101, "ttnn.argmax"]], "as_tensor() (in module ttnn)": [[102, "ttnn.as_tensor"]], "asin() (in module ttnn)": [[103, "ttnn.asin"]], "asin_bw() (in module ttnn)": [[104, "ttnn.asin_bw"]], "asinh() (in module ttnn)": [[105, "ttnn.asinh"]], "asinh_bw() (in module ttnn)": [[106, "ttnn.asinh_bw"]], "assign_bw() (in module ttnn)": [[107, "ttnn.assign_bw"]], "atan() (in module ttnn)": [[108, "ttnn.atan"]], "atan2() (in module ttnn)": [[109, "ttnn.atan2"]], "atan2_bw() (in module ttnn)": [[110, "ttnn.atan2_bw"]], "atan_bw() (in module ttnn)": [[111, "ttnn.atan_bw"]], "atanh() (in module ttnn)": [[112, "ttnn.atanh"]], "atanh_bw() (in module ttnn)": [[113, "ttnn.atanh_bw"]], "bias_gelu_bw() (in module ttnn)": [[114, "ttnn.bias_gelu_bw"]], "bitwise_and() (in module ttnn)": [[115, "ttnn.bitwise_and"]], "bitwise_left_shift() (in module ttnn)": [[116, "ttnn.bitwise_left_shift"]], "bitwise_not() (in module ttnn)": [[117, "ttnn.bitwise_not"]], "bitwise_or() (in module ttnn)": [[118, "ttnn.bitwise_or"]], "bitwise_right_shift() (in module ttnn)": [[119, "ttnn.bitwise_right_shift"]], "bitwise_xor() (in module ttnn)": [[120, "ttnn.bitwise_xor"]], "cbrt() (in module ttnn)": [[121, "ttnn.cbrt"]], "ceil() (in module ttnn)": [[122, "ttnn.ceil"]], "ceil_bw() (in module ttnn)": [[123, "ttnn.ceil_bw"]], "celu() (in module ttnn)": [[124, "ttnn.celu"]], "celu_bw() (in module ttnn)": [[125, "ttnn.celu_bw"]], "clamp() (in module ttnn)": [[126, "ttnn.clamp"]], "clamp_bw() (in module ttnn)": [[127, "ttnn.clamp_bw"]], "clip() (in module ttnn)": [[128, "ttnn.clip"]], "clone() (in module ttnn)": [[129, "ttnn.clone"]], "close_device() (in module ttnn)": [[130, "ttnn.close_device"]], "concat() (in module ttnn)": [[131, "ttnn.concat"]], "concat_bw() (in module ttnn)": [[132, "ttnn.concat_bw"]], "conj() (in module ttnn)": [[133, "ttnn.conj"]], "conj_bw() (in module ttnn)": [[134, "ttnn.conj_bw"]], "cos() (in module ttnn)": [[135, "ttnn.cos"]], "cos_bw() (in module ttnn)": [[136, "ttnn.cos_bw"]], "cosh() (in module ttnn)": [[137, "ttnn.cosh"]], "cosh_bw() (in module ttnn)": [[138, "ttnn.cosh_bw"]], "create_sharded_memory_config() (in module ttnn)": [[139, "ttnn.create_sharded_memory_config"]], "deallocate() (in module ttnn)": [[140, "ttnn.deallocate"]], "deg2rad() (in module ttnn)": [[141, "ttnn.deg2rad"]], "deg2rad_bw() (in module ttnn)": [[142, "ttnn.deg2rad_bw"]], "digamma() (in module ttnn)": [[143, "ttnn.digamma"]], "digamma_bw() (in module ttnn)": [[144, "ttnn.digamma_bw"]], "div() (in module ttnn)": [[145, "ttnn.div"]], "div_bw() (in module ttnn)": [[146, "ttnn.div_bw"]], "div_no_nan() (in module ttnn)": [[147, "ttnn.div_no_nan"]], "div_no_nan_bw() (in module ttnn)": [[148, "ttnn.div_no_nan_bw"]], "downsample() (in module ttnn)": [[149, "ttnn.downsample"]], "dump_tensor() (in module ttnn)": [[150, "ttnn.dump_tensor"]], "elu() (in module ttnn)": [[151, "ttnn.elu"]], "elu_bw() (in module ttnn)": [[152, "ttnn.elu_bw"]], "embedding() (in module ttnn)": [[153, "ttnn.embedding"]], "embedding_bw() (in module ttnn)": [[154, "ttnn.embedding_bw"]], "empty() (in module ttnn)": [[155, "ttnn.empty"]], "eq() (in module ttnn)": [[156, "ttnn.eq"]], "eq_() (in module ttnn)": [[157, "ttnn.eq_"]], "eqz() (in module ttnn)": [[158, "ttnn.eqz"]], "erf() (in module ttnn)": [[159, "ttnn.erf"]], "erf_bw() (in module ttnn)": [[160, "ttnn.erf_bw"]], "erfc() (in module ttnn)": [[161, "ttnn.erfc"]], "erfc_bw() (in module ttnn)": [[162, "ttnn.erfc_bw"]], "erfinv() (in module ttnn)": [[163, "ttnn.erfinv"]], "erfinv_bw() (in module ttnn)": [[164, "ttnn.erfinv_bw"]], "exp() (in module ttnn)": [[165, "ttnn.exp"]], "exp2() (in module ttnn)": [[166, "ttnn.exp2"]], "exp2_bw() (in module ttnn)": [[167, "ttnn.exp2_bw"]], "exp_bw() (in module ttnn)": [[168, "ttnn.exp_bw"]], "expm1() (in module ttnn)": [[169, "ttnn.expm1"]], "expm1_bw() (in module ttnn)": [[170, "ttnn.expm1_bw"]], "fill_bw() (in module ttnn)": [[171, "ttnn.fill_bw"]], "fill_ones_rm() (in module ttnn)": [[172, "ttnn.fill_ones_rm"]], "fill_rm() (in module ttnn)": [[173, "ttnn.fill_rm"]], "fill_zero_bw() (in module ttnn)": [[174, "ttnn.fill_zero_bw"]], "floor() (in module ttnn)": [[175, "ttnn.floor"]], "floor_bw() (in module ttnn)": [[176, "ttnn.floor_bw"]], "floor_div() (in module ttnn)": [[177, "ttnn.floor_div"]], "fmod() (in module ttnn)": [[178, "ttnn.fmod"]], "fmod_bw() (in module ttnn)": [[179, "ttnn.fmod_bw"]], "format_input_tensor() (in module ttnn)": [[180, "ttnn.format_input_tensor"]], "format_output_tensor() (in module ttnn)": [[181, "ttnn.format_output_tensor"]], "frac() (in module ttnn)": [[182, "ttnn.frac"]], "frac_bw() (in module ttnn)": [[183, "ttnn.frac_bw"]], "from_device() (in module ttnn)": [[184, "ttnn.from_device"]], "from_torch() (in module ttnn)": [[185, "ttnn.from_torch"]], "full() (in module ttnn)": [[186, "ttnn.full"]], "full_like() (in module ttnn)": [[187, "ttnn.full_like"]], "ge() (in module ttnn)": [[188, "ttnn.ge"]], "ge_() (in module ttnn)": [[189, "ttnn.ge_"]], "geglu() (in module ttnn)": [[190, "ttnn.geglu"]], "gelu() (in module ttnn)": [[191, "ttnn.gelu"]], "gelu_bw() (in module ttnn)": [[192, "ttnn.gelu_bw"]], "gez() (in module ttnn)": [[193, "ttnn.gez"]], "global_avg_pool2d() (in module ttnn)": [[194, "ttnn.global_avg_pool2d"]], "glu() (in module ttnn)": [[195, "ttnn.glu"]], "group_norm() (in module ttnn)": [[196, "ttnn.group_norm"]], "gt() (in module ttnn)": [[197, "ttnn.gt"]], "gt_() (in module ttnn)": [[198, "ttnn.gt_"]], "gtz() (in module ttnn)": [[199, "ttnn.gtz"]], "hardshrink() (in module ttnn)": [[200, "ttnn.hardshrink"]], "hardshrink_bw() (in module ttnn)": [[201, "ttnn.hardshrink_bw"]], "hardsigmoid() (in module ttnn)": [[202, "ttnn.hardsigmoid"]], "hardsigmoid_bw() (in module ttnn)": [[203, "ttnn.hardsigmoid_bw"]], "hardswish() (in module ttnn)": [[204, "ttnn.hardswish"]], "hardswish_bw() (in module ttnn)": [[205, "ttnn.hardswish_bw"]], "hardtanh() (in module ttnn)": [[206, "ttnn.hardtanh"]], "hardtanh_bw() (in module ttnn)": [[207, "ttnn.hardtanh_bw"]], "heaviside() (in module ttnn)": [[208, "ttnn.heaviside"]], "hypot() (in module ttnn)": [[209, "ttnn.hypot"]], "hypot_bw() (in module ttnn)": [[210, "ttnn.hypot_bw"]], "i0() (in module ttnn)": [[211, "ttnn.i0"]], "i0_bw() (in module ttnn)": [[212, "ttnn.i0_bw"]], "identity() (in module ttnn)": [[213, "ttnn.identity"]], "imag() (in module ttnn)": [[214, "ttnn.imag"]], "imag_bw() (in module ttnn)": [[215, "ttnn.imag_bw"]], "indexed_fill() (in module ttnn)": [[216, "ttnn.indexed_fill"]], "is_imag() (in module ttnn)": [[217, "ttnn.is_imag"]], "is_real() (in module ttnn)": [[218, "ttnn.is_real"]], "isclose() (in module ttnn)": [[219, "ttnn.isclose"]], "isfinite() (in module ttnn)": [[220, "ttnn.isfinite"]], "isinf() (in module ttnn)": [[221, "ttnn.isinf"]], "isnan() (in module ttnn)": [[222, "ttnn.isnan"]], "isneginf() (in module ttnn)": [[223, "ttnn.isneginf"]], "isposinf() (in module ttnn)": [[224, "ttnn.isposinf"]], "fill_cache_for_user_() (in module ttnn.kv_cache)": [[225, "ttnn.kv_cache.fill_cache_for_user_"]], "update_cache_for_token_() (in module ttnn.kv_cache)": [[226, "ttnn.kv_cache.update_cache_for_token_"]], "l1_loss() (in module ttnn)": [[227, "ttnn.l1_loss"]], "layer_norm() (in module ttnn)": [[228, "ttnn.layer_norm"]], "ldexp() (in module ttnn)": [[229, "ttnn.ldexp"]], "ldexp_bw() (in module ttnn)": [[230, "ttnn.ldexp_bw"]], "le() (in module ttnn)": [[231, "ttnn.le"]], "le_() (in module ttnn)": [[232, "ttnn.le_"]], "leaky_relu() (in module ttnn)": [[233, "ttnn.leaky_relu"]], "leaky_relu_bw() (in module ttnn)": [[234, "ttnn.leaky_relu_bw"]], "lerp() (in module ttnn)": [[235, "ttnn.lerp"]], "lerp_bw() (in module ttnn)": [[236, "ttnn.lerp_bw"]], "lez() (in module ttnn)": [[237, "ttnn.lez"]], "lgamma() (in module ttnn)": [[238, "ttnn.lgamma"]], "lgamma_bw() (in module ttnn)": [[239, "ttnn.lgamma_bw"]], "linear() (in module ttnn)": [[240, "ttnn.linear"]], "load_tensor() (in module ttnn)": [[241, "ttnn.load_tensor"]], "log() (in module ttnn)": [[242, "ttnn.log"]], "log10() (in module ttnn)": [[243, "ttnn.log10"]], "log10_bw() (in module ttnn)": [[244, "ttnn.log10_bw"]], "log1p() (in module ttnn)": [[245, "ttnn.log1p"]], "log1p_bw() (in module ttnn)": [[246, "ttnn.log1p_bw"]], "log2() (in module ttnn)": [[247, "ttnn.log2"]], "log2_bw() (in module ttnn)": [[248, "ttnn.log2_bw"]], "log_bw() (in module ttnn)": [[249, "ttnn.log_bw"]], "log_sigmoid() (in module ttnn)": [[250, "ttnn.log_sigmoid"]], "log_sigmoid_bw() (in module ttnn)": [[251, "ttnn.log_sigmoid_bw"]], "logaddexp() (in module ttnn)": [[252, "ttnn.logaddexp"]], "logaddexp2() (in module ttnn)": [[253, "ttnn.logaddexp2"]], "logaddexp2_bw() (in module ttnn)": [[254, "ttnn.logaddexp2_bw"]], "logaddexp_bw() (in module ttnn)": [[255, "ttnn.logaddexp_bw"]], "logical_and() (in module ttnn)": [[256, "ttnn.logical_and"]], "logical_and_() (in module ttnn)": [[257, "ttnn.logical_and_"]], "logical_not() (in module ttnn)": [[258, "ttnn.logical_not"]], "logical_not_() (in module ttnn)": [[259, "ttnn.logical_not_"]], "logical_or() (in module ttnn)": [[260, "ttnn.logical_or"]], "logical_or_() (in module ttnn)": [[261, "ttnn.logical_or_"]], "logical_xor() (in module ttnn)": [[262, "ttnn.logical_xor"]], "logical_xor_() (in module ttnn)": [[263, "ttnn.logical_xor_"]], "logit() (in module ttnn)": [[264, "ttnn.logit"]], "logit_bw() (in module ttnn)": [[265, "ttnn.logit_bw"]], "logiteps_bw() (in module ttnn)": [[266, "ttnn.logiteps_bw"]], "lt() (in module ttnn)": [[267, "ttnn.lt"]], "lt_() (in module ttnn)": [[268, "ttnn.lt_"]], "ltz() (in module ttnn)": [[269, "ttnn.ltz"]], "mac() (in module ttnn)": [[270, "ttnn.mac"]], "manage_device() (in module ttnn)": [[271, "ttnn.manage_device"]], "matmul() (in module ttnn)": [[272, "ttnn.matmul"]], "max() (in module ttnn)": [[273, "ttnn.max"]], "max_bw() (in module ttnn)": [[274, "ttnn.max_bw"]], "max_pool2d() (in module ttnn)": [[275, "ttnn.max_pool2d"]], "maximum() (in module ttnn)": [[276, "ttnn.maximum"]], "mean() (in module ttnn)": [[277, "ttnn.mean"]], "min() (in module ttnn)": [[278, "ttnn.min"]], "min_bw() (in module ttnn)": [[279, "ttnn.min_bw"]], "minimum() (in module ttnn)": [[280, "ttnn.minimum"]], "mish() (in module ttnn)": [[281, "ttnn.mish"]], "preprocess_model() (in module ttnn.model_preprocessing)": [[282, "ttnn.model_preprocessing.preprocess_model"]], "preprocess_model_parameters() (in module ttnn.model_preprocessing)": [[283, "ttnn.model_preprocessing.preprocess_model_parameters"]], "mse_loss() (in module ttnn)": [[284, "ttnn.mse_loss"]], "mul_bw() (in module ttnn)": [[285, "ttnn.mul_bw"]], "multigammaln() (in module ttnn)": [[286, "ttnn.multigammaln"]], "multigammaln_bw() (in module ttnn)": [[287, "ttnn.multigammaln_bw"]], "multiply() (in module ttnn)": [[288, "ttnn.multiply"]], "ne() (in module ttnn)": [[289, "ttnn.ne"]], "ne_() (in module ttnn)": [[290, "ttnn.ne_"]], "neg() (in module ttnn)": [[291, "ttnn.neg"]], "neg_bw() (in module ttnn)": [[292, "ttnn.neg_bw"]], "nextafter() (in module ttnn)": [[293, "ttnn.nextafter"]], "nez() (in module ttnn)": [[294, "ttnn.nez"]], "nonzero() (in module ttnn)": [[295, "ttnn.nonzero"]], "normalize_global() (in module ttnn)": [[296, "ttnn.normalize_global"]], "normalize_hw() (in module ttnn)": [[297, "ttnn.normalize_hw"]], "ones() (in module ttnn)": [[298, "ttnn.ones"]], "ones_like() (in module ttnn)": [[299, "ttnn.ones_like"]], "open_device() (in module ttnn)": [[300, "ttnn.open_device"]], "outer() (in module ttnn)": [[301, "ttnn.outer"]], "pad() (in module ttnn)": [[302, "ttnn.pad"]], "pad_to_tile_shape() (in module ttnn)": [[303, "ttnn.pad_to_tile_shape"]], "permute() (in module ttnn)": [[304, "ttnn.permute"]], "polar() (in module ttnn)": [[305, "ttnn.polar"]], "polar_bw() (in module ttnn)": [[306, "ttnn.polar_bw"]], "polygamma() (in module ttnn)": [[307, "ttnn.polygamma"]], "polygamma_bw() (in module ttnn)": [[308, "ttnn.polygamma_bw"]], "polyval() (in module ttnn)": [[309, "ttnn.polyval"]], "pow() (in module ttnn)": [[310, "ttnn.pow"]], "pow_bw() (in module ttnn)": [[311, "ttnn.pow_bw"]], "prelu() (in module ttnn)": [[312, "ttnn.prelu"]], "prod() (in module ttnn)": [[313, "ttnn.prod"]], "prod_bw() (in module ttnn)": [[314, "ttnn.prod_bw"]], "rad2deg() (in module ttnn)": [[315, "ttnn.rad2deg"]], "rad2deg_bw() (in module ttnn)": [[316, "ttnn.rad2deg_bw"]], "rdiv() (in module ttnn)": [[317, "ttnn.rdiv"]], "rdiv_bw() (in module ttnn)": [[318, "ttnn.rdiv_bw"]], "real() (in module ttnn)": [[319, "ttnn.real"]], "real_bw() (in module ttnn)": [[320, "ttnn.real_bw"]], "reallocate() (in module ttnn)": [[321, "ttnn.reallocate"]], "reciprocal() (in module ttnn)": [[322, "ttnn.reciprocal"]], "reciprocal_bw() (in module ttnn)": [[323, "ttnn.reciprocal_bw"]], "register_post_operation_hook() (in module ttnn)": [[324, "ttnn.register_post_operation_hook"]], "register_pre_operation_hook() (in module ttnn)": [[325, "ttnn.register_pre_operation_hook"]], "reglu() (in module ttnn)": [[326, "ttnn.reglu"]], "relu() (in module ttnn)": [[327, "ttnn.relu"]], "relu6() (in module ttnn)": [[328, "ttnn.relu6"]], "relu6_bw() (in module ttnn)": [[329, "ttnn.relu6_bw"]], "relu_bw() (in module ttnn)": [[330, "ttnn.relu_bw"]], "relu_max() (in module ttnn)": [[331, "ttnn.relu_max"]], "relu_min() (in module ttnn)": [[332, "ttnn.relu_min"]], "remainder() (in module ttnn)": [[333, "ttnn.remainder"]], "remainder_bw() (in module ttnn)": [[334, "ttnn.remainder_bw"]], "repeat() (in module ttnn)": [[335, "ttnn.repeat"]], "repeat_bw() (in module ttnn)": [[336, "ttnn.repeat_bw"]], "repeat_interleave() (in module ttnn)": [[337, "ttnn.repeat_interleave"]], "reshape() (in module ttnn)": [[338, "ttnn.reshape"]], "rms_norm() (in module ttnn)": [[339, "ttnn.rms_norm"]], "round() (in module ttnn)": [[340, "ttnn.round"]], "round_bw() (in module ttnn)": [[341, "ttnn.round_bw"]], "rpow() (in module ttnn)": [[342, "ttnn.rpow"]], "rpow_bw() (in module ttnn)": [[343, "ttnn.rpow_bw"]], "rsqrt() (in module ttnn)": [[344, "ttnn.rsqrt"]], "rsqrt_bw() (in module ttnn)": [[345, "ttnn.rsqrt_bw"]], "rsub() (in module ttnn)": [[346, "ttnn.rsub"]], "rsub_bw() (in module ttnn)": [[347, "ttnn.rsub_bw"]], "scatter() (in module ttnn)": [[348, "ttnn.scatter"]], "selu() (in module ttnn)": [[349, "ttnn.selu"]], "selu_bw() (in module ttnn)": [[350, "ttnn.selu_bw"]], "set_printoptions() (in module ttnn)": [[351, "ttnn.set_printoptions"]], "sigmoid() (in module ttnn)": [[352, "ttnn.sigmoid"]], "sigmoid_accurate() (in module ttnn)": [[353, "ttnn.sigmoid_accurate"]], "sigmoid_bw() (in module ttnn)": [[354, "ttnn.sigmoid_bw"]], "sign() (in module ttnn)": [[355, "ttnn.sign"]], "sign_bw() (in module ttnn)": [[356, "ttnn.sign_bw"]], "signbit() (in module ttnn)": [[357, "ttnn.signbit"]], "silu() (in module ttnn)": [[358, "ttnn.silu"]], "silu_bw() (in module ttnn)": [[359, "ttnn.silu_bw"]], "sin() (in module ttnn)": [[360, "ttnn.sin"]], "sin_bw() (in module ttnn)": [[361, "ttnn.sin_bw"]], "sinh() (in module ttnn)": [[362, "ttnn.sinh"]], "sinh_bw() (in module ttnn)": [[363, "ttnn.sinh_bw"]], "softmax() (in module ttnn)": [[364, "ttnn.softmax"]], "softplus() (in module ttnn)": [[365, "ttnn.softplus"]], "softplus_bw() (in module ttnn)": [[366, "ttnn.softplus_bw"]], "softshrink() (in module ttnn)": [[367, "ttnn.softshrink"]], "softshrink_bw() (in module ttnn)": [[368, "ttnn.softshrink_bw"]], "softsign() (in module ttnn)": [[369, "ttnn.softsign"]], "softsign_bw() (in module ttnn)": [[370, "ttnn.softsign_bw"]], "split() (in module ttnn)": [[371, "ttnn.split"]], "sqrt() (in module ttnn)": [[372, "ttnn.sqrt"]], "sqrt_bw() (in module ttnn)": [[373, "ttnn.sqrt_bw"]], "square() (in module ttnn)": [[374, "ttnn.square"]], "square_bw() (in module ttnn)": [[375, "ttnn.square_bw"]], "squared_difference() (in module ttnn)": [[376, "ttnn.squared_difference"]], "squared_difference_bw() (in module ttnn)": [[377, "ttnn.squared_difference_bw"]], "std() (in module ttnn)": [[378, "ttnn.std"]], "sub_bw() (in module ttnn)": [[379, "ttnn.sub_bw"]], "subalpha() (in module ttnn)": [[380, "ttnn.subalpha"]], "subalpha_bw() (in module ttnn)": [[381, "ttnn.subalpha_bw"]], "subtract() (in module ttnn)": [[382, "ttnn.subtract"]], "sum() (in module ttnn)": [[383, "ttnn.sum"]], "swiglu() (in module ttnn)": [[384, "ttnn.swiglu"]], "swish() (in module ttnn)": [[385, "ttnn.swish"]], "synchronize_device() (in module ttnn)": [[386, "ttnn.synchronize_device"]], "tan() (in module ttnn)": [[387, "ttnn.tan"]], "tan_bw() (in module ttnn)": [[388, "ttnn.tan_bw"]], "tanh() (in module ttnn)": [[389, "ttnn.tanh"]], "tanh_bw() (in module ttnn)": [[390, "ttnn.tanh_bw"]], "tanhshrink() (in module ttnn)": [[391, "ttnn.tanhshrink"]], "tanhshrink_bw() (in module ttnn)": [[392, "ttnn.tanhshrink_bw"]], "threshold() (in module ttnn)": [[393, "ttnn.threshold"]], "threshold_bw() (in module ttnn)": [[394, "ttnn.threshold_bw"]], "tilize() (in module ttnn)": [[395, "ttnn.tilize"]], "tilize_with_val_padding() (in module ttnn)": [[396, "ttnn.tilize_with_val_padding"]], "tilize_with_zero_padding() (in module ttnn)": [[396, "ttnn.tilize_with_zero_padding"]], "to_device() (in module ttnn)": [[397, "ttnn.to_device"]], "to_layout() (in module ttnn)": [[398, "ttnn.to_layout"]], "to_memory_config() (in module ttnn)": [[399, "ttnn.to_memory_config"]], "to_torch() (in module ttnn)": [[400, "ttnn.to_torch"]], "topk() (in module ttnn)": [[401, "ttnn.topk"]], "attention_softmax() (in module ttnn.transformer)": [[402, "ttnn.transformer.attention_softmax"]], "attention_softmax_() (in module ttnn.transformer)": [[403, "ttnn.transformer.attention_softmax_"]], "concatenate_heads() (in module ttnn.transformer)": [[404, "ttnn.transformer.concatenate_heads"]], "rotary_embedding() (in module ttnn.experimental)": [[405, "ttnn.experimental.rotary_embedding"]], "scaled_dot_product_attention() (in module ttnn.transformer)": [[406, "ttnn.transformer.scaled_dot_product_attention"]], "scaled_dot_product_attention_decode() (in module ttnn.transformer)": [[407, "ttnn.transformer.scaled_dot_product_attention_decode"]], "scaled_dot_product_attention_decode_gqa() (in module ttnn.transformer)": [[408, "ttnn.transformer.scaled_dot_product_attention_decode_gqa"]], "split_query_key_value_and_split_heads() (in module ttnn.transformer)": [[409, "ttnn.transformer.split_query_key_value_and_split_heads"]], "tril() (in module ttnn)": [[410, "ttnn.tril"]], "triu() (in module ttnn)": [[411, "ttnn.triu"]], "trunc() (in module ttnn)": [[412, "ttnn.trunc"]], "trunc_bw() (in module ttnn)": [[413, "ttnn.trunc_bw"]], "untilize() (in module ttnn)": [[414, "ttnn.untilize"]], "untilize_with_halo_v2() (in module ttnn)": [[415, "ttnn.untilize_with_halo_v2"]], "untilize_with_unpadding() (in module ttnn)": [[416, "ttnn.untilize_with_unpadding"]], "upsample() (in module ttnn)": [[417, "ttnn.upsample"]], "var() (in module ttnn)": [[418, "ttnn.var"]], "where() (in module ttnn)": [[419, "ttnn.where"]], "where_bw() (in module ttnn)": [[420, "ttnn.where_bw"]], "xlogy() (in module ttnn)": [[421, "ttnn.xlogy"]], "xlogy_bw() (in module ttnn)": [[422, "ttnn.xlogy_bw"]], "zeros() (in module ttnn)": [[423, "ttnn.zeros"]], "zeros_like() (in module ttnn)": [[424, "ttnn.zeros_like"]]}})